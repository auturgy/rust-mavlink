<?xml version='1.0'?>
<mavlink>
    <include>common.xml</include>
    <!-- note that APM specific messages should use the command id range from 150 to 250, to leave plenty of room for growth of common.xml If you prototype a message here, then you should consider if it is general enough to move into common.xml later -->
    <enums>
        <!-- ardupilot specific MAV_CMD_* commands -->
        <enum name="MAV_CMD">
            <entry name="MAV_CMD_DO_MOTOR_TEST" value="209">
                <description>Mission command to perform motor test</description>
                <param index="1">motor sequence number (a number from 1 to max number of motors on the vehicle)</param>
                <param index="2">throttle type (0=throttle percentage, 1=PWM, 2=pilot throttle channel pass-through. See MOTOR_TEST_THROTTLE_TYPE enum)</param>
                <param index="3">throttle</param>
                <param index="4">timeout (in seconds)</param>
                <param index="5">Empty</param>
                <param index="6">Empty</param>
                <param index="7">Empty</param>
            </entry>

            <entry name="MAV_CMD_DO_GRIPPER" value="211">
                <description>Mission command to operate EPM gripper</description>
                <param index="1">gripper number (a number from 1 to max number of grippers on the vehicle)</param>
                <param index="2">gripper action (0=release, 1=grab. See GRIPPER_ACTIONS enum)</param>
                <param index="3">Empty</param>
                <param index="4">Empty</param>
                <param index="5">Empty</param>
                <param index="6">Empty</param>
                <param index="7">Empty</param>
            </entry>

            <entry name="MAV_CMD_DO_AUTOTUNE_ENABLE" value="212">
                <description>Enable/disable autotune</description>
                <param index="1">enable (1: enable, 0:disable)</param>
                <param index="2">Empty</param>
                <param index="3">Empty</param>
                <param index="4">Empty</param>
                <param index="5">Empty</param>
                <param index="6">Empty</param>
                <param index="7">Empty</param>
            </entry>

            <entry name="MAV_CMD_NAV_ALTITUDE_WAIT" value="83">
                <description>Mission command to wait for an altitude or downwards vertical speed. This is meant for high altitude balloon launches, allowing the aircraft to be idle until either an altitude is reached or a negative vertical speed is reached (indicating early balloon burst). The wiggle time is how often to wiggle the control surfaces to prevent them seizing up.</description>
                <param index="1">altitude (m)</param>
                <param index="2">descent speed (m/s)</param>
                <param index="3">Wiggle Time (s)</param>
                <param index="4">Empty</param>
                <param index="5">Empty</param>
                <param index="6">Empty</param>
                <param index="7">Empty</param>
            </entry>

            <entry name="MAV_CMD_POWER_OFF_INITIATED" value="42000">
                <description>A system wide power-off event has been initiated.</description>
                <param index="1">Empty</param>
                <param index="2">Empty</param>
                <param index="3">Empty</param>
                <param index="4">Empty</param>
                <param index="5">Empty</param>
                <param index="6">Empty</param>
                <param index="7">Empty</param>
            </entry>

            <!-- MAV_CMD_SOLO_BTN_* are here to provide vendor-specific support for 3DR Solo until a better solution is found to atomically make multiple commands with control flow -->
            <entry name="MAV_CMD_SOLO_BTN_FLY_CLICK" value="42001">
                <description>FLY button has been clicked.</description>
                <param index="1">Empty</param>
                <param index="2">Empty</param>
                <param index="3">Empty</param>
                <param index="4">Empty</param>
                <param index="5">Empty</param>
                <param index="6">Empty</param>
                <param index="7">Empty</param>
            </entry>

            <entry name="MAV_CMD_SOLO_BTN_FLY_HOLD" value="42002">
                <description>FLY button has been held for 1.5 seconds.</description>
                <param index="1">Takeoff altitude</param>
                <param index="2">Empty</param>
                <param index="3">Empty</param>
                <param index="4">Empty</param>
                <param index="5">Empty</param>
                <param index="6">Empty</param>
                <param index="7">Empty</param>
            </entry>

            <entry name="MAV_CMD_SOLO_BTN_PAUSE_CLICK" value="42003">
                <description>PAUSE button has been clicked.</description>
                <param index="1">1 if Solo is in a shot mode, 0 otherwise</param>
                <param index="2">Empty</param>
                <param index="3">Empty</param>
                <param index="4">Empty</param>
                <param index="5">Empty</param>
                <param index="6">Empty</param>
                <param index="7">Empty</param>
            </entry>

            <entry name="MAV_CMD_DO_START_MAG_CAL" value="42424">
                <description>Initiate a magnetometer calibration</description>
                <param index="1">uint8_t bitmask of magnetometers (0 means all)</param>
                <param index="2">Automatically retry on failure (0=no retry, 1=retry).</param>
                <param index="3">Save without user input (0=require input, 1=autosave).</param>
                <param index="4">Delay (seconds)</param>
                <param index="5">Autoreboot (0=user reboot, 1=autoreboot)</param>
                <param index="6">Empty</param>
                <param index="7">Empty</param>
            </entry>

            <entry name="MAV_CMD_DO_ACCEPT_MAG_CAL" value="42425">
                <description>Initiate a magnetometer calibration</description>
                <param index="1">uint8_t bitmask of magnetometers (0 means all)</param>
                <param index="2">Empty</param>
                <param index="3">Empty</param>
                <param index="4">Empty</param>
                <param index="5">Empty</param>
                <param index="6">Empty</param>
                <param index="7">Empty</param>
            </entry>

            <entry name="MAV_CMD_DO_CANCEL_MAG_CAL" value="42426">
                <description>Cancel a running magnetometer calibration</description>
                <param index="1">uint8_t bitmask of magnetometers (0 means all)</param>
                <param index="2">Empty</param>
                <param index="3">Empty</param>
                <param index="4">Empty</param>
                <param index="5">Empty</param>
                <param index="6">Empty</param>
                <param index="7">Empty</param>
            </entry>

            <entry name="MAV_CMD_DO_SEND_BANNER" value="42428">
                <description>Reply with the version banner</description>
                <param index="1">Empty</param>
                <param index="2">Empty</param>
                <param index="3">Empty</param>
                <param index="4">Empty</param>
                <param index="5">Empty</param>
                <param index="6">Empty</param>
                <param index="7">Empty</param>
            </entry>

            <entry name="MAV_CMD_GIMBAL_RESET" value="42501">
                <description>Causes the gimbal to reset and boot as if it was just powered on</description>
                <param index="1">Empty</param>
                <param index="2">Empty</param>
                <param index="3">Empty</param>
                <param index="4">Empty</param>
                <param index="5">Empty</param>
                <param index="6">Empty</param>
                <param index="7">Empty</param>
            </entry>

            <entry name="MAV_CMD_SET_FACTORY_TEST_MODE" value="42427">
                <description>Command autopilot to get into factory test/diagnostic mode</description>
                <param index="1">0 means get out of test mode, 1 means get into test mode</param>
                <param index="2">Empty</param>
                <param index="3">Empty</param>
                <param index="4">Empty</param>
                <param index="5">Empty</param>
                <param index="6">Empty</param>
                <param index="7">Empty</param>
            </entry>

            <entry name="MAV_CMD_GIMBAL_AXIS_CALIBRATION_STATUS" value="42502">
                <description>Reports progress and success or failure of gimbal axis calibration procedure</description>
                <param index="1">Gimbal axis we're reporting calibration progress for</param>
                <param index="2">Current calibration progress for this axis, 0x64=100%</param>
                <param index="3">Status of the calibration</param>
                <param index="4">Empty</param>
                <param index="5">Empty</param>
                <param index="6">Empty</param>
                <param index="7">Empty</param>
            </entry>

            <entry name="MAV_CMD_GIMBAL_REQUEST_AXIS_CALIBRATION" value="42503">
                <description>Starts commutation calibration on the gimbal</description>
                <param index="1">Empty</param>
                <param index="2">Empty</param>
                <param index="3">Empty</param>
                <param index="4">Empty</param>
                <param index="5">Empty</param>
                <param index="6">Empty</param>
                <param index="7">Empty</param>
            </entry>

            <entry name="MAV_CMD_GIMBAL_FULL_RESET" value="42505">
                <description>Erases gimbal application and parameters</description>
                <param index="1">Magic number</param>
                <param index="2">Magic number</param>
                <param index="3">Magic number</param>
                <param index="4">Magic number</param>
                <param index="5">Magic number</param>
                <param index="6">Magic number</param>
                <param index="7">Magic number</param>
            </entry>
        </enum>

        <!-- AP_Limits Enums -->
        <enum name="LIMITS_STATE">
            <entry name="LIMITS_INIT" value="0">
                <description>pre-initialization</description>
            </entry>

            <entry name="LIMITS_DISABLED" value="1">
                <description>disabled</description>
            </entry>

            <entry name="LIMITS_ENABLED" value="2">
                <description>checking limits</description>
            </entry>

            <entry name="LIMITS_TRIGGERED" value="3">
                <description>a limit has been breached</description>
            </entry>

            <entry name="LIMITS_RECOVERING" value="4">
                <description>taking action eg. RTL</description>
            </entry>

            <entry name="LIMITS_RECOVERED" value="5">
                <description>we're no longer in breach of a limit</description>
            </entry>
        </enum>

        <!-- AP_Limits Modules - power of 2 (1,2,4,8,16,32 etc) so we can send as bitfield -->
        <enum name="LIMIT_MODULE">
            <entry name="LIMIT_GPSLOCK" value="1">
                <description>pre-initialization</description>
            </entry>

            <entry name="LIMIT_GEOFENCE" value="2">
                <description>disabled</description>
            </entry>

            <entry name="LIMIT_ALTITUDE" value="4">
                <description>checking limits</description>
            </entry>
        </enum>

        <!-- RALLY flags - power of 2 (1,2,4,8,16,32,64,128) so we can send as a bitfield -->
        <enum name="RALLY_FLAGS">
            <description>Flags in RALLY_POINT message</description>
            <entry name="FAVORABLE_WIND" value="1">
                <description>Flag set when requiring favorable winds for landing.</description>
            </entry>

            <entry name="LAND_IMMEDIATELY" value="2">
                <description>Flag set when plane is to immediately descend to break altitude and land without GCS intervention. Flag not set when plane is to loiter at Rally point until commanded to land.</description>
            </entry>
        </enum>

        <!-- parachute action enum -->
        <enum name="PARACHUTE_ACTION">
            <entry name="PARACHUTE_DISABLE" value="0">
                <description>Disable parachute release</description>
            </entry>

            <entry name="PARACHUTE_ENABLE" value="1">
                <description>Enable parachute release</description>
            </entry>

            <entry name="PARACHUTE_RELEASE" value="2">
                <description>Release parachute</description>
            </entry>
        </enum>

        <!-- motor test type enum -->
        <enum name="MOTOR_TEST_THROTTLE_TYPE">
            <entry name="MOTOR_TEST_THROTTLE_PERCENT" value="0">
                <description>throttle as a percentage from 0 ~ 100</description>
            </entry>

            <entry name="MOTOR_TEST_THROTTLE_PWM" value="1">
                <description>throttle as an absolute PWM value (normally in range of 1000~2000)</description>
            </entry>

            <entry name="MOTOR_TEST_THROTTLE_PILOT" value="2">
                <description>throttle pass-through from pilot's transmitter</description>
            </entry>
        </enum>

        <!-- gripper action enum -->
        <enum name="GRIPPER_ACTIONS">
            <description>Gripper actions.</description>
            <entry name="GRIPPER_ACTION_RELEASE" value="0">
                <description>gripper release of cargo</description>
            </entry>

            <entry name="GRIPPER_ACTION_GRAB" value="1">
                <description>gripper grabs onto cargo</description>
            </entry>
        </enum>

        <!-- Camera event types -->
        <enum name="CAMERA_STATUS_TYPES">
            <entry name="CAMERA_STATUS_TYPE_HEARTBEAT" value="0">
                <description>Camera heartbeat, announce camera component ID at 1hz</description>
            </entry>

            <entry name="CAMERA_STATUS_TYPE_TRIGGER" value="1">
                <description>Camera image triggered</description>
            </entry>

            <entry name="CAMERA_STATUS_TYPE_DISCONNECT" value="2">
                <description>Camera connection lost</description>
            </entry>

            <entry name="CAMERA_STATUS_TYPE_ERROR" value="3">
                <description>Camera unknown error</description>
            </entry>

            <entry name="CAMERA_STATUS_TYPE_LOWBATT" value="4">
                <description>Camera battery low. Parameter p1 shows reported voltage</description>
            </entry>

            <entry name="CAMERA_STATUS_TYPE_LOWSTORE" value="5">
                <description>Camera storage low. Parameter p1 shows reported shots remaining</description>
            </entry>

            <entry name="CAMERA_STATUS_TYPE_LOWSTOREV" value="6">
                <description>Camera storage low. Parameter p1 shows reported video minutes remaining</description>
            </entry>
        </enum>

        <!-- camera feedback flags, a little bit of future-proofing -->
        <enum name="CAMERA_FEEDBACK_FLAGS">
            <entry name="CAMERA_FEEDBACK_PHOTO" value="0">
                <description>Shooting photos, not video</description>
            </entry>

            <entry name="CAMERA_FEEDBACK_VIDEO" value="1">
                <description>Shooting video, not stills</description>
            </entry>

            <entry name="CAMERA_FEEDBACK_BADEXPOSURE" value="2">
                <description>Unable to achieve requested exposure (e.g. shutter speed too low)</description>
            </entry>

            <entry name="CAMERA_FEEDBACK_CLOSEDLOOP" value="3">
                <description>Closed loop feedback from camera, we know for sure it has successfully taken a picture</description>
            </entry>

            <entry name="CAMERA_FEEDBACK_OPENLOOP" value="4">
                <description>Open loop camera, an image trigger has been requested but we can't know for sure it has successfully taken a picture</description>
            </entry>
        </enum>

        <!-- Gimbal payload enumerations -->
        <enum name="MAV_MODE_GIMBAL">
            <entry name="MAV_MODE_GIMBAL_UNINITIALIZED" value="0">
                <description>Gimbal is powered on but has not started initializing yet</description>
            </entry>

            <entry name="MAV_MODE_GIMBAL_CALIBRATING_PITCH" value="1">
                <description>Gimbal is currently running calibration on the pitch axis</description>
            </entry>

            <entry name="MAV_MODE_GIMBAL_CALIBRATING_ROLL" value="2">
                <description>Gimbal is currently running calibration on the roll axis</description>
            </entry>

            <entry name="MAV_MODE_GIMBAL_CALIBRATING_YAW" value="3">
                <description>Gimbal is currently running calibration on the yaw axis</description>
            </entry>

            <entry name="MAV_MODE_GIMBAL_INITIALIZED" value="4">
                <description>Gimbal has finished calibrating and initializing, but is relaxed pending reception of first rate command from copter</description>
            </entry>

            <entry name="MAV_MODE_GIMBAL_ACTIVE" value="5">
                <description>Gimbal is actively stabilizing</description>
            </entry>

            <entry name="MAV_MODE_GIMBAL_RATE_CMD_TIMEOUT" value="6">
                <description>Gimbal is relaxed because it missed more than 10 expected rate command messages in a row. Gimbal will move back to active mode when it receives a new rate command</description>
            </entry>
        </enum>

        <enum name="GIMBAL_AXIS">
            <entry name="GIMBAL_AXIS_YAW" value="0">
                <description>Gimbal yaw axis</description>
            </entry>

            <entry name="GIMBAL_AXIS_PITCH" value="1">
                <description>Gimbal pitch axis</description>
            </entry>

            <entry name="GIMBAL_AXIS_ROLL" value="2">
                <description>Gimbal roll axis</description>
            </entry>
        </enum>

        <enum name="GIMBAL_AXIS_CALIBRATION_STATUS">
            <entry name="GIMBAL_AXIS_CALIBRATION_STATUS_IN_PROGRESS" value="0">
                <description>Axis calibration is in progress</description>
            </entry>

            <entry name="GIMBAL_AXIS_CALIBRATION_STATUS_SUCCEEDED" value="1">
                <description>Axis calibration succeeded</description>
            </entry>

            <entry name="GIMBAL_AXIS_CALIBRATION_STATUS_FAILED" value="2">
                <description>Axis calibration failed</description>
            </entry>
        </enum>

        <enum name="GIMBAL_AXIS_CALIBRATION_REQUIRED">
            <entry name="GIMBAL_AXIS_CALIBRATION_REQUIRED_UNKNOWN" value="0">
                <description>Whether or not this axis requires calibration is unknown at this time</description>
            </entry>

            <entry name="GIMBAL_AXIS_CALIBRATION_REQUIRED_TRUE" value="1">
                <description>This axis requires calibration</description>
            </entry>

            <entry name="GIMBAL_AXIS_CALIBRATION_REQUIRED_FALSE" value="2">
                <description>This axis does not require calibration</description>
            </entry>
        </enum>

        <!-- GoPro System Enumerations -->
        <enum name="GOPRO_HEARTBEAT_STATUS">
            <entry name="GOPRO_HEARTBEAT_STATUS_DISCONNECTED" value="0">
                <description>No GoPro connected</description>
            </entry>

            <entry name="GOPRO_HEARTBEAT_STATUS_INCOMPATIBLE" value="1">
                <description>The detected GoPro is not HeroBus compatible</description>
            </entry>

            <entry name="GOPRO_HEARTBEAT_STATUS_CONNECTED" value="2">
                <description>A HeroBus compatible GoPro is connected</description>
            </entry>

            <entry name="GOPRO_HEARTBEAT_STATUS_ERROR" value="3">
                <description>An unrecoverable error was encountered with the connected GoPro, it may require a power cycle</description>
            </entry>
        </enum>

        <enum name="GOPRO_HEARTBEAT_FLAGS">
            <!-- each entry is a mask to test a bit in GOPRO_HEARTBEAT_STATUS.flags -->
            <entry name="GOPRO_FLAG_RECORDING" value="1">
                <description>GoPro is currently recording</description>
            </entry>
        </enum>

        <enum name="GOPRO_REQUEST_STATUS">
            <entry name="GOPRO_REQUEST_SUCCESS" value="0">
                <description>The write message with ID indicated succeeded</description>
            </entry>

            <entry name="GOPRO_REQUEST_FAILED" value="1">
                <description>The write message with ID indicated failed</description>
            </entry>
        </enum>

        <enum name="GOPRO_COMMAND">
            <entry name="GOPRO_COMMAND_POWER" value="0">
                <description>(Get/Set)</description>
            </entry>

            <entry name="GOPRO_COMMAND_CAPTURE_MODE" value="1">
                <description>(Get/Set)</description>
            </entry>

            <entry name="GOPRO_COMMAND_SHUTTER" value="2">
                <description>(___/Set)</description>
            </entry>

            <entry name="GOPRO_COMMAND_BATTERY" value="3">
                <description>(Get/___)</description>
            </entry>

            <entry name="GOPRO_COMMAND_MODEL" value="4">
                <description>(Get/___)</description>
            </entry>

            <entry name="GOPRO_COMMAND_VIDEO_SETTINGS" value="5">
                <description>(Get/Set)</description>
                <!-- Packet structure for the four values is as follows byte 0: GOPRO_RESOLUTION byte 1: GOPRO_FRAME_RATE byte 2: GOPRO_FIELD_OF_VIEW byte 3: GOPRO_VIDEO_SETTINGS_FLAGS -->
            </entry>

            <entry name="GOPRO_COMMAND_LOW_LIGHT" value="6">
                <description>(Get/Set)</description>
            </entry>

            <entry name="GOPRO_COMMAND_PHOTO_RESOLUTION" value="7">
                <description>(Get/Set)</description>
            </entry>

            <entry name="GOPRO_COMMAND_PHOTO_BURST_RATE" value="8">
                <description>(Get/Set)</description>
            </entry>

            <entry name="GOPRO_COMMAND_PROTUNE" value="9">
                <description>(Get/Set)</description>
            </entry>

            <entry name="GOPRO_COMMAND_PROTUNE_WHITE_BALANCE" value="10">
                <description>(Get/Set) Hero 3+ Only</description>
            </entry>

            <entry name="GOPRO_COMMAND_PROTUNE_COLOUR" value="11">
                <description>(Get/Set) Hero 3+ Only</description>
            </entry>

            <entry name="GOPRO_COMMAND_PROTUNE_GAIN" value="12">
                <description>(Get/Set) Hero 3+ Only</description>
            </entry>

            <entry name="GOPRO_COMMAND_PROTUNE_SHARPNESS" value="13">
                <description>(Get/Set) Hero 3+ Only</description>
            </entry>

            <entry name="GOPRO_COMMAND_PROTUNE_EXPOSURE" value="14">
                <description>(Get/Set) Hero 3+ Only</description>
            </entry>

            <entry name="GOPRO_COMMAND_TIME" value="15">
                <description>(Get/Set)</description>
                <!-- Packet structure for the four values is as follows byte 0...3: uint32_t unix timestamp (byte 0 is MSB) -->
            </entry>

            <entry name="GOPRO_COMMAND_CHARGING" value="16">
                <description>(Get/Set)</description>
            </entry>
        </enum>

        <enum name="GOPRO_CAPTURE_MODE">
            <entry name="GOPRO_CAPTURE_MODE_VIDEO" value="0">
                <description>Video mode</description>
            </entry>

            <entry name="GOPRO_CAPTURE_MODE_PHOTO" value="1">
                <description>Photo mode</description>
            </entry>

            <entry name="GOPRO_CAPTURE_MODE_BURST" value="2">
                <description>Burst mode, hero 3+ only</description>
            </entry>

            <entry name="GOPRO_CAPTURE_MODE_TIME_LAPSE" value="3">
                <description>Time lapse mode, hero 3+ only</description>
            </entry>

            <entry name="GOPRO_CAPTURE_MODE_MULTI_SHOT" value="4">
                <description>Multi shot mode, hero 4 only</description>
            </entry>

            <entry name="GOPRO_CAPTURE_MODE_PLAYBACK" value="5">
                <description>Playback mode, hero 4 only, silver only except when LCD or HDMI is connected to black</description>
            </entry>

            <entry name="GOPRO_CAPTURE_MODE_SETUP" value="6">
                <description>Playback mode, hero 4 only</description>
            </entry>

            <entry name="GOPRO_CAPTURE_MODE_UNKNOWN" value="255">
                <description>Mode not yet known</description>
            </entry>
        </enum>

        <enum name="GOPRO_RESOLUTION">
            <entry name="GOPRO_RESOLUTION_480p" value="0">
                <description>848 x 480 (480p)</description>
            </entry>

            <entry name="GOPRO_RESOLUTION_720p" value="1">
                <description>1280 x 720 (720p)</description>
            </entry>

            <entry name="GOPRO_RESOLUTION_960p" value="2">
                <description>1280 x 960 (960p)</description>
            </entry>

            <entry name="GOPRO_RESOLUTION_1080p" value="3">
                <description>1920 x 1080 (1080p)</description>
            </entry>

            <entry name="GOPRO_RESOLUTION_1440p" value="4">
                <description>1920 x 1440 (1440p)</description>
            </entry>

            <entry name="GOPRO_RESOLUTION_2_7k_17_9" value="5">
                <description>2704 x 1440 (2.7k-17:9)</description>
            </entry>

            <entry name="GOPRO_RESOLUTION_2_7k_16_9" value="6">
                <description>2704 x 1524 (2.7k-16:9)</description>
            </entry>

            <entry name="GOPRO_RESOLUTION_2_7k_4_3" value="7">
                <description>2704 x 2028 (2.7k-4:3)</description>
            </entry>

            <entry name="GOPRO_RESOLUTION_4k_16_9" value="8">
                <description>3840 x 2160 (4k-16:9)</description>
            </entry>

            <entry name="GOPRO_RESOLUTION_4k_17_9" value="9">
                <description>4096 x 2160 (4k-17:9)</description>
            </entry>

            <entry name="GOPRO_RESOLUTION_720p_SUPERVIEW" value="10">
                <description>1280 x 720 (720p-SuperView)</description>
            </entry>

            <entry name="GOPRO_RESOLUTION_1080p_SUPERVIEW" value="11">
                <description>1920 x 1080 (1080p-SuperView)</description>
            </entry>

            <entry name="GOPRO_RESOLUTION_2_7k_SUPERVIEW" value="12">
                <description>2704 x 1520 (2.7k-SuperView)</description>
            </entry>

            <entry name="GOPRO_RESOLUTION_4k_SUPERVIEW" value="13">
                <description>3840 x 2160 (4k-SuperView)</description>
            </entry>
        </enum>

        <enum name="GOPRO_FRAME_RATE">
            <entry name="GOPRO_FRAME_RATE_12" value="0">
                <description>12 FPS</description>
            </entry>

            <entry name="GOPRO_FRAME_RATE_15" value="1">
                <description>15 FPS</description>
            </entry>

            <entry name="GOPRO_FRAME_RATE_24" value="2">
                <description>24 FPS</description>
            </entry>

            <entry name="GOPRO_FRAME_RATE_25" value="3">
                <description>25 FPS</description>
            </entry>

            <entry name="GOPRO_FRAME_RATE_30" value="4">
                <description>30 FPS</description>
            </entry>

            <entry name="GOPRO_FRAME_RATE_48" value="5">
                <description>48 FPS</description>
            </entry>

            <entry name="GOPRO_FRAME_RATE_50" value="6">
                <description>50 FPS</description>
            </entry>

            <entry name="GOPRO_FRAME_RATE_60" value="7">
                <description>60 FPS</description>
            </entry>

            <entry name="GOPRO_FRAME_RATE_80" value="8">
                <description>80 FPS</description>
            </entry>

            <entry name="GOPRO_FRAME_RATE_90" value="9">
                <description>90 FPS</description>
            </entry>

            <entry name="GOPRO_FRAME_RATE_100" value="10">
                <description>100 FPS</description>
            </entry>

            <entry name="GOPRO_FRAME_RATE_120" value="11">
                <description>120 FPS</description>
            </entry>

            <entry name="GOPRO_FRAME_RATE_240" value="12">
                <description>240 FPS</description>
            </entry>

            <entry name="GOPRO_FRAME_RATE_12_5" value="13">
                <description>12.5 FPS</description>
            </entry>
        </enum>

        <enum name="GOPRO_FIELD_OF_VIEW">
            <entry name="GOPRO_FIELD_OF_VIEW_WIDE" value="0">
                <description>0x00: Wide</description>
            </entry>

            <entry name="GOPRO_FIELD_OF_VIEW_MEDIUM" value="1">
                <description>0x01: Medium</description>
            </entry>

            <entry name="GOPRO_FIELD_OF_VIEW_NARROW" value="2">
                <description>0x02: Narrow</description>
            </entry>
        </enum>

        <enum name="GOPRO_VIDEO_SETTINGS_FLAGS">
            <entry name="GOPRO_VIDEO_SETTINGS_TV_MODE" value="1">
                <description>0=NTSC, 1=PAL</description>
            </entry>
        </enum>

        <enum name="GOPRO_PHOTO_RESOLUTION">
            <entry name="GOPRO_PHOTO_RESOLUTION_5MP_MEDIUM" value="0">
                <description>5MP Medium</description>
            </entry>

            <entry name="GOPRO_PHOTO_RESOLUTION_7MP_MEDIUM" value="1">
                <description>7MP Medium</description>
            </entry>

            <entry name="GOPRO_PHOTO_RESOLUTION_7MP_WIDE" value="2">
                <description>7MP Wide</description>
            </entry>

            <entry name="GOPRO_PHOTO_RESOLUTION_10MP_WIDE" value="3">
                <description>10MP Wide</description>
            </entry>

            <entry name="GOPRO_PHOTO_RESOLUTION_12MP_WIDE" value="4">
                <description>12MP Wide</description>
            </entry>
        </enum>

        <enum name="GOPRO_PROTUNE_WHITE_BALANCE">
            <entry name="GOPRO_PROTUNE_WHITE_BALANCE_AUTO" value="0">
                <description>Auto</description>
            </entry>

            <entry name="GOPRO_PROTUNE_WHITE_BALANCE_3000K" value="1">
                <description>3000K</description>
            </entry>

            <entry name="GOPRO_PROTUNE_WHITE_BALANCE_5500K" value="2">
                <description>5500K</description>
            </entry>

            <entry name="GOPRO_PROTUNE_WHITE_BALANCE_6500K" value="3">
                <description>6500K</description>
            </entry>

            <entry name="GOPRO_PROTUNE_WHITE_BALANCE_RAW" value="4">
                <description>Camera Raw</description>
            </entry>
        </enum>

        <enum name="GOPRO_PROTUNE_COLOUR">
            <entry name="GOPRO_PROTUNE_COLOUR_STANDARD" value="0">
                <description>Auto</description>
            </entry>

            <entry name="GOPRO_PROTUNE_COLOUR_NEUTRAL" value="1">
                <description>Neutral</description>
            </entry>
        </enum>

        <enum name="GOPRO_PROTUNE_GAIN">
            <entry name="GOPRO_PROTUNE_GAIN_400" value="0">
                <description>ISO 400</description>
            </entry>

            <entry name="GOPRO_PROTUNE_GAIN_800" value="1">
                <description>ISO 800 (Only Hero 4)</description>
            </entry>

            <entry name="GOPRO_PROTUNE_GAIN_1600" value="2">
                <description>ISO 1600</description>
            </entry>

            <entry name="GOPRO_PROTUNE_GAIN_3200" value="3">
                <description>ISO 3200 (Only Hero 4)</description>
            </entry>

            <entry name="GOPRO_PROTUNE_GAIN_6400" value="4">
                <description>ISO 6400</description>
            </entry>
        </enum>

        <enum name="GOPRO_PROTUNE_SHARPNESS">
            <entry name="GOPRO_PROTUNE_SHARPNESS_LOW" value="0">
                <description>Low Sharpness</description>
            </entry>

            <entry name="GOPRO_PROTUNE_SHARPNESS_MEDIUM" value="1">
                <description>Medium Sharpness</description>
            </entry>

            <entry name="GOPRO_PROTUNE_SHARPNESS_HIGH" value="2">
                <description>High Sharpness</description>
            </entry>
        </enum>

        <enum name="GOPRO_PROTUNE_EXPOSURE">
            <entry name="GOPRO_PROTUNE_EXPOSURE_NEG_5_0" value="0">
                <description>-5.0 EV (Hero 3+ Only)</description>
            </entry>

            <entry name="GOPRO_PROTUNE_EXPOSURE_NEG_4_5" value="1">
                <description>-4.5 EV (Hero 3+ Only)</description>
            </entry>

            <entry name="GOPRO_PROTUNE_EXPOSURE_NEG_4_0" value="2">
                <description>-4.0 EV (Hero 3+ Only)</description>
            </entry>

            <entry name="GOPRO_PROTUNE_EXPOSURE_NEG_3_5" value="3">
                <description>-3.5 EV (Hero 3+ Only)</description>
            </entry>

            <entry name="GOPRO_PROTUNE_EXPOSURE_NEG_3_0" value="4">
                <description>-3.0 EV (Hero 3+ Only)</description>
            </entry>

            <entry name="GOPRO_PROTUNE_EXPOSURE_NEG_2_5" value="5">
                <description>-2.5 EV (Hero 3+ Only)</description>
            </entry>

            <entry name="GOPRO_PROTUNE_EXPOSURE_NEG_2_0" value="6">
                <description>-2.0 EV</description>
            </entry>

            <entry name="GOPRO_PROTUNE_EXPOSURE_NEG_1_5" value="7">
                <description>-1.5 EV</description>
            </entry>

            <entry name="GOPRO_PROTUNE_EXPOSURE_NEG_1_0" value="8">
                <description>-1.0 EV</description>
            </entry>

            <entry name="GOPRO_PROTUNE_EXPOSURE_NEG_0_5" value="9">
                <description>-0.5 EV</description>
            </entry>

            <entry name="GOPRO_PROTUNE_EXPOSURE_ZERO" value="10">
                <description>0.0 EV</description>
            </entry>

            <entry name="GOPRO_PROTUNE_EXPOSURE_POS_0_5" value="11">
                <description>+0.5 EV</description>
            </entry>

            <entry name="GOPRO_PROTUNE_EXPOSURE_POS_1_0" value="12">
                <description>+1.0 EV</description>
            </entry>

            <entry name="GOPRO_PROTUNE_EXPOSURE_POS_1_5" value="13">
                <description>+1.5 EV</description>
            </entry>

            <entry name="GOPRO_PROTUNE_EXPOSURE_POS_2_0" value="14">
                <description>+2.0 EV</description>
            </entry>

            <entry name="GOPRO_PROTUNE_EXPOSURE_POS_2_5" value="15">
                <description>+2.5 EV (Hero 3+ Only)</description>
            </entry>

            <entry name="GOPRO_PROTUNE_EXPOSURE_POS_3_0" value="16">
                <description>+3.0 EV (Hero 3+ Only)</description>
            </entry>

            <entry name="GOPRO_PROTUNE_EXPOSURE_POS_3_5" value="17">
                <description>+3.5 EV (Hero 3+ Only)</description>
            </entry>

            <entry name="GOPRO_PROTUNE_EXPOSURE_POS_4_0" value="18">
                <description>+4.0 EV (Hero 3+ Only)</description>
            </entry>

            <entry name="GOPRO_PROTUNE_EXPOSURE_POS_4_5" value="19">
                <description>+4.5 EV (Hero 3+ Only)</description>
            </entry>

            <entry name="GOPRO_PROTUNE_EXPOSURE_POS_5_0" value="20">
                <description>+5.0 EV (Hero 3+ Only)</description>
            </entry>
        </enum>

        <enum name="GOPRO_CHARGING">
            <entry name="GOPRO_CHARGING_DISABLED" value="0">
                <description>Charging disabled</description>
            </entry>

            <entry name="GOPRO_CHARGING_ENABLED" value="1">
                <description>Charging enabled</description>
            </entry>
        </enum>

        <enum name="GOPRO_MODEL">
            <entry name="GOPRO_MODEL_UNKNOWN" value="0">
                <description>Unknown gopro model</description>
            </entry>

            <entry name="GOPRO_MODEL_HERO_3_PLUS_SILVER" value="1">
                <description>Hero 3+ Silver (HeroBus not supported by GoPro)</description>
            </entry>

            <entry name="GOPRO_MODEL_HERO_3_PLUS_BLACK" value="2">
                <description>Hero 3+ Black</description>
            </entry>

            <entry name="GOPRO_MODEL_HERO_4_SILVER" value="3">
                <description>Hero 4 Silver</description>
            </entry>

            <entry name="GOPRO_MODEL_HERO_4_BLACK" value="4">
                <description>Hero 4 Black</description>
            </entry>
        </enum>

        <enum name="GOPRO_BURST_RATE">
            <entry name="GOPRO_BURST_RATE_3_IN_1_SECOND" value="0">
                <description>3 Shots / 1 Second</description>
            </entry>

            <entry name="GOPRO_BURST_RATE_5_IN_1_SECOND" value="1">
                <description>5 Shots / 1 Second</description>
            </entry>

            <entry name="GOPRO_BURST_RATE_10_IN_1_SECOND" value="2">
                <description>10 Shots / 1 Second</description>
            </entry>

            <entry name="GOPRO_BURST_RATE_10_IN_2_SECOND" value="3">
                <description>10 Shots / 2 Second</description>
            </entry>

            <entry name="GOPRO_BURST_RATE_10_IN_3_SECOND" value="4">
                <description>10 Shots / 3 Second (Hero 4 Only)</description>
            </entry>

            <entry name="GOPRO_BURST_RATE_30_IN_1_SECOND" value="5">
                <description>30 Shots / 1 Second</description>
            </entry>

            <entry name="GOPRO_BURST_RATE_30_IN_2_SECOND" value="6">
                <description>30 Shots / 2 Second</description>
            </entry>

            <entry name="GOPRO_BURST_RATE_30_IN_3_SECOND" value="7">
                <description>30 Shots / 3 Second</description>
            </entry>

            <entry name="GOPRO_BURST_RATE_30_IN_6_SECOND" value="8">
                <description>30 Shots / 6 Second</description>
            </entry>
        </enum>

        <!-- led control pattern enums (enumeration of specific patterns) -->
        <enum name="LED_CONTROL_PATTERN">
            <entry name="LED_CONTROL_PATTERN_OFF" value="0">
                <description>LED patterns off (return control to regular vehicle control)</description>
            </entry>

            <entry name="LED_CONTROL_PATTERN_FIRMWAREUPDATE" value="1">
                <description>LEDs show pattern during firmware update</description>
            </entry>

            <entry name="LED_CONTROL_PATTERN_CUSTOM" value="255">
                <description>Custom Pattern using custom bytes fields</description>
            </entry>
        </enum>

        <!-- EKF_STATUS_FLAGS - these values should be bit-and with the messages flags field to know if flag has been set -->
        <enum name="EKF_STATUS_FLAGS">
            <description>Flags in EKF_STATUS message</description>
            <entry name="EKF_ATTITUDE" value="1">
                <description>set if EKF's attitude estimate is good</description>
            </entry>

            <entry name="EKF_VELOCITY_HORIZ" value="2">
                <description>set if EKF's horizontal velocity estimate is good</description>
            </entry>

            <entry name="EKF_VELOCITY_VERT" value="4">
                <description>set if EKF's vertical velocity estimate is good</description>
            </entry>

            <entry name="EKF_POS_HORIZ_REL" value="8">
                <description>set if EKF's horizontal position (relative) estimate is good</description>
            </entry>

            <entry name="EKF_POS_HORIZ_ABS" value="16">
                <description>set if EKF's horizontal position (absolute) estimate is good</description>
            </entry>

            <entry name="EKF_POS_VERT_ABS" value="32">
                <description>set if EKF's vertical position (absolute) estimate is good</description>
            </entry>

            <entry name="EKF_POS_VERT_AGL" value="64">
                <description>set if EKF's vertical position (above ground) estimate is good</description>
            </entry>

            <entry name="EKF_CONST_POS_MODE" value="128">
                <description>EKF is in constant position mode and does not know it's absolute or relative position</description>
            </entry>

            <entry name="EKF_PRED_POS_HORIZ_REL" value="256">
                <description>set if EKF's predicted horizontal position (relative) estimate is good</description>
            </entry>

            <entry name="EKF_PRED_POS_HORIZ_ABS" value="512">
                <description>set if EKF's predicted horizontal position (absolute) estimate is good</description>
            </entry>
        </enum>

        <enum name="PID_TUNING_AXIS">
            <entry name="PID_TUNING_ROLL" value="1"/>
            <entry name="PID_TUNING_PITCH" value="2"/>
            <entry name="PID_TUNING_YAW" value="3"/>
            <entry name="PID_TUNING_ACCZ" value="4"/>
            <entry name="PID_TUNING_STEER" value="5"/>
        </enum>

        <enum name="MAG_CAL_STATUS">
            <entry name="MAG_CAL_NOT_STARTED" value="0"/>
            <entry name="MAG_CAL_WAITING_TO_START" value="1"/>
            <entry name="MAG_CAL_RUNNING_STEP_ONE" value="2"/>
            <entry name="MAG_CAL_RUNNING_STEP_TWO" value="3"/>
            <entry name="MAG_CAL_SUCCESS" value="4"/>
            <entry name="MAG_CAL_FAILED" value="5"/>
        </enum>

        <enum name="MAV_REMOTE_LOG_DATA_BLOCK_COMMANDS">
            <description>Special ACK block numbers control activation of dataflash log streaming</description>
            <!-- C uses signed integers for enumerations; these constants start at MAX_INT32_T and go down -->
            <!-- 2^31-3 == 2147483645 -->
            <entry name="MAV_REMOTE_LOG_DATA_BLOCK_STOP" value="2147483645">
                <description>UAV to stop sending DataFlash blocks</description>
            </entry>

            <!-- 2^31-2 == 2147483646 -->
            <entry name="MAV_REMOTE_LOG_DATA_BLOCK_START" value="2147483646">
                <description>UAV to start sending DataFlash blocks</description>
            </entry>

            <!-- MAV_REMOTE_LOG_DATA_BLOCK_COMMANDS_ENUM_END will be 2^31-1 == 2147483647 -->
        </enum>

        <enum name="MAV_REMOTE_LOG_DATA_BLOCK_STATUSES">
            <description>Possible remote log data block statuses</description>
            <entry name="MAV_REMOTE_LOG_DATA_BLOCK_NACK" value="0">
                <description>This block has NOT been received</description>
            </entry>

            <entry name="MAV_REMOTE_LOG_DATA_BLOCK_ACK" value="1">
                <description>This block has been received</description>
            </entry>
        </enum>
    </enums>

    <messages>
        <message id="150" name="SENSOR_OFFSETS">
            <description>Offsets and calibrations values for hardware sensors. This makes it easier to debug the calibration process.</description>
            <field name="mag_ofs_x" type="int16_t">magnetometer X offset</field>
            <field name="mag_ofs_y" type="int16_t">magnetometer Y offset</field>
            <field name="mag_ofs_z" type="int16_t">magnetometer Z offset</field>
            <field name="mag_declination" type="float">magnetic declination (radians)</field>
            <field name="raw_press" type="int32_t">raw pressure from barometer</field>
            <field name="raw_temp" type="int32_t">raw temperature from barometer</field>
            <field name="gyro_cal_x" type="float">gyro X calibration</field>
            <field name="gyro_cal_y" type="float">gyro Y calibration</field>
            <field name="gyro_cal_z" type="float">gyro Z calibration</field>
            <field name="accel_cal_x" type="float">accel X calibration</field>
            <field name="accel_cal_y" type="float">accel Y calibration</field>
            <field name="accel_cal_z" type="float">accel Z calibration</field>
        </message>

        <message id="151" name="SET_MAG_OFFSETS">
            <description>Deprecated. Use MAV_CMD_PREFLIGHT_SET_SENSOR_OFFSETS instead. Set the magnetometer offsets</description>
            <field name="target_system" type="uint8_t">System ID</field>
            <field name="target_component" type="uint8_t">Component ID</field>
            <field name="mag_ofs_x" type="int16_t">magnetometer X offset</field>
            <field name="mag_ofs_y" type="int16_t">magnetometer Y offset</field>
            <field name="mag_ofs_z" type="int16_t">magnetometer Z offset</field>
        </message>

        <message id="152" name="MEMINFO">
            <description>state of APM memory</description>
            <field name="brkval" type="uint16_t">heap top</field>
            <field name="freemem" type="uint16_t">free memory</field>
        </message>

        <message id="153" name="AP_ADC">
            <description>raw ADC output</description>
            <field name="adc1" type="uint16_t">ADC output 1</field>
            <field name="adc2" type="uint16_t">ADC output 2</field>
            <field name="adc3" type="uint16_t">ADC output 3</field>
            <field name="adc4" type="uint16_t">ADC output 4</field>
            <field name="adc5" type="uint16_t">ADC output 5</field>
            <field name="adc6" type="uint16_t">ADC output 6</field>
        </message>

        <!-- Camera Controller Messages -->
        <message id="154" name="DIGICAM_CONFIGURE">
            <description>Configure on-board Camera Control System.</description>
            <field name="target_system" type="uint8_t">System ID</field>
            <field name="target_component" type="uint8_t">Component ID</field>
            <field name="mode" type="uint8_t">Mode enumeration from 1 to N //P, TV, AV, M, Etc (0 means ignore)</field>
            <field name="shutter_speed" type="uint16_t">Divisor number //e.g. 1000 means 1/1000 (0 means ignore)</field>
            <field name="aperture" type="uint8_t">F stop number x 10 //e.g. 28 means 2.8 (0 means ignore)</field>
            <field name="iso" type="uint8_t">ISO enumeration from 1 to N //e.g. 80, 100, 200, Etc (0 means ignore)</field>
            <field name="exposure_type" type="uint8_t">Exposure type enumeration from 1 to N (0 means ignore)</field>
            <field name="command_id" type="uint8_t">Command Identity (incremental loop: 0 to 255)//A command sent multiple times will be executed or pooled just once</field>
            <field name="engine_cut_off" type="uint8_t">Main engine cut-off time before camera trigger in seconds/10 (0 means no cut-off)</field>
            <field name="extra_param" type="uint8_t">Extra parameters enumeration (0 means ignore)</field>
            <field name="extra_value" type="float">Correspondent value to given extra_param</field>
        </message>

        <message id="155" name="DIGICAM_CONTROL">
            <description>Control on-board Camera Control System to take shots.</description>
            <field name="target_system" type="uint8_t">System ID</field>
            <field name="target_component" type="uint8_t">Component ID</field>
            <field name="session" type="uint8_t">0: stop, 1: start or keep it up //Session control e.g. show/hide lens</field>
            <field name="zoom_pos" type="uint8_t">1 to N //Zoom's absolute position (0 means ignore)</field>
            <field name="zoom_step" type="int8_t">-100 to 100 //Zooming step value to offset zoom from the current position</field>
            <field name="focus_lock" type="uint8_t">0: unlock focus or keep unlocked, 1: lock focus or keep locked, 3: re-lock focus</field>
            <field name="shot" type="uint8_t">0: ignore, 1: shot or start filming</field>
            <field name="command_id" type="uint8_t">Command Identity (incremental loop: 0 to 255)//A command sent multiple times will be executed or pooled just once</field>
            <field name="extra_param" type="uint8_t">Extra parameters enumeration (0 means ignore)</field>
            <field name="extra_value" type="float">Correspondent value to given extra_param</field>
        </message>

        <!-- Camera Mount Messages -->
        <message id="156" name="MOUNT_CONFIGURE">
            <description>Message to configure a camera mount, directional antenna, etc.</description>
            <field name="target_system" type="uint8_t">System ID</field>
            <field name="target_component" type="uint8_t">Component ID</field>
            <field enum="MAV_MOUNT_MODE" name="mount_mode" type="uint8_t">mount operating mode (see MAV_MOUNT_MODE enum)</field>
            <field name="stab_roll" type="uint8_t">(1 = yes, 0 = no)</field>
            <field name="stab_pitch" type="uint8_t">(1 = yes, 0 = no)</field>
            <field name="stab_yaw" type="uint8_t">(1 = yes, 0 = no)</field>
        </message>

        <message id="157" name="MOUNT_CONTROL">
            <description>Message to control a camera mount, directional antenna, etc.</description>
            <field name="target_system" type="uint8_t">System ID</field>
            <field name="target_component" type="uint8_t">Component ID</field>
            <field name="input_a" type="int32_t">pitch(deg*100) or lat, depending on mount mode</field>
            <field name="input_b" type="int32_t">roll(deg*100) or lon depending on mount mode</field>
            <field name="input_c" type="int32_t">yaw(deg*100) or alt (in cm) depending on mount mode</field>
            <field name="save_position" type="uint8_t">if &quot;1&quot; it will save current trimmed position on EEPROM (just valid for NEUTRAL and LANDING)</field>
        </message>

        <message id="158" name="MOUNT_STATUS">
            <description>Message with some status from APM to GCS about camera or antenna mount</description>
            <field name="target_system" type="uint8_t">System ID</field>
            <field name="target_component" type="uint8_t">Component ID</field>
            <field name="pointing_a" type="int32_t">pitch(deg*100)</field>
            <field name="pointing_b" type="int32_t">roll(deg*100)</field>
            <field name="pointing_c" type="int32_t">yaw(deg*100)</field>
        </message>

        <!-- geo-fence messages -->
        <message id="160" name="FENCE_POINT">
            <description>A fence point. Used to set a point when from GCS -&gt; MAV. Also used to return a point from MAV -&gt; GCS</description>
            <field name="target_system" type="uint8_t">System ID</field>
            <field name="target_component" type="uint8_t">Component ID</field>
            <field name="idx" type="uint8_t">point index (first point is 1, 0 is for return point)</field>
            <field name="count" type="uint8_t">total number of points (for sanity checking)</field>
            <field name="lat" type="float">Latitude of point</field>
            <field name="lng" type="float">Longitude of point</field>
        </message>

        <message id="161" name="FENCE_FETCH_POINT">
            <description>Request a current fence point from MAV</description>
            <field name="target_system" type="uint8_t">System ID</field>
            <field name="target_component" type="uint8_t">Component ID</field>
            <field name="idx" type="uint8_t">point index (first point is 1, 0 is for return point)</field>
        </message>

        <message id="162" name="FENCE_STATUS">
            <description>Status of geo-fencing. Sent in extended status stream when fencing enabled</description>
            <field name="breach_status" type="uint8_t">0 if currently inside fence, 1 if outside</field>
            <field name="breach_count" type="uint16_t">number of fence breaches</field>
            <field enum="FENCE_BREACH" name="breach_type" type="uint8_t">last breach type (see FENCE_BREACH_* enum)</field>
            <field name="breach_time" type="uint32_t">time of last breach in milliseconds since boot</field>
        </message>

        <message id="163" name="AHRS">
            <description>Status of DCM attitude estimator</description>
            <field name="omegaIx" type="float">X gyro drift estimate rad/s</field>
            <field name="omegaIy" type="float">Y gyro drift estimate rad/s</field>
            <field name="omegaIz" type="float">Z gyro drift estimate rad/s</field>
            <field name="accel_weight" type="float">average accel_weight</field>
            <field name="renorm_val" type="float">average renormalisation value</field>
            <field name="error_rp" type="float">average error_roll_pitch value</field>
            <field name="error_yaw" type="float">average error_yaw value</field>
        </message>

        <message id="164" name="SIMSTATE">
            <description>Status of simulation environment, if used</description>
            <field name="roll" type="float">Roll angle (rad)</field>
            <field name="pitch" type="float">Pitch angle (rad)</field>
            <field name="yaw" type="float">Yaw angle (rad)</field>
            <field name="xacc" type="float">X acceleration m/s/s</field>
            <field name="yacc" type="float">Y acceleration m/s/s</field>
            <field name="zacc" type="float">Z acceleration m/s/s</field>
            <field name="xgyro" type="float">Angular speed around X axis rad/s</field>
            <field name="ygyro" type="float">Angular speed around Y axis rad/s</field>
            <field name="zgyro" type="float">Angular speed around Z axis rad/s</field>
            <field name="lat" type="int32_t">Latitude in degrees * 1E7</field>
            <field name="lng" type="int32_t">Longitude in degrees * 1E7</field>
        </message>

        <message id="165" name="HWSTATUS">
            <description>Status of key hardware</description>
            <field name="Vcc" type="uint16_t">board voltage (mV)</field>
            <field name="I2Cerr" type="uint8_t">I2C error count</field>
        </message>

        <message id="166" name="RADIO">
            <description>Status generated by radio</description>
            <field name="rssi" type="uint8_t">local signal strength</field>
            <field name="remrssi" type="uint8_t">remote signal strength</field>
            <field name="txbuf" type="uint8_t">how full the tx buffer is as a percentage</field>
            <field name="noise" type="uint8_t">background noise level</field>
            <field name="remnoise" type="uint8_t">remote background noise level</field>
            <field name="rxerrors" type="uint16_t">receive errors</field>
            <field name="fixed" type="uint16_t">count of error corrected packets</field>
        </message>

        <!-- AP_Limits status -->
        <message id="167" name="LIMITS_STATUS">
            <description>Status of AP_Limits. Sent in extended status stream when AP_Limits is enabled</description>
            <field enum="LIMITS_STATE" name="limits_state" type="uint8_t">state of AP_Limits, (see enum LimitState, LIMITS_STATE)</field>
            <field name="last_trigger" type="uint32_t">time of last breach in milliseconds since boot</field>
            <field name="last_action" type="uint32_t">time of last recovery action in milliseconds since boot</field>
            <field name="last_recovery" type="uint32_t">time of last successful recovery in milliseconds since boot</field>
            <field name="last_clear" type="uint32_t">time of last all-clear in milliseconds since boot</field>
            <field name="breach_count" type="uint16_t">number of fence breaches</field>
            <field name="mods_enabled" type="uint8_t">AP_Limit_Module bitfield of enabled modules, (see enum moduleid or LIMIT_MODULE)</field>
            <field name="mods_required" type="uint8_t">AP_Limit_Module bitfield of required modules, (see enum moduleid or LIMIT_MODULE)</field>
            <field name="mods_triggered" type="uint8_t">AP_Limit_Module bitfield of triggered modules, (see enum moduleid or LIMIT_MODULE)</field>
        </message>

        <message id="168" name="WIND">
            <description>Wind estimation</description>
            <field name="direction" type="float">wind direction that wind is coming from (degrees)</field>
            <field name="speed" type="float">wind speed in ground plane (m/s)</field>
            <field name="speed_z" type="float">vertical wind speed (m/s)</field>
        </message>

        <message id="169" name="DATA16">
            <description>Data packet, size 16</description>
            <field name="type" type="uint8_t">data type</field>
            <field name="len" type="uint8_t">data length</field>
            <field name="data" type="uint8_t[16]">raw data</field>
        </message>

        <message id="170" name="DATA32">
            <description>Data packet, size 32</description>
            <field name="type" type="uint8_t">data type</field>
            <field name="len" type="uint8_t">data length</field>
            <field name="data" type="uint8_t[32]">raw data</field>
        </message>

        <message id="171" name="DATA64">
            <description>Data packet, size 64</description>
            <field name="type" type="uint8_t">data type</field>
            <field name="len" type="uint8_t">data length</field>
            <field name="data" type="uint8_t[64]">raw data</field>
        </message>

        <message id="172" name="DATA96">
            <description>Data packet, size 96</description>
            <field name="type" type="uint8_t">data type</field>
            <field name="len" type="uint8_t">data length</field>
            <field name="data" type="uint8_t[96]">raw data</field>
        </message>

        <message id="173" name="RANGEFINDER">
            <description>Rangefinder reporting</description>
            <field name="distance" type="float">distance in meters</field>
            <field name="voltage" type="float">raw voltage if available, zero otherwise</field>
        </message>

        <message id="174" name="AIRSPEED_AUTOCAL">
            <description>Airspeed auto-calibration</description>
            <field name="vx" type="float">GPS velocity north m/s</field>
            <field name="vy" type="float">GPS velocity east m/s</field>
            <field name="vz" type="float">GPS velocity down m/s</field>
            <field name="diff_pressure" type="float">Differential pressure pascals</field>
            <field name="EAS2TAS" type="float">Estimated to true airspeed ratio</field>
            <field name="ratio" type="float">Airspeed ratio</field>
            <field name="state_x" type="float">EKF state x</field>
            <field name="state_y" type="float">EKF state y</field>
            <field name="state_z" type="float">EKF state z</field>
            <field name="Pax" type="float">EKF Pax</field>
            <field name="Pby" type="float">EKF Pby</field>
            <field name="Pcz" type="float">EKF Pcz</field>
        </message>

        <!-- rally point messages -->
        <message id="175" name="RALLY_POINT">
            <description>A rally point. Used to set a point when from GCS -&gt; MAV. Also used to return a point from MAV -&gt; GCS</description>
            <field name="target_system" type="uint8_t">System ID</field>
            <field name="target_component" type="uint8_t">Component ID</field>
            <field name="idx" type="uint8_t">point index (first point is 0)</field>
            <field name="count" type="uint8_t">total number of points (for sanity checking)</field>
            <field name="lat" type="int32_t">Latitude of point in degrees * 1E7</field>
            <field name="lng" type="int32_t">Longitude of point in degrees * 1E7</field>
            <field name="alt" type="int16_t">Transit / loiter altitude in meters relative to home</field>
            <!-- Path planned landings are still in the future, but we want these fields ready: -->
            <field name="break_alt" type="int16_t">Break altitude in meters relative to home</field>
            <field name="land_dir" type="uint16_t">Heading to aim for when landing. In centi-degrees.</field>
            <field name="flags" type="uint8_t">See RALLY_FLAGS enum for definition of the bitmask.</field>
        </message>

        <message id="176" name="RALLY_FETCH_POINT">
            <description>Request a current rally point from MAV. MAV should respond with a RALLY_POINT message. MAV should not respond if the request is invalid.</description>
            <field name="target_system" type="uint8_t">System ID</field>
            <field name="target_component" type="uint8_t">Component ID</field>
            <field name="idx" type="uint8_t">point index (first point is 0)</field>
        </message>

        <message id="177" name="COMPASSMOT_STATUS">
            <description>Status of compassmot calibration</description>
            <field name="throttle" type="uint16_t">throttle (percent*10)</field>
            <field name="current" type="float">current (amps)</field>
            <field name="interference" type="uint16_t">interference (percent)</field>
            <field name="CompensationX" type="float">Motor Compensation X</field>
            <field name="CompensationY" type="float">Motor Compensation Y</field>
            <field name="CompensationZ" type="float">Motor Compensation Z</field>
        </message>

        <!-- Coming soon <message name="RALLY_LAND_POINT" id="177"> <description>A rally landing point. An aircraft loitering at a rally point may choose one of these points to land at.</description> <field name="target_system" type="uint8_t">System ID</field> <field name="target_component" type="uint8_t">Component ID</field> <field name="idx" type="uint8_t">point index (first point is 0)</field> <field name="count" type="uint8_t">total number of points (for sanity checking)</field> <field name="lat" type="int32_t">Latitude of point</field> <field name="lng" type="int32_t">Longitude of point</field> <field name="alt" type="uint16_t">Ground AGL (usually 0)</field> </message> <message name="RALLY_LAND_FETCH_POINT" id="178"> <description>Request a current rally land point from MAV</description> <field name="target_system" type="uint8_t">System ID</field> <field name="target_component" type="uint8_t">Component ID</field> <field name="idx" type="uint8_t">point index (first point is 0)</field> </message> -->
        <message id="178" name="AHRS2">
            <description>Status of secondary AHRS filter if available</description>
            <field name="roll" type="float">Roll angle (rad)</field>
            <field name="pitch" type="float">Pitch angle (rad)</field>
            <field name="yaw" type="float">Yaw angle (rad)</field>
            <field name="altitude" type="float">Altitude (MSL)</field>
            <field name="lat" type="int32_t">Latitude in degrees * 1E7</field>
            <field name="lng" type="int32_t">Longitude in degrees * 1E7</field>
        </message>

        <!-- camera event message from CCB to autopilot: for image trigger events but also things like heartbeat, error, low power, full card, etc -->
        <message id="179" name="CAMERA_STATUS">
            <description>Camera Event</description>
            <field name="time_usec" type="uint64_t">Image timestamp (microseconds since UNIX epoch, according to camera clock)</field>
            <field name="target_system" type="uint8_t">System ID</field>
            <!-- support multiple concurrent vehicles -->
            <field name="cam_idx" type="uint8_t">Camera ID</field>
            <!-- component ID, to support multiple cameras -->
            <field name="img_idx" type="uint16_t">Image index</field>
            <!-- per camera image index, should be unique+sequential within a mission, preferably non-wrapping -->
            <field name="event_id" type="uint8_t">See CAMERA_STATUS_TYPES enum for definition of the bitmask</field>
            <field name="p1" type="float">Parameter 1 (meaning depends on event, see CAMERA_STATUS_TYPES enum)</field>
            <field name="p2" type="float">Parameter 2 (meaning depends on event, see CAMERA_STATUS_TYPES enum)</field>
            <field name="p3" type="float">Parameter 3 (meaning depends on event, see CAMERA_STATUS_TYPES enum)</field>
            <field name="p4" type="float">Parameter 4 (meaning depends on event, see CAMERA_STATUS_TYPES enum)</field>
        </message>

        <!-- camera feedback message - can be originated from CCB (in response to a CAMERA_STATUS), or directly from the autopilot as part of a DO_DIGICAM_CONTROL-->
        <message id="180" name="CAMERA_FEEDBACK">
            <description>Camera Capture Feedback</description>
            <field name="time_usec" type="uint64_t">Image timestamp (microseconds since UNIX epoch), as passed in by CAMERA_STATUS message (or autopilot if no CCB)</field>
            <field name="target_system" type="uint8_t">System ID</field>
            <!-- support multiple concurrent vehicles -->
            <field name="cam_idx" type="uint8_t">Camera ID</field>
            <!-- component ID, to support multiple cameras -->
            <field name="img_idx" type="uint16_t">Image index</field>
            <!-- per camera image index, should be unique+sequential within a mission, preferably non-wrapping -->
            <field name="lat" type="int32_t">Latitude in (deg * 1E7)</field>
            <field name="lng" type="int32_t">Longitude in (deg * 1E7)</field>
            <field name="alt_msl" type="float">Altitude Absolute (meters AMSL)</field>
            <field name="alt_rel" type="float">Altitude Relative (meters above HOME location)</field>
            <field name="roll" type="float">Camera Roll angle (earth frame, degrees, +-180)</field>
            <!-- initially only supporting fixed cameras, in future we'll need feedback messages from the gimbal so we can include that offset here -->
            <field name="pitch" type="float">Camera Pitch angle (earth frame, degrees, +-180)</field>
            <!-- initially only supporting fixed cameras, in future we'll need feedback messages from the gimbal so we can include that offset here -->
            <field name="yaw" type="float">Camera Yaw (earth frame, degrees, 0-360, true)</field>
            <!-- initially only supporting fixed cameras, in future we'll need feedback messages from the gimbal so we can include that offset here -->
            <field name="foc_len" type="float">Focal Length (mm)</field>
            <!-- per-image to support zooms. Zero means fixed focal length or unknown. Should be true mm, not scaled to 35mm film equivalent -->
            <field name="flags" type="uint8_t">See CAMERA_FEEDBACK_FLAGS enum for definition of the bitmask</field>
            <!-- future proofing -->
        </message>

        <message id="181" name="BATTERY2">
            <description>2nd Battery status</description>
            <field name="voltage" type="uint16_t">voltage in millivolts</field>
            <field name="current_battery" type="int16_t">Battery current, in 10*milliamperes (1 = 10 milliampere), -1: autopilot does not measure the current</field>
        </message>

        <message id="182" name="AHRS3">
            <description>Status of third AHRS filter if available. This is for ANU research group (Ali and Sean)</description>
            <field name="roll" type="float">Roll angle (rad)</field>
            <field name="pitch" type="float">Pitch angle (rad)</field>
            <field name="yaw" type="float">Yaw angle (rad)</field>
            <field name="altitude" type="float">Altitude (MSL)</field>
            <field name="lat" type="int32_t">Latitude in degrees * 1E7</field>
            <field name="lng" type="int32_t">Longitude in degrees * 1E7</field>
            <field name="v1" type="float">test variable1</field>
            <field name="v2" type="float">test variable2</field>
            <field name="v3" type="float">test variable3</field>
            <field name="v4" type="float">test variable4</field>
        </message>

        <message id="183" name="AUTOPILOT_VERSION_REQUEST">
            <description>Request the autopilot version from the system/component.</description>
            <field name="target_system" type="uint8_t">System ID</field>
            <field name="target_component" type="uint8_t">Component ID</field>
        </message>

        <!-- remote log messages -->
        <message id="184" name="REMOTE_LOG_DATA_BLOCK">
            <description>Send a block of log data to remote location</description>
            <field name="target_system" type="uint8_t">System ID</field>
            <field name="target_component" type="uint8_t">Component ID</field>
            <field enum="MAV_REMOTE_LOG_DATA_BLOCK_COMMANDS" name="seqno" type="uint32_t">log data block sequence number</field>
            <field name="data" type="uint8_t[200]">log data block</field>
        </message>

        <message id="185" name="REMOTE_LOG_BLOCK_STATUS">
            <description>Send Status of each log block that autopilot board might have sent</description>
            <field name="target_system" type="uint8_t">System ID</field>
            <field name="target_component" type="uint8_t">Component ID</field>
            <field name="seqno" type="uint32_t">log data block sequence number</field>
            <field enum="MAV_REMOTE_LOG_DATA_BLOCK_STATUSES" name="status" type="uint8_t">log data block status</field>
        </message>

        <message id="186" name="LED_CONTROL">
            <description>Control vehicle LEDs</description>
            <field name="target_system" type="uint8_t">System ID</field>
            <field name="target_component" type="uint8_t">Component ID</field>
            <field name="instance" type="uint8_t">Instance (LED instance to control or 255 for all LEDs)</field>
            <field name="pattern" type="uint8_t">Pattern (see LED_PATTERN_ENUM)</field>
            <field name="custom_len" type="uint8_t">Custom Byte Length</field>
            <field name="custom_bytes" type="uint8_t[24]">Custom Bytes</field>
        </message>

        <message id="191" name="MAG_CAL_PROGRESS">
            <description>Reports progress of compass calibration.</description>
            <field name="compass_id" type="uint8_t">Compass being calibrated</field>
            <field name="cal_mask" type="uint8_t">Bitmask of compasses being calibrated</field>
            <field name="cal_status" type="uint8_t">Status (see MAG_CAL_STATUS enum)</field>
            <field name="attempt" type="uint8_t">Attempt number</field>
            <field name="completion_pct" type="uint8_t">Completion percentage</field>
            <field name="completion_mask" type="uint8_t[10]">Bitmask of sphere sections (see http://en.wikipedia.org/wiki/Geodesic_grid)</field>
            <field name="direction_x" type="float">Body frame direction vector for display</field>
            <field name="direction_y" type="float">Body frame direction vector for display</field>
            <field name="direction_z" type="float">Body frame direction vector for display</field>
        </message>

        <message id="192" name="MAG_CAL_REPORT">
            <description>Reports results of completed compass calibration. Sent until MAG_CAL_ACK received.</description>
            <field name="compass_id" type="uint8_t">Compass being calibrated</field>
            <field name="cal_mask" type="uint8_t">Bitmask of compasses being calibrated</field>
            <field name="cal_status" type="uint8_t">Status (see MAG_CAL_STATUS enum)</field>
            <field name="autosaved" type="uint8_t">0=requires a MAV_CMD_DO_ACCEPT_MAG_CAL, 1=saved to parameters</field>
            <field name="fitness" type="float">RMS milligauss residuals</field>
            <field name="ofs_x" type="float">X offset</field>
            <field name="ofs_y" type="float">Y offset</field>
            <field name="ofs_z" type="float">Z offset</field>
            <field name="diag_x" type="float">X diagonal (matrix 11)</field>
            <field name="diag_y" type="float">Y diagonal (matrix 22)</field>
            <field name="diag_z" type="float">Z diagonal (matrix 33)</field>
            <field name="offdiag_x" type="float">X off-diagonal (matrix 12 and 21)</field>
            <field name="offdiag_y" type="float">Y off-diagonal (matrix 13 and 31)</field>
            <field name="offdiag_z" type="float">Z off-diagonal (matrix 32 and 23)</field>
        </message>

        <!-- EKF status message from autopilot to GCS. -->
        <message id="193" name="EKF_STATUS_REPORT">
            <description>EKF Status message including flags and variances</description>
            <field name="flags" type="uint16_t">Flags</field>
            <!-- supported flags see EKF_STATUS_FLAGS enum -->
            <field name="velocity_variance" type="float">Velocity variance</field>
            <!-- below 0.5 is good, 0.5~0.79 is warning, 0.8 or higher is bad -->
            <field name="pos_horiz_variance" type="float">Horizontal Position variance</field>
            <field name="pos_vert_variance" type="float">Vertical Position variance</field>
            <field name="compass_variance" type="float">Compass variance</field>
            <field name="terrain_alt_variance" type="float">Terrain Altitude variance</field>
        </message>

        <!-- realtime PID tuning message -->
        <message id="194" name="PID_TUNING">
            <description>PID tuning information</description>
            <field enum="PID_TUNING_AXIS" name="axis" type="uint8_t">axis</field>
            <field name="desired" type="float">desired rate (degrees/s)</field>
            <field name="achieved" type="float">achieved rate (degrees/s)</field>
            <field name="FF" type="float">FF component</field>
            <field name="P" type="float">P component</field>
            <field name="I" type="float">I component</field>
            <field name="D" type="float">D component</field>
        </message>

        <message id="200" name="GIMBAL_REPORT">
            <description>3 axis gimbal mesuraments</description>
            <field name="target_system" type="uint8_t">System ID</field>
            <field name="target_component" type="uint8_t">Component ID</field>
            <field name="delta_time" type="float">Time since last update (seconds)</field>
            <field name="delta_angle_x" type="float">Delta angle X (radians)</field>
            <field name="delta_angle_y" type="float">Delta angle Y (radians)</field>
            <field name="delta_angle_z" type="float">Delta angle X (radians)</field>
            <field name="delta_velocity_x" type="float">Delta velocity X (m/s)</field>
            <field name="delta_velocity_y" type="float">Delta velocity Y (m/s)</field>
            <field name="delta_velocity_z" type="float">Delta velocity Z (m/s)</field>
            <field name="joint_roll" type="float">Joint ROLL (radians)</field>
            <field name="joint_el" type="float">Joint EL (radians)</field>
            <field name="joint_az" type="float">Joint AZ (radians)</field>
        </message>

        <message id="201" name="GIMBAL_CONTROL">
            <description>Control message for rate gimbal</description>
            <field name="target_system" type="uint8_t">System ID</field>
            <field name="target_component" type="uint8_t">Component ID</field>
            <field name="demanded_rate_x" type="float">Demanded angular rate X (rad/s)</field>
            <field name="demanded_rate_y" type="float">Demanded angular rate Y (rad/s)</field>
            <field name="demanded_rate_z" type="float">Demanded angular rate Z (rad/s)</field>
        </message>

        <message id="214" name="GIMBAL_TORQUE_CMD_REPORT">
            <description>100 Hz gimbal torque command telemetry</description>
            <field name="target_system" type="uint8_t">System ID</field>
            <field name="target_component" type="uint8_t">Component ID</field>
            <field name="rl_torque_cmd" type="int16_t">Roll Torque Command</field>
            <field name="el_torque_cmd" type="int16_t">Elevation Torque Command</field>
            <field name="az_torque_cmd" type="int16_t">Azimuth Torque Command</field>
        </message>

        <!-- GoPro Messages -->
        <message id="215" name="GOPRO_HEARTBEAT">
            <description>Heartbeat from a HeroBus attached GoPro</description>
            <field enum="GOPRO_HEARTBEAT_STATUS" name="status" type="uint8_t">Status</field>
            <field enum="GOPRO_CAPTURE_MODE" name="capture_mode" type="uint8_t">Current capture mode</field>
            <field name="flags" type="uint8_t">additional status bits</field>
            <!-- see GOPRO_HEARTBEAT_FLAGS -->
        </message>

        <message id="216" name="GOPRO_GET_REQUEST">
            <description>Request a GOPRO_COMMAND response from the GoPro</description>
            <field name="target_system" type="uint8_t">System ID</field>
            <field name="target_component" type="uint8_t">Component ID</field>
            <field enum="GOPRO_COMMAND" name="cmd_id" type="uint8_t">Command ID</field>
        </message>

        <message id="217" name="GOPRO_GET_RESPONSE">
            <description>Response from a GOPRO_COMMAND get request</description>
            <field enum="GOPRO_COMMAND" name="cmd_id" type="uint8_t">Command ID</field>
            <field enum="GOPRO_REQUEST_STATUS" name="status" type="uint8_t">Status</field>
            <field name="value" type="uint8_t[4]">Value</field>
        </message>

        <message id="218" name="GOPRO_SET_REQUEST">
            <description>Request to set a GOPRO_COMMAND with a desired</description>
            <field name="target_system" type="uint8_t">System ID</field>
            <field name="target_component" type="uint8_t">Component ID</field>
            <field enum="GOPRO_COMMAND" name="cmd_id" type="uint8_t">Command ID</field>
            <field name="value" type="uint8_t[4]">Value</field>
        </message>

        <message id="219" name="GOPRO_SET_RESPONSE">
            <description>Response from a GOPRO_COMMAND set request</description>
            <field enum="GOPRO_COMMAND" name="cmd_id" type="uint8_t">Command ID</field>
            <field enum="GOPRO_REQUEST_STATUS" name="status" type="uint8_t">Status</field>
        </message>

        <!-- 219 to 224 RESERVED for more GOPRO-->
        <message id="226" name="RPM">
            <description>RPM sensor output</description>
            <field name="rpm1" type="float">RPM Sensor1</field>
            <field name="rpm2" type="float">RPM Sensor2</field>
        </message>
    </messages>
     <enums>
          <enum name="MAV_AUTOPILOT">
               <description>Micro air vehicle / autopilot classes. This identifies the individual model.</description>
               <entry value="0" name="MAV_AUTOPILOT_GENERIC">
                    <description>Generic autopilot, full support for everything</description>
               </entry>
               <entry value="1" name="MAV_AUTOPILOT_RESERVED">
                    <description>Reserved for future use.</description>
               </entry>
               <entry value="2" name="MAV_AUTOPILOT_SLUGS">
                    <description>SLUGS autopilot, http://slugsuav.soe.ucsc.edu</description>
               </entry>
               <entry value="3" name="MAV_AUTOPILOT_ARDUPILOTMEGA">
                    <description>ArduPilotMega / ArduCopter, http://diydrones.com</description>
               </entry>
               <entry value="4" name="MAV_AUTOPILOT_OPENPILOT">
                    <description>OpenPilot, http://openpilot.org</description>
               </entry>
               <entry value="5" name="MAV_AUTOPILOT_GENERIC_WAYPOINTS_ONLY">
                    <description>Generic autopilot only supporting simple waypoints</description>
               </entry>
               <entry value="6" name="MAV_AUTOPILOT_GENERIC_WAYPOINTS_AND_SIMPLE_NAVIGATION_ONLY">
                    <description>Generic autopilot supporting waypoints and other simple navigation commands</description>
               </entry>
               <entry value="7" name="MAV_AUTOPILOT_GENERIC_MISSION_FULL">
                    <description>Generic autopilot supporting the full mission command set</description>
               </entry>
               <entry value="8" name="MAV_AUTOPILOT_INVALID">
                    <description>No valid autopilot, e.g. a GCS or other MAVLink component</description>
               </entry>
               <entry value="9" name="MAV_AUTOPILOT_PPZ">
                    <description>PPZ UAV - http://nongnu.org/paparazzi</description>
               </entry>
               <entry value="10" name="MAV_AUTOPILOT_UDB">
                    <description>UAV Dev Board</description>
               </entry>
               <entry value="11" name="MAV_AUTOPILOT_FP">
                    <description>FlexiPilot</description>
               </entry>
               <entry value="12" name="MAV_AUTOPILOT_PX4">
                   <description>PX4 Autopilot - http://pixhawk.ethz.ch/px4/</description>
               </entry>
               <entry value="13" name="MAV_AUTOPILOT_SMACCMPILOT">
                   <description>SMACCMPilot - http://smaccmpilot.org</description>
               </entry>
               <entry value="14" name="MAV_AUTOPILOT_AUTOQUAD">
                    <description>AutoQuad -- http://autoquad.org</description>
               </entry>
               <entry value="15" name="MAV_AUTOPILOT_ARMAZILA">
                    <description>Armazila -- http://armazila.com</description>
               </entry>
               <entry value="16" name="MAV_AUTOPILOT_AEROB">
                    <description>Aerob -- http://aerob.ru</description>
               </entry>
               <entry value="17" name="MAV_AUTOPILOT_ASLUAV">
                    <description>ASLUAV autopilot -- http://www.asl.ethz.ch</description>
               </entry>
          </enum>
          <enum name="MAV_TYPE">
               <entry value="0" name="MAV_TYPE_GENERIC">
                    <description>Generic micro air vehicle.</description>
               </entry>
               <entry value="1" name="MAV_TYPE_FIXED_WING">
                    <description>Fixed wing aircraft.</description>
               </entry>
               <entry value="2" name="MAV_TYPE_QUADROTOR">
                    <description>Quadrotor</description>
               </entry>
               <entry value="3" name="MAV_TYPE_COAXIAL">
                    <description>Coaxial helicopter</description>
               </entry>
               <entry value="4" name="MAV_TYPE_HELICOPTER">
                    <description>Normal helicopter with tail rotor.</description>
               </entry>
               <entry value="5" name="MAV_TYPE_ANTENNA_TRACKER">
                    <description>Ground installation</description>
               </entry>
               <entry value="6" name="MAV_TYPE_GCS">
                    <description>Operator control unit / ground control station</description>
               </entry>
               <entry value="7" name="MAV_TYPE_AIRSHIP">
                    <description>Airship, controlled</description>
               </entry>
               <entry value="8" name="MAV_TYPE_FREE_BALLOON">
                    <description>Free balloon, uncontrolled</description>
               </entry>
               <entry value="9" name="MAV_TYPE_ROCKET">
                    <description>Rocket</description>
               </entry>
               <entry value="10" name="MAV_TYPE_GROUND_ROVER">
                    <description>Ground rover</description>
               </entry>
               <entry value="11" name="MAV_TYPE_SURFACE_BOAT">
                    <description>Surface vessel, boat, ship</description>
               </entry>
               <entry value="12" name="MAV_TYPE_SUBMARINE">
                    <description>Submarine</description>
               </entry>
               <entry value="13" name="MAV_TYPE_HEXAROTOR">
                    <description>Hexarotor</description>
               </entry>
               <entry value="14" name="MAV_TYPE_OCTOROTOR">
                    <description>Octorotor</description>
               </entry>
               <entry value="15" name="MAV_TYPE_TRICOPTER">
                    <description>Octorotor</description>
               </entry>
               <entry value="16" name="MAV_TYPE_FLAPPING_WING">
                    <description>Flapping wing</description>
               </entry>
               <entry value="17" name="MAV_TYPE_KITE">
                    <description>Flapping wing</description>
               </entry>
               <entry value="18" name="MAV_TYPE_ONBOARD_CONTROLLER">
                    <description>Onboard companion controller</description>
               </entry>
               <entry value="19" name="MAV_TYPE_VTOL_DUOROTOR">
                    <description>Two-rotor VTOL using control surfaces in vertical operation in addition. Tailsitter.</description>
               </entry>
               <entry value="20" name="MAV_TYPE_VTOL_QUADROTOR">
                    <description>Quad-rotor VTOL using a V-shaped quad config in vertical operation. Tailsitter.</description>
               </entry>
               <entry value="21" name="MAV_TYPE_VTOL_TILTROTOR">
                    <description>Tiltrotor VTOL</description>
               </entry>
               <!-- Entries up to 25 reserved for other VTOL airframes -->
               <entry value="22" name="MAV_TYPE_VTOL_RESERVED2">
                    <description>VTOL reserved 2</description>
               </entry>
               <entry value="23" name="MAV_TYPE_VTOL_RESERVED3">
                    <description>VTOL reserved 3</description>
               </entry>
               <entry value="24" name="MAV_TYPE_VTOL_RESERVED4">
                    <description>VTOL reserved 4</description>
               </entry>
               <entry value="25" name="MAV_TYPE_VTOL_RESERVED5">
                    <description>VTOL reserved 5</description>
               </entry>
               <entry value="26" name="MAV_TYPE_GIMBAL">
                    <description>Onboard gimbal</description>
               </entry>
               <entry value="27" name="MAV_TYPE_ADSB">
                    <description>Onboard ADSB peripheral</description>
               </entry>
          </enum>
          <enum name="FIRMWARE_VERSION_TYPE">
              <description>These values define the type of firmware release.  These values indicate the first version or release of this type.  For example the first alpha release would be 64, the second would be 65.</description>
              <entry value="0" name="FIRMWARE_VERSION_TYPE_DEV">
                  <description>development release</description>
              </entry>
              <entry value="64" name="FIRMWARE_VERSION_TYPE_ALPHA">
                  <description>alpha release</description>
              </entry>
              <entry value="128" name="FIRMWARE_VERSION_TYPE_BETA">
                  <description>beta release</description>
              </entry>
              <entry value="192" name="FIRMWARE_VERSION_TYPE_RC">
                  <description>release candidate</description>
              </entry>
              <entry value="255" name="FIRMWARE_VERSION_TYPE_OFFICIAL">
                  <description>official stable release</description>
              </entry>
          </enum>
          <!-- WARNING: MAV_ACTION Enum is no longer supported - has been removed. Please use MAV_CMD -->
          <enum name="MAV_MODE_FLAG">
                <description>These flags encode the MAV mode.</description>
                <entry value="128" name="MAV_MODE_FLAG_SAFETY_ARMED">
                     <description>0b10000000 MAV safety set to armed. Motors are enabled / running / can start. Ready to fly.</description>
                </entry>
                <entry value="64" name="MAV_MODE_FLAG_MANUAL_INPUT_ENABLED">
                     <description>0b01000000 remote control input is enabled.</description>
                </entry>
                <entry value="32" name="MAV_MODE_FLAG_HIL_ENABLED">
                      <description>0b00100000 hardware in the loop simulation. All motors / actuators are blocked, but internal software is full operational.</description>
                </entry>
                <entry value="16" name="MAV_MODE_FLAG_STABILIZE_ENABLED">
                     <description>0b00010000 system stabilizes electronically its attitude (and optionally position). It needs however further control inputs to move around.</description>
                </entry>
                <entry value="8" name="MAV_MODE_FLAG_GUIDED_ENABLED">
                     <description>0b00001000 guided mode enabled, system flies MISSIONs / mission items.</description>
                </entry>
                <entry value="4" name="MAV_MODE_FLAG_AUTO_ENABLED">
                     <description>0b00000100 autonomous mode enabled, system finds its own goal positions. Guided flag can be set or not, depends on the actual implementation.</description>
                </entry>
                <entry value="2" name="MAV_MODE_FLAG_TEST_ENABLED">
                     <description>0b00000010 system has a test mode enabled. This flag is intended for temporary system tests and should not be used for stable implementations.</description>
                </entry>
                <entry value="1" name="MAV_MODE_FLAG_CUSTOM_MODE_ENABLED">
                     <description>0b00000001 Reserved for future use.</description>
                </entry>
          </enum>
          <enum name="MAV_MODE_FLAG_DECODE_POSITION">
               <description>These values encode the bit positions of the decode position. These values can be used to read the value of a flag bit by combining the base_mode variable with AND with the flag position value. The result will be either 0 or 1, depending on if the flag is set or not.</description>
                <entry value="128" name="MAV_MODE_FLAG_DECODE_POSITION_SAFETY">
                     <description>First bit:  10000000</description>
                </entry>
                <entry value="64" name="MAV_MODE_FLAG_DECODE_POSITION_MANUAL">
                     <description>Second bit: 01000000</description>
                </entry>
                <entry value="32" name="MAV_MODE_FLAG_DECODE_POSITION_HIL">
                     <description>Third bit:  00100000</description>
                </entry>
                <entry value="16" name="MAV_MODE_FLAG_DECODE_POSITION_STABILIZE">
                     <description>Fourth bit: 00010000</description>
                </entry>
                <entry value="8" name="MAV_MODE_FLAG_DECODE_POSITION_GUIDED">
                     <description>Fifth bit:  00001000</description>
                </entry>
                <entry value="4" name="MAV_MODE_FLAG_DECODE_POSITION_AUTO">
                     <description>Sixt bit:   00000100</description>
                </entry>
                <entry value="2" name="MAV_MODE_FLAG_DECODE_POSITION_TEST">
                     <description>Seventh bit: 00000010</description>
                </entry>
                <entry value="1" name="MAV_MODE_FLAG_DECODE_POSITION_CUSTOM_MODE">
                     <description>Eighth bit: 00000001</description>
                </entry>
          </enum>
          <enum name="MAV_GOTO">
               <description>Override command, pauses current mission execution and moves immediately to a position</description>
               <entry value="0" name="MAV_GOTO_DO_HOLD">
                    <description>Hold at the current position.</description>
               </entry>
               <entry value="1" name="MAV_GOTO_DO_CONTINUE">
                    <description>Continue with the next item in mission execution.</description>
               </entry>
               <entry value="2" name="MAV_GOTO_HOLD_AT_CURRENT_POSITION">
                    <description>Hold at the current position of the system</description>
               </entry>
               <entry value="3" name="MAV_GOTO_HOLD_AT_SPECIFIED_POSITION">
                    <description>Hold at the position specified in the parameters of the DO_HOLD action</description>
               </entry>
          </enum>
          <enum name="MAV_MODE">
               <description>These defines are predefined OR-combined mode flags. There is no need to use values from this enum, but it
               simplifies the use of the mode flags. Note that manual input is enabled in all modes as a safety override.</description>
               <entry value="0" name="MAV_MODE_PREFLIGHT">
                    <description>System is not ready to fly, booting, calibrating, etc. No flag is set.</description>
               </entry>
               <entry value="80" name="MAV_MODE_STABILIZE_DISARMED">
                    <description>System is allowed to be active, under assisted RC control.</description>
               </entry>
               <entry value="208" name="MAV_MODE_STABILIZE_ARMED">
                    <description>System is allowed to be active, under assisted RC control.</description>
               </entry>
               <entry value="64" name="MAV_MODE_MANUAL_DISARMED">
                    <description>System is allowed to be active, under manual (RC) control, no stabilization</description>
               </entry>
               <entry value="192" name="MAV_MODE_MANUAL_ARMED">
                    <description>System is allowed to be active, under manual (RC) control, no stabilization</description>
               </entry>
               <entry value="88" name="MAV_MODE_GUIDED_DISARMED">
                    <description>System is allowed to be active, under autonomous control, manual setpoint</description>
               </entry>
               <entry value="216" name="MAV_MODE_GUIDED_ARMED">
                    <description>System is allowed to be active, under autonomous control, manual setpoint</description>
               </entry>
               <entry value="92" name="MAV_MODE_AUTO_DISARMED">
                    <description>System is allowed to be active, under autonomous control and navigation (the trajectory is decided onboard and not pre-programmed by MISSIONs)</description>
               </entry>
               <entry value="220" name="MAV_MODE_AUTO_ARMED">
                    <description>System is allowed to be active, under autonomous control and navigation (the trajectory is decided onboard and not pre-programmed by MISSIONs)</description>
               </entry>
               <entry value="66" name="MAV_MODE_TEST_DISARMED">
                    <description>UNDEFINED mode. This solely depends on the autopilot - use with caution, intended for developers only.</description>
               </entry>
               <entry value="194" name="MAV_MODE_TEST_ARMED">
                    <description>UNDEFINED mode. This solely depends on the autopilot - use with caution, intended for developers only.</description>
               </entry>
          </enum>
          <enum name="MAV_STATE">
               <entry value="0" name="MAV_STATE_UNINIT">
                    <description>Uninitialized system, state is unknown.</description>
               </entry>
               <entry name="MAV_STATE_BOOT">
                    <description>System is booting up.</description>
               </entry>
               <entry name="MAV_STATE_CALIBRATING">
                    <description>System is calibrating and not flight-ready.</description>
               </entry>
               <entry name="MAV_STATE_STANDBY">
                    <description>System is grounded and on standby. It can be launched any time.</description>
               </entry>
               <entry name="MAV_STATE_ACTIVE">
                    <description>System is active and might be already airborne. Motors are engaged.</description>
               </entry>
               <entry name="MAV_STATE_CRITICAL">
                    <description>System is in a non-normal flight mode. It can however still navigate.</description>
               </entry>
               <entry name="MAV_STATE_EMERGENCY">
                    <description>System is in a non-normal flight mode. It lost control over parts or over the whole airframe. It is in mayday and going down.</description>
               </entry>
               <entry name="MAV_STATE_POWEROFF">
                    <description>System just initialized its power-down sequence, will shut down now.</description>
               </entry>
          </enum>
          <enum name="MAV_COMPONENT">
               <entry value="0" name="MAV_COMP_ID_ALL">
                    <description/>
               </entry>
               <entry value="220" name="MAV_COMP_ID_GPS">
                    <description/>
               </entry>
               <entry value="190" name="MAV_COMP_ID_MISSIONPLANNER">
                    <description/>
               </entry>
               <entry value="195" name="MAV_COMP_ID_PATHPLANNER">
                    <description/>
               </entry>
               <entry value="180" name="MAV_COMP_ID_MAPPER">
                    <description/>
               </entry>
               <entry value="100" name="MAV_COMP_ID_CAMERA">
                    <description/>
               </entry>
               <entry value="200" name="MAV_COMP_ID_IMU">
                    <description/>
               </entry>
               <entry value="201" name="MAV_COMP_ID_IMU_2">
                    <description/>
               </entry>
               <entry value="202" name="MAV_COMP_ID_IMU_3">
                    <description/>
               </entry>
               <entry value="240" name="MAV_COMP_ID_UDP_BRIDGE">
                    <description/>
               </entry>
               <entry value="241" name="MAV_COMP_ID_UART_BRIDGE">
                    <description/>
               </entry>
               <entry value="250" name="MAV_COMP_ID_SYSTEM_CONTROL">
                    <description/>
               </entry>
               <entry value="140" name="MAV_COMP_ID_SERVO1">
                    <description/>
               </entry>
               <entry value="141" name="MAV_COMP_ID_SERVO2">
                    <description/>
               </entry>
               <entry value="142" name="MAV_COMP_ID_SERVO3">
                    <description/>
               </entry>
               <entry value="143" name="MAV_COMP_ID_SERVO4">
                    <description/>
               </entry>
               <entry value="144" name="MAV_COMP_ID_SERVO5">
                    <description/>
               </entry>
               <entry value="145" name="MAV_COMP_ID_SERVO6">
                    <description/>
               </entry>
               <entry value="146" name="MAV_COMP_ID_SERVO7">
                    <description/>
               </entry>
               <entry value="147" name="MAV_COMP_ID_SERVO8">
                    <description/>
               </entry>
               <entry value="148" name="MAV_COMP_ID_SERVO9">
                    <description/>
               </entry>
               <entry value="149" name="MAV_COMP_ID_SERVO10">
                    <description/>
               </entry>
               <entry value="150" name="MAV_COMP_ID_SERVO11">
                    <description/>
               </entry>
               <entry value="151" name="MAV_COMP_ID_SERVO12">
                    <description/>
               </entry>
               <entry value="152" name="MAV_COMP_ID_SERVO13">
                    <description/>
               </entry>
               <entry value="153" name="MAV_COMP_ID_SERVO14">
                    <description/>
               </entry>
               <entry value="154" name="MAV_COMP_ID_GIMBAL">
                    <description/>
               </entry>
               <entry value="155" name="MAV_COMP_ID_ADSB">
                    <description/>
               </entry>
          </enum>
          <enum name="MAV_SYS_STATUS_SENSOR">
               <description>These encode the sensors whose status is sent as part of the SYS_STATUS message.</description>
               <entry value="1" name="MAV_SYS_STATUS_SENSOR_3D_GYRO">
                    <description>0x01 3D gyro</description>
               </entry>
               <entry value="2" name="MAV_SYS_STATUS_SENSOR_3D_ACCEL">
                    <description>0x02 3D accelerometer</description>
               </entry>
               <entry value="4" name="MAV_SYS_STATUS_SENSOR_3D_MAG">
                    <description>0x04 3D magnetometer</description>
               </entry>
               <entry value="8" name="MAV_SYS_STATUS_SENSOR_ABSOLUTE_PRESSURE">
                    <description>0x08 absolute pressure</description>
               </entry>
               <entry value="16" name="MAV_SYS_STATUS_SENSOR_DIFFERENTIAL_PRESSURE">
                    <description>0x10 differential pressure</description>
               </entry>
               <entry value="32" name="MAV_SYS_STATUS_SENSOR_GPS">
                    <description>0x20 GPS</description>
               </entry>
               <entry value="64" name="MAV_SYS_STATUS_SENSOR_OPTICAL_FLOW">
                    <description>0x40 optical flow</description>
               </entry>
               <entry value="128" name="MAV_SYS_STATUS_SENSOR_VISION_POSITION">
                    <description>0x80 computer vision position</description>
               </entry>
               <entry value="256" name="MAV_SYS_STATUS_SENSOR_LASER_POSITION">
                    <description>0x100 laser based position</description>
               </entry>
               <entry value="512" name="MAV_SYS_STATUS_SENSOR_EXTERNAL_GROUND_TRUTH">
                    <description>0x200 external ground truth (Vicon or Leica)</description>
               </entry>
               <entry value="1024" name="MAV_SYS_STATUS_SENSOR_ANGULAR_RATE_CONTROL">
                    <description>0x400 3D angular rate control</description>
               </entry>
               <entry value="2048" name="MAV_SYS_STATUS_SENSOR_ATTITUDE_STABILIZATION">
                    <description>0x800 attitude stabilization</description>
               </entry>
               <entry value="4096" name="MAV_SYS_STATUS_SENSOR_YAW_POSITION">
                    <description>0x1000 yaw position</description>
               </entry>
               <entry value="8192" name="MAV_SYS_STATUS_SENSOR_Z_ALTITUDE_CONTROL">
                    <description>0x2000 z/altitude control</description>
               </entry>
               <entry value="16384" name="MAV_SYS_STATUS_SENSOR_XY_POSITION_CONTROL">
                    <description>0x4000 x/y position control</description>
               </entry>
               <entry value="32768" name="MAV_SYS_STATUS_SENSOR_MOTOR_OUTPUTS">
                    <description>0x8000 motor outputs / control</description>
               </entry>
               <entry value="65536" name="MAV_SYS_STATUS_SENSOR_RC_RECEIVER">
                    <description>0x10000 rc receiver</description>
               </entry>
               <entry value="131072" name="MAV_SYS_STATUS_SENSOR_3D_GYRO2">
                    <description>0x20000 2nd 3D gyro</description>
               </entry>
               <entry value="262144" name="MAV_SYS_STATUS_SENSOR_3D_ACCEL2">
                    <description>0x40000 2nd 3D accelerometer</description>
               </entry>
               <entry value="524288" name="MAV_SYS_STATUS_SENSOR_3D_MAG2">
                    <description>0x80000 2nd 3D magnetometer</description>
               </entry>
               <entry value="1048576" name="MAV_SYS_STATUS_GEOFENCE">
                    <description>0x100000 geofence</description>
               </entry>
               <entry value="2097152" name="MAV_SYS_STATUS_AHRS">
                    <description>0x200000 AHRS subsystem health</description>
               </entry>
               <entry value="4194304" name="MAV_SYS_STATUS_TERRAIN">
                    <description>0x400000 Terrain subsystem health</description>
               </entry>
          </enum>
          <enum name="MAV_FRAME">
               <entry value="0" name="MAV_FRAME_GLOBAL">
                    <description>Global coordinate frame, WGS84 coordinate system. First value / x: latitude, second value / y: longitude, third value / z: positive altitude over mean sea level (MSL)</description>
               </entry>
               <entry value="1" name="MAV_FRAME_LOCAL_NED">
                    <description>Local coordinate frame, Z-up (x: north, y: east, z: down).</description>
               </entry>
               <entry value="2" name="MAV_FRAME_MISSION">
                    <description>NOT a coordinate frame, indicates a mission command.</description>
               </entry>
               <entry value="3" name="MAV_FRAME_GLOBAL_RELATIVE_ALT">
                    <description>Global coordinate frame, WGS84 coordinate system, relative altitude over ground with respect to the home position. First value / x: latitude, second value / y: longitude, third value / z: positive altitude with 0 being at the altitude of the home location.</description>
               </entry>
               <entry value="4" name="MAV_FRAME_LOCAL_ENU">
                    <description>Local coordinate frame, Z-down (x: east, y: north, z: up)</description>
               </entry>
               <entry value="5" name="MAV_FRAME_GLOBAL_INT">
                   <description>Global coordinate frame, WGS84 coordinate system. First value / x: latitude in degrees*1.0e-7, second value / y: longitude in degrees*1.0e-7, third value / z: positive altitude over mean sea level (MSL)</description>
               </entry>
               <entry value="6" name="MAV_FRAME_GLOBAL_RELATIVE_ALT_INT">
                   <description>Global coordinate frame, WGS84 coordinate system, relative altitude over ground with respect to the home position. First value / x: latitude in degrees*10e-7, second value / y: longitude in degrees*10e-7, third value / z: positive altitude with 0 being at the altitude of the home location.</description>
               </entry>
               <entry value="7" name="MAV_FRAME_LOCAL_OFFSET_NED">
                   <description>Offset to the current local frame. Anything expressed in this frame should be added to the current local frame position.</description>
               </entry>
               <entry value="8" name="MAV_FRAME_BODY_NED">
                   <description>Setpoint in body NED frame. This makes sense if all position control is externalized - e.g. useful to command 2 m/s^2 acceleration to the right.</description>
               </entry>
               <entry value="9" name="MAV_FRAME_BODY_OFFSET_NED">
                   <description>Offset in body NED frame. This makes sense if adding setpoints to the current flight path, to avoid an obstacle - e.g. useful to command 2 m/s^2 acceleration to the east.</description>
               </entry>
               <entry value="10" name="MAV_FRAME_GLOBAL_TERRAIN_ALT">
                   <description>Global coordinate frame with above terrain level altitude. WGS84 coordinate system, relative altitude over terrain with respect to the waypoint coordinate. First value / x: latitude in degrees, second value / y: longitude in degrees, third value / z: positive altitude in meters with 0 being at ground level in terrain model.</description>
               </entry>
               <entry value="11" name="MAV_FRAME_GLOBAL_TERRAIN_ALT_INT">
                   <description>Global coordinate frame with above terrain level altitude. WGS84 coordinate system, relative altitude over terrain with respect to the waypoint coordinate. First value / x: latitude in degrees*10e-7, second value / y: longitude in degrees*10e-7, third value / z: positive altitude in meters with 0 being at ground level in terrain model.</description>
               </entry>
          </enum>
          <enum name="MAVLINK_DATA_STREAM_TYPE">
               <entry name="MAVLINK_DATA_STREAM_IMG_JPEG">
                    <description/>
               </entry>
               <entry name="MAVLINK_DATA_STREAM_IMG_BMP">
                    <description/>
               </entry>
               <entry name="MAVLINK_DATA_STREAM_IMG_RAW8U">
                    <description/>
               </entry>
               <entry name="MAVLINK_DATA_STREAM_IMG_RAW32U">
                    <description/>
               </entry>
               <entry name="MAVLINK_DATA_STREAM_IMG_PGM">
                    <description/>
               </entry>
               <entry name="MAVLINK_DATA_STREAM_IMG_PNG">
                    <description/>
               </entry>
          </enum>
          <!-- fenced mode enums -->
          <enum name="FENCE_ACTION">
              <entry name="FENCE_ACTION_NONE" value="0">
                  <description>Disable fenced mode</description>
              </entry>
              <entry name="FENCE_ACTION_GUIDED" value="1">
                  <description>Switched to guided mode to return point (fence point 0)</description>
              </entry>
              <entry name="FENCE_ACTION_REPORT" value="2">
                  <description>Report fence breach, but don't take action</description>
              </entry>
              <entry name="FENCE_ACTION_GUIDED_THR_PASS" value="3">
                  <description>Switched to guided mode to return point (fence point 0) with manual throttle control</description>
              </entry>
          </enum>

          <enum name="FENCE_BREACH">
              <entry name="FENCE_BREACH_NONE" value="0">
                  <description>No last fence breach</description>
              </entry>
              <entry name="FENCE_BREACH_MINALT" value="1">
                  <description>Breached minimum altitude</description>
              </entry>
              <entry name="FENCE_BREACH_MAXALT" value="2">
                  <description>Breached maximum altitude</description>
              </entry>
              <entry name="FENCE_BREACH_BOUNDARY" value="3">
                  <description>Breached fence boundary</description>
              </entry>
          </enum>
          <!-- Camera Mount mode Enumeration -->
          <enum name="MAV_MOUNT_MODE">
              <description>Enumeration of possible mount operation modes</description>
              <entry name="MAV_MOUNT_MODE_RETRACT" value="0"><description>Load and keep safe position (Roll,Pitch,Yaw) from permant memory and stop stabilization</description></entry>
              <entry name="MAV_MOUNT_MODE_NEUTRAL" value="1"><description>Load and keep neutral position (Roll,Pitch,Yaw) from permanent memory.</description></entry>
              <entry name="MAV_MOUNT_MODE_MAVLINK_TARGETING" value="2"><description>Load neutral position and start MAVLink Roll,Pitch,Yaw control with stabilization</description></entry>
              <entry name="MAV_MOUNT_MODE_RC_TARGETING" value="3"><description>Load neutral position and start RC Roll,Pitch,Yaw control with stabilization</description></entry>
              <entry name="MAV_MOUNT_MODE_GPS_POINT" value="4"><description>Load neutral position and start to point to Lat,Lon,Alt</description></entry>
          </enum>
          <enum name="MAV_CMD">
               <description>Commands to be executed by the MAV. They can be executed on user request, or as part of a mission script. If the action is used in a mission, the parameter mapping to the waypoint/mission message is as follows: Param 1, Param 2, Param 3, Param 4, X: Param 5, Y:Param 6, Z:Param 7. This command list is similar what ARINC 424 is for commercial aircraft: A data format how to interpret waypoint/mission data.</description>
               <entry value="16" name="MAV_CMD_NAV_WAYPOINT">
                    <description>Navigate to MISSION.</description>
                    <param index="1">Hold time in decimal seconds. (ignored by fixed wing, time to stay at MISSION for rotary wing)</param>
                    <param index="2">Acceptance radius in meters (if the sphere with this radius is hit, the MISSION counts as reached)</param>
                    <param index="3">0 to pass through the WP, if > 0 radius in meters to pass by WP. Positive value for clockwise orbit, negative value for counter-clockwise orbit. Allows trajectory control.</param>
                    <param index="4">Desired yaw angle at MISSION (rotary wing)</param>
                    <param index="5">Latitude</param>
                    <param index="6">Longitude</param>
                    <param index="7">Altitude</param>
               </entry>
               <entry value="17" name="MAV_CMD_NAV_LOITER_UNLIM">
                    <description>Loiter around this MISSION an unlimited amount of time</description>
                    <param index="1">Empty</param>
                    <param index="2">Empty</param>
                    <param index="3">Radius around MISSION, in meters. If positive loiter clockwise, else counter-clockwise</param>
                    <param index="4">Desired yaw angle.</param>
                    <param index="5">Latitude</param>
                    <param index="6">Longitude</param>
                    <param index="7">Altitude</param>
               </entry>
               <entry value="18" name="MAV_CMD_NAV_LOITER_TURNS">
                    <description>Loiter around this MISSION for X turns</description>
                    <param index="1">Turns</param>
                    <param index="2">Empty</param>
                    <param index="3">Radius around MISSION, in meters. If positive loiter clockwise, else counter-clockwise</param>
                    <param index="4">Desired yaw angle.</param>
                    <param index="5">Latitude</param>
                    <param index="6">Longitude</param>
                    <param index="7">Altitude</param>
               </entry>
               <entry value="19" name="MAV_CMD_NAV_LOITER_TIME">
                    <description>Loiter around this MISSION for X seconds</description>
                    <param index="1">Seconds (decimal)</param>
                    <param index="2">Empty</param>
                    <param index="3">Radius around MISSION, in meters. If positive loiter clockwise, else counter-clockwise</param>
                    <param index="4">Desired yaw angle.</param>
                    <param index="5">Latitude</param>
                    <param index="6">Longitude</param>
                    <param index="7">Altitude</param>
               </entry>
               <entry value="20" name="MAV_CMD_NAV_RETURN_TO_LAUNCH">
                    <description>Return to launch location</description>
                    <param index="1">Empty</param>
                    <param index="2">Empty</param>
                    <param index="3">Empty</param>
                    <param index="4">Empty</param>
                    <param index="5">Empty</param>
                    <param index="6">Empty</param>
                    <param index="7">Empty</param>
               </entry>
               <entry value="21" name="MAV_CMD_NAV_LAND">
                    <description>Land at location</description>
                    <param index="1">Abort Alt</param>
                    <param index="2">Empty</param>
                    <param index="3">Empty</param>
                    <param index="4">Desired yaw angle</param>
                    <param index="5">Latitude</param>
                    <param index="6">Longitude</param>
                    <param index="7">Altitude</param>
               </entry>
               <entry value="22" name="MAV_CMD_NAV_TAKEOFF">
                    <description>Takeoff from ground / hand</description>
                    <param index="1">Minimum pitch (if airspeed sensor present), desired pitch without sensor</param>
                    <param index="2">Empty</param>
                    <param index="3">Empty</param>
                    <param index="4">Yaw angle (if magnetometer present), ignored without magnetometer</param>
                    <param index="5">Latitude</param>
                    <param index="6">Longitude</param>
                    <param index="7">Altitude</param>
               </entry>
               <entry value="23" name="MAV_CMD_NAV_LAND_LOCAL">
                    <description>Land at local position (local frame only)</description>
                    <param index="1">Landing target number (if available)</param>
                    <param index="2">Maximum accepted offset from desired landing position [m] - computed magnitude from spherical coordinates: d = sqrt(x^2 + y^2 + z^2), which gives the maximum accepted distance between the desired landing position and the position where the vehicle is about to land</param>
                    <param index="3">Landing descend rate [ms^-1]</param>
                    <param index="4">Desired yaw angle [rad]</param>
                    <param index="5">Y-axis position [m]</param>
                    <param index="6">X-axis position [m]</param>
                    <param index="7">Z-axis / ground level position [m]</param>
               </entry>
               <entry value="24" name="MAV_CMD_NAV_TAKEOFF_LOCAL">
                    <description>Takeoff from local position (local frame only)</description>
                    <param index="1">Minimum pitch (if airspeed sensor present), desired pitch without sensor [rad]</param>
                    <param index="2">Empty</param>
                    <param index="3">Takeoff ascend rate [ms^-1]</param>
                    <param index="4">Yaw angle [rad] (if magnetometer or another yaw estimation source present), ignored without one of these</param>
                    <param index="5">Y-axis position [m]</param>
                    <param index="6">X-axis position [m]</param>
                    <param index="7">Z-axis position [m]</param>
               </entry>
               <entry value="25" name="MAV_CMD_NAV_FOLLOW">
                    <description>Vehicle following, i.e. this waypoint represents the position of a moving vehicle</description>
                    <param index="1">Following logic to use (e.g. loitering or sinusoidal following) - depends on specific autopilot implementation</param>
                    <param index="2">Ground speed of vehicle to be followed</param>
                    <param index="3">Radius around MISSION, in meters. If positive loiter clockwise, else counter-clockwise</param>
                    <param index="4">Desired yaw angle.</param>
                    <param index="5">Latitude</param>
                    <param index="6">Longitude</param>
                    <param index="7">Altitude</param>
               </entry>
               <entry value="30" name="MAV_CMD_NAV_CONTINUE_AND_CHANGE_ALT">
                   <description>Continue on the current course and climb/descend to specified altitude.  When the altitude is reached continue to the next command (i.e., don't proceed to the next command until the desired altitude is reached.</description>
                    <param index="1">Empty</param>
                    <param index="2">Empty</param>
                    <param index="3">Empty</param>
                    <param index="4">Empty</param>
                    <param index="5">Empty</param>
                    <param index="6">Empty</param>
                    <param index="7">Desired altitude in meters</param>
               </entry>
                <entry value="31" name="MAV_CMD_NAV_LOITER_TO_ALT">
                    <description>Begin loiter at the specified Latitude and Longitude.  If Lat=Lon=0, then loiter at the current position.  Don't consider the navigation command complete (don't leave loiter) until the altitude has been reached.  Additionally, if the Heading Required parameter is non-zero the  aircraft will not leave the loiter until heading toward the next waypoint. </description>
                    <param index="1">Heading Required (0 = False)</param>
                    <param index="2">Radius in meters. If positive loiter clockwise, negative counter-clockwise, 0 means no change to standard loiter.</param>
                    <param index="3">Empty</param>
                    <param index="4">Empty</param>
                    <param index="5">Latitude</param>
                    <param index="6">Longitude</param>
                    <param index="7">Altitude</param>
               </entry>
               <entry value="80" name="MAV_CMD_NAV_ROI">
                    <description>Sets the region of interest (ROI) for a sensor set or the vehicle itself. This can then be used by the vehicles control system to control the vehicle attitude and the attitude of various sensors such as cameras.</description>
                    <param index="1">Region of intereset mode. (see MAV_ROI enum)</param>
                    <param index="2">MISSION index/ target ID. (see MAV_ROI enum)</param>
                    <param index="3">ROI index (allows a vehicle to manage multiple ROI's)</param>
                    <param index="4">Empty</param>
                    <param index="5">x the location of the fixed ROI (see MAV_FRAME)</param>
                    <param index="6">y</param>
                    <param index="7">z</param>
               </entry>
               <entry value="81" name="MAV_CMD_NAV_PATHPLANNING">
                    <description>Control autonomous path planning on the MAV.</description>
                    <param index="1">0: Disable local obstacle avoidance / local path planning (without resetting map), 1: Enable local path planning, 2: Enable and reset local path planning</param>
                    <param index="2">0: Disable full path planning (without resetting map), 1: Enable, 2: Enable and reset map/occupancy grid, 3: Enable and reset planned route, but not occupancy grid</param>
                    <param index="3">Empty</param>
                    <param index="4">Yaw angle at goal, in compass degrees, [0..360]</param>
                    <param index="5">Latitude/X of goal</param>
                    <param index="6">Longitude/Y of goal</param>
                    <param index="7">Altitude/Z of goal</param>
               </entry>
               <entry value="82" name="MAV_CMD_NAV_SPLINE_WAYPOINT">
                    <description>Navigate to MISSION using a spline path.</description>
                    <param index="1">Hold time in decimal seconds. (ignored by fixed wing, time to stay at MISSION for rotary wing)</param>
                    <param index="2">Empty</param>
                    <param index="3">Empty</param>
                    <param index="4">Empty</param>
                    <param index="5">Latitude/X of goal</param>
                    <param index="6">Longitude/Y of goal</param>
                    <param index="7">Altitude/Z of goal</param>
               </entry>

               <!-- IDs 90 and 91 are reserved until the end of 2014,
                    as they were used in some conflicting proposals
                    between PX4 and ardupilot and need to be kept
                    unused to prevent errors -->

               <entry value="92" name="MAV_CMD_NAV_GUIDED_ENABLE">
                    <description>hand control over to an external controller</description>
                    <param index="1">On / Off (> 0.5f on)</param>
                    <param index="2">Empty</param>
                    <param index="3">Empty</param>
                    <param index="4">Empty</param>
                    <param index="5">Empty</param>
                    <param index="6">Empty</param>
                    <param index="7">Empty</param>
               </entry>
               <entry value="95" name="MAV_CMD_NAV_LAST">
                    <description>NOP - This command is only used to mark the upper limit of the NAV/ACTION commands in the enumeration</description>
                    <param index="1">Empty</param>
                    <param index="2">Empty</param>
                    <param index="3">Empty</param>
                    <param index="4">Empty</param>
                    <param index="5">Empty</param>
                    <param index="6">Empty</param>
                    <param index="7">Empty</param>
               </entry>
               <entry value="112" name="MAV_CMD_CONDITION_DELAY">
                    <description>Delay mission state machine.</description>
                    <param index="1">Delay in seconds (decimal)</param>
                    <param index="2">Empty</param>
                    <param index="3">Empty</param>
                    <param index="4">Empty</param>
                    <param index="5">Empty</param>
                    <param index="6">Empty</param>
                    <param index="7">Empty</param>
               </entry>
               <entry value="113" name="MAV_CMD_CONDITION_CHANGE_ALT">
                    <description>Ascend/descend at rate.  Delay mission state machine until desired altitude reached.</description>
                    <param index="1">Descent / Ascend rate (m/s)</param>
                    <param index="2">Empty</param>
                    <param index="3">Empty</param>
                    <param index="4">Empty</param>
                    <param index="5">Empty</param>
                    <param index="6">Empty</param>
                    <param index="7">Finish Altitude</param>
               </entry>
               <entry value="114" name="MAV_CMD_CONDITION_DISTANCE">
                    <description>Delay mission state machine until within desired distance of next NAV point.</description>
                    <param index="1">Distance (meters)</param>
                    <param index="2">Empty</param>
                    <param index="3">Empty</param>
                    <param index="4">Empty</param>
                    <param index="5">Empty</param>
                    <param index="6">Empty</param>
                    <param index="7">Empty</param>
               </entry>
               <entry value="115" name="MAV_CMD_CONDITION_YAW">
                    <description>Reach a certain target angle.</description>
                    <param index="1">target angle: [0-360], 0 is north</param>
                    <param index="2">speed during yaw change:[deg per second]</param>
                    <param index="3">direction: negative: counter clockwise, positive: clockwise [-1,1]</param>
                    <param index="4">relative offset or absolute angle: [ 1,0]</param>
                    <param index="5">Empty</param>
                    <param index="6">Empty</param>
                    <param index="7">Empty</param>
               </entry>
               <entry value="159" name="MAV_CMD_CONDITION_LAST">
                    <description>NOP - This command is only used to mark the upper limit of the CONDITION commands in the enumeration</description>
                    <param index="1">Empty</param>
                    <param index="2">Empty</param>
                    <param index="3">Empty</param>
                    <param index="4">Empty</param>
                    <param index="5">Empty</param>
                    <param index="6">Empty</param>
                    <param index="7">Empty</param>
               </entry>
               <entry value="176" name="MAV_CMD_DO_SET_MODE">
                    <description>Set system mode.</description>
                    <param index="1">Mode, as defined by ENUM MAV_MODE</param>
                    <param index="2">Custom mode - this is system specific, please refer to the individual autopilot specifications for details.</param>
                    <param index="3">Custom sub mode - this is system specific, please refer to the individual autopilot specifications for details.</param>
                    <param index="4">Empty</param>
                    <param index="5">Empty</param>
                    <param index="6">Empty</param>
                    <param index="7">Empty</param>
               </entry>
               <entry value="177" name="MAV_CMD_DO_JUMP">
                    <description>Jump to the desired command in the mission list.  Repeat this action only the specified number of times</description>
                    <param index="1">Sequence number</param>
                    <param index="2">Repeat count</param>
                    <param index="3">Empty</param>
                    <param index="4">Empty</param>
                    <param index="5">Empty</param>
                    <param index="6">Empty</param>
                    <param index="7">Empty</param>
               </entry>
               <entry value="178" name="MAV_CMD_DO_CHANGE_SPEED">
                    <description>Change speed and/or throttle set points.</description>
                    <param index="1">Speed type (0=Airspeed, 1=Ground Speed)</param>
                    <param index="2">Speed  (m/s, -1 indicates no change)</param>
                    <param index="3">Throttle  ( Percent, -1 indicates no change)</param>
                    <param index="4">Empty</param>
                    <param index="5">Empty</param>
                    <param index="6">Empty</param>
                    <param index="7">Empty</param>
               </entry>
               <entry value="179" name="MAV_CMD_DO_SET_HOME">
                    <description>Changes the home location either to the current location or a specified location.</description>
                    <param index="1">Use current (1=use current location, 0=use specified location)</param>
                    <param index="2">Empty</param>
                    <param index="3">Empty</param>
                    <param index="4">Empty</param>
                    <param index="5">Latitude</param>
                    <param index="6">Longitude</param>
                    <param index="7">Altitude</param>
               </entry>
               <entry value="180" name="MAV_CMD_DO_SET_PARAMETER">
                    <description>Set a system parameter.  Caution!  Use of this command requires knowledge of the numeric enumeration value of the parameter.</description>
                    <param index="1">Parameter number</param>
                    <param index="2">Parameter value</param>
                    <param index="3">Empty</param>
                    <param index="4">Empty</param>
                    <param index="5">Empty</param>
                    <param index="6">Empty</param>
                    <param index="7">Empty</param>
               </entry>
               <entry value="181" name="MAV_CMD_DO_SET_RELAY">
                    <description>Set a relay to a condition.</description>
                    <param index="1">Relay number</param>
                    <param index="2">Setting (1=on, 0=off, others possible depending on system hardware)</param>
                    <param index="3">Empty</param>
                    <param index="4">Empty</param>
                    <param index="5">Empty</param>
                    <param index="6">Empty</param>
                    <param index="7">Empty</param>
               </entry>
               <entry value="182" name="MAV_CMD_DO_REPEAT_RELAY">
                    <description>Cycle a relay on and off for a desired number of cyles with a desired period.</description>
                    <param index="1">Relay number</param>
                    <param index="2">Cycle count</param>
                    <param index="3">Cycle time (seconds, decimal)</param>
                    <param index="4">Empty</param>
                    <param index="5">Empty</param>
                    <param index="6">Empty</param>
                    <param index="7">Empty</param>
               </entry>
               <entry value="183" name="MAV_CMD_DO_SET_SERVO">
                    <description>Set a servo to a desired PWM value.</description>
                    <param index="1">Servo number</param>
                    <param index="2">PWM (microseconds, 1000 to 2000 typical)</param>
                    <param index="3">Empty</param>
                    <param index="4">Empty</param>
                    <param index="5">Empty</param>
                    <param index="6">Empty</param>
                    <param index="7">Empty</param>
               </entry>
               <entry value="184" name="MAV_CMD_DO_REPEAT_SERVO">
                    <description>Cycle a between its nominal setting and a desired PWM for a desired number of cycles with a desired period.</description>
                    <param index="1">Servo number</param>
                    <param index="2">PWM (microseconds, 1000 to 2000 typical)</param>
                    <param index="3">Cycle count</param>
                    <param index="4">Cycle time (seconds)</param>
                    <param index="5">Empty</param>
                    <param index="6">Empty</param>
                    <param index="7">Empty</param>
               </entry>
               <entry value="185" name="MAV_CMD_DO_FLIGHTTERMINATION">
                    <description>Terminate flight immediately</description>
                    <param index="1">Flight termination activated if > 0.5</param>
                    <param index="2">Empty</param>
                    <param index="3">Empty</param>
                    <param index="4">Empty</param>
                    <param index="5">Empty</param>
                    <param index="6">Empty</param>
                    <param index="7">Empty</param>
                </entry>
                <entry value="189" name="MAV_CMD_DO_LAND_START">
                    <description>Mission command to perform a landing. This is used as a marker in a mission to tell the autopilot where a sequence of mission items that represents a landing starts. It may also be sent via a COMMAND_LONG to trigger a landing, in which case the nearest (geographically) landing sequence in the mission will be used. The Latitude/Longitude is optional, and may be set to 0/0 if not needed. If specified then it will be used to help find the closest landing sequence.</description>
                    <param index="1">Empty</param>
                    <param index="2">Empty</param>
                    <param index="3">Empty</param>
                    <param index="4">Empty</param>
                    <param index="5">Latitude</param>
                    <param index="6">Longitude</param>
                    <param index="7">Empty</param>
                </entry>
                <entry value="190" name="MAV_CMD_DO_RALLY_LAND">
                    <description>Mission command to perform a landing from a rally point.</description>
                    <param index="1">Break altitude (meters)</param>
                    <param index="2">Landing speed (m/s)</param>
                    <param index="3">Empty</param>
                    <param index="4">Empty</param>
                    <param index="5">Empty</param>
                    <param index="6">Empty</param>
                    <param index="7">Empty</param>
                </entry>
                <entry value="191" name="MAV_CMD_DO_GO_AROUND">
                    <description>Mission command to safely abort an autonmous landing.</description>
                    <param index="1">Altitude (meters)</param>
                    <param index="2">Empty</param>
                    <param index="3">Empty</param>
                    <param index="4">Empty</param>
                    <param index="5">Empty</param>
                    <param index="6">Empty</param>
                    <param index="7">Empty</param>
                </entry>
               <entry value="200" name="MAV_CMD_DO_CONTROL_VIDEO">
                    <description>Control onboard camera system.</description>
                    <param index="1">Camera ID (-1 for all)</param>
                    <param index="2">Transmission: 0: disabled, 1: enabled compressed, 2: enabled raw</param>
                    <param index="3">Transmission mode: 0: video stream, >0: single images every n seconds (decimal)</param>
                    <param index="4">Recording: 0: disabled, 1: enabled compressed, 2: enabled raw</param>
                    <param index="5">Empty</param>
                    <param index="6">Empty</param>
                    <param index="7">Empty</param>
               </entry>
               <entry value="201" name="MAV_CMD_DO_SET_ROI">
                    <description>Sets the region of interest (ROI) for a sensor set or the vehicle itself. This can then be used by the vehicles control system to control the vehicle attitude and the attitude of various sensors such as cameras.</description>
                    <param index="1">Region of intereset mode. (see MAV_ROI enum)</param>
                    <param index="2">MISSION index/ target ID. (see MAV_ROI enum)</param>
                    <param index="3">ROI index (allows a vehicle to manage multiple ROI's)</param>
                    <param index="4">Empty</param>
                    <param index="5">x the location of the fixed ROI (see MAV_FRAME)</param>
                    <param index="6">y</param>
                    <param index="7">z</param>
               </entry>

               <!-- Camera Controller Mission Commands Enumeration -->
               <entry name="MAV_CMD_DO_DIGICAM_CONFIGURE" value="202">
                   <description>Mission command to configure an on-board camera controller system.</description>
                   <param index="1">Modes: P, TV, AV, M, Etc</param>
                   <param index="2">Shutter speed: Divisor number for one second</param>
                   <param index="3">Aperture: F stop number</param>
                   <param index="4">ISO number e.g. 80, 100, 200, Etc</param>
                   <param index="5">Exposure type enumerator</param>
                   <param index="6">Command Identity</param>
                   <param index="7">Main engine cut-off time before camera trigger in seconds/10 (0 means no cut-off)</param>
               </entry>

               <entry name="MAV_CMD_DO_DIGICAM_CONTROL" value="203">
                   <description>Mission command to control an on-board camera controller system.</description>
                   <param index="1">Session control e.g. show/hide lens</param>
                   <param index="2">Zoom's absolute position</param>
                   <param index="3">Zooming step value to offset zoom from the current position</param>
                   <param index="4">Focus Locking, Unlocking or Re-locking</param>
                   <param index="5">Shooting Command</param>
                   <param index="6">Command Identity</param>
                   <param index="7">Empty</param>
               </entry>

               <!-- Camera Mount Mission Commands Enumeration -->
               <entry name="MAV_CMD_DO_MOUNT_CONFIGURE" value="204">
                   <description>Mission command to configure a camera or antenna mount</description>
                   <param index="1">Mount operation mode (see MAV_MOUNT_MODE enum)</param>
                   <param index="2">stabilize roll? (1 = yes, 0 = no)</param>
                   <param index="3">stabilize pitch? (1 = yes, 0 = no)</param>
                   <param index="4">stabilize yaw? (1 = yes, 0 = no)</param>
                   <param index="5">Empty</param>
                   <param index="6">Empty</param>
                   <param index="7">Empty</param>
               </entry>

               <entry name="MAV_CMD_DO_MOUNT_CONTROL" value="205">
                   <description>Mission command to control a camera or antenna mount</description>
                   <param index="1">pitch or lat in degrees, depending on mount mode.</param>
                   <param index="2">roll or lon in degrees depending on mount mode</param>
                   <param index="3">yaw or alt (in meters) depending on mount mode</param>
                   <param index="4">reserved</param>
                   <param index="5">reserved</param>
                   <param index="6">reserved</param>
                   <param index="7">MAV_MOUNT_MODE enum value</param>
               </entry>

               <entry name="MAV_CMD_DO_SET_CAM_TRIGG_DIST" value="206">
                   <description>Mission command to set CAM_TRIGG_DIST for this flight</description>
                   <param index="1">Camera trigger distance (meters)</param>
                   <param index="2">Empty</param>
                   <param index="3">Empty</param>
                   <param index="4">Empty</param>
                   <param index="5">Empty</param>
                   <param index="6">Empty</param>
                   <param index="7">Empty</param>
               </entry>

               <entry name="MAV_CMD_DO_FENCE_ENABLE" value="207">
                   <description>Mission command to enable the geofence</description>
                   <param index="1">enable? (0=disable, 1=enable, 2=disable_floor_only)</param>
                   <param index="2">Empty</param>
                   <param index="3">Empty</param>
                   <param index="4">Empty</param>
                   <param index="5">Empty</param>
                   <param index="6">Empty</param>
                   <param index="7">Empty</param>
               </entry>

               <entry name="MAV_CMD_DO_PARACHUTE" value="208">
                   <description>Mission command to trigger a parachute</description>
                   <param index="1">action (0=disable, 1=enable, 2=release, for some systems see PARACHUTE_ACTION enum, not in general message set.)</param>
                   <param index="2">Empty</param>
                   <param index="3">Empty</param>
                   <param index="4">Empty</param>
                   <param index="5">Empty</param>
                   <param index="6">Empty</param>
                   <param index="7">Empty</param>
               </entry>

               <entry name="MAV_CMD_DO_INVERTED_FLIGHT" value="210">
                   <description>Change to/from inverted flight</description>
                   <param index="1">inverted (0=normal, 1=inverted)</param>
                   <param index="2">Empty</param>
                   <param index="3">Empty</param>
                   <param index="4">Empty</param>
                   <param index="5">Empty</param>
                   <param index="6">Empty</param>
                   <param index="7">Empty</param>
               </entry>

              <entry value="220" name="MAV_CMD_DO_MOUNT_CONTROL_QUAT">
                <description>Mission command to control a camera or antenna mount, using a quaternion as reference.</description>
                <param index="1">q1 - quaternion param #1, w (1 in null-rotation)</param>
                <param index="2">q2 - quaternion param #2, x (0 in null-rotation)</param>
                <param index="3">q3 - quaternion param #3, y (0 in null-rotation)</param>
                <param index="4">q4 - quaternion param #4, z (0 in null-rotation)</param>
                <param index="5">Empty</param>
                <param index="6">Empty</param>
                <param index="7">Empty</param>
              </entry>

               <entry value="221" name="MAV_CMD_DO_GUIDED_MASTER">
                    <description>set id of master controller</description>
                    <param index="1">System ID</param>
                    <param index="2">Component ID</param>
                    <param index="3">Empty</param>
                    <param index="4">Empty</param>
                    <param index="5">Empty</param>
                    <param index="6">Empty</param>
                    <param index="7">Empty</param>
               </entry>

               <entry value="222" name="MAV_CMD_DO_GUIDED_LIMITS">
                 <description>set limits for external control</description>
                 <param index="1">timeout - maximum time (in seconds) that external controller will be allowed to control vehicle. 0 means no timeout</param>
                 <param index="2">absolute altitude min (in meters, AMSL) - if vehicle moves below this alt, the command will be aborted and the mission will continue.  0 means no lower altitude limit</param>
                 <param index="3">absolute altitude max (in meters)- if vehicle moves above this alt, the command will be aborted and the mission will continue.  0 means no upper altitude limit</param>
                 <param index="4">horizontal move limit (in meters, AMSL) - if vehicle moves more than this distance from it's location at the moment the command was executed, the command will be aborted and the mission will continue. 0 means no horizontal altitude limit</param>
                 <param index="5">Empty</param>
                 <param index="6">Empty</param>
                 <param index="7">Empty</param>
               </entry>

               <entry value="240" name="MAV_CMD_DO_LAST">
                    <description>NOP - This command is only used to mark the upper limit of the DO commands in the enumeration</description>
                    <param index="1">Empty</param>
                    <param index="2">Empty</param>
                    <param index="3">Empty</param>
                    <param index="4">Empty</param>
                    <param index="5">Empty</param>
                    <param index="6">Empty</param>
                    <param index="7">Empty</param>
               </entry>
               <entry value="241" name="MAV_CMD_PREFLIGHT_CALIBRATION">
                    <description>Trigger calibration. This command will be only accepted if in pre-flight mode.</description>
                    <param index="1">Gyro calibration: 0: no, 1: yes</param>
                    <param index="2">Magnetometer calibration: 0: no, 1: yes</param>
                    <param index="3">Ground pressure: 0: no, 1: yes</param>
                    <param index="4">Radio calibration: 0: no, 1: yes</param>
                    <param index="5">Accelerometer calibration: 0: no, 1: yes</param>
                    <param index="6">Compass/Motor interference calibration: 0: no, 1: yes</param>
                    <param index="7">Empty</param>
               </entry>
               <entry value="242" name="MAV_CMD_PREFLIGHT_SET_SENSOR_OFFSETS">
                    <description>Set sensor offsets. This command will be only accepted if in pre-flight mode.</description>
                    <param index="1">Sensor to adjust the offsets for: 0: gyros, 1: accelerometer, 2: magnetometer, 3: barometer, 4: optical flow, 5: second magnetometer</param>
                    <param index="2">X axis offset (or generic dimension 1), in the sensor's raw units</param>
                    <param index="3">Y axis offset (or generic dimension 2), in the sensor's raw units</param>
                    <param index="4">Z axis offset (or generic dimension 3), in the sensor's raw units</param>
                    <param index="5">Generic dimension 4, in the sensor's raw units</param>
                    <param index="6">Generic dimension 5, in the sensor's raw units</param>
                    <param index="7">Generic dimension 6, in the sensor's raw units</param>
               </entry>
               <entry value="243" name="MAV_CMD_PREFLIGHT_UAVCAN">
                    <description>Trigger UAVCAN config. This command will be only accepted if in pre-flight mode.</description>
                    <param index="1">1: Trigger actuator ID assignment and direction mapping.</param>
                    <param index="2">Reserved</param>
                    <param index="3">Reserved</param>
                    <param index="4">Reserved</param>
                    <param index="5">Reserved</param>
                    <param index="6">Reserved</param>
                    <param index="7">Reserved</param>
               </entry>
               <entry value="245" name="MAV_CMD_PREFLIGHT_STORAGE">
                    <description>Request storage of different parameter values and logs. This command will be only accepted if in pre-flight mode.</description>
                    <param index="1">Parameter storage: 0: READ FROM FLASH/EEPROM, 1: WRITE CURRENT TO FLASH/EEPROM, 2: Reset to defaults</param>
                    <param index="2">Mission storage: 0: READ FROM FLASH/EEPROM, 1: WRITE CURRENT TO FLASH/EEPROM, 2: Reset to defaults</param>
                    <param index="3">Onboard logging: 0: Ignore, 1: Start default rate logging, -1: Stop logging, > 1: start logging with rate of param 3 in Hz (e.g. set to 1000 for 1000 Hz logging)</param>
                    <param index="4">Reserved</param>
                    <param index="5">Empty</param>
                    <param index="6">Empty</param>
                    <param index="7">Empty</param>
               </entry>
               <entry value="246" name="MAV_CMD_PREFLIGHT_REBOOT_SHUTDOWN">
                    <description>Request the reboot or shutdown of system components.</description>
                    <param index="1">0: Do nothing for autopilot, 1: Reboot autopilot, 2: Shutdown autopilot.</param>
                    <param index="2">0: Do nothing for onboard computer, 1: Reboot onboard computer, 2: Shutdown onboard computer.</param>
                    <param index="3">Reserved</param>
                    <param index="4">Reserved</param>
                    <param index="5">Empty</param>
                    <param index="6">Empty</param>
                    <param index="7">Empty</param>
               </entry>
               <entry value="252" name="MAV_CMD_OVERRIDE_GOTO">
                    <description>Hold / continue the current action</description>
                    <param index="1">MAV_GOTO_DO_HOLD: hold MAV_GOTO_DO_CONTINUE: continue with next item in mission plan</param>
                    <param index="2">MAV_GOTO_HOLD_AT_CURRENT_POSITION: Hold at current position MAV_GOTO_HOLD_AT_SPECIFIED_POSITION: hold at specified position</param>
                    <param index="3">MAV_FRAME coordinate frame of hold point</param>
                    <param index="4">Desired yaw angle in degrees</param>
                    <param index="5">Latitude / X position</param>
                    <param index="6">Longitude / Y position</param>
                    <param index="7">Altitude / Z position</param>
               </entry>
               <entry value="300" name="MAV_CMD_MISSION_START">
                    <description>start running a mission</description>
                    <param index="1">first_item: the first mission item to run</param>
                    <param index="2">last_item:  the last mission item to run (after this item is run, the mission ends)</param>
               </entry>
               <entry value="400" name="MAV_CMD_COMPONENT_ARM_DISARM">
                    <description>Arms / Disarms a component</description>
                    <param index="1">1 to arm, 0 to disarm</param>
               </entry>
               <entry value="410" name="MAV_CMD_GET_HOME_POSITION">
                    <description>Request the home position from the vehicle.</description>
                    <param index="1">Reserved</param>
                    <param index="2">Reserved</param>
                    <param index="3">Reserved</param>
                    <param index="4">Reserved</param>
                    <param index="5">Reserved</param>
                    <param index="6">Reserved</param>
                    <param index="7">Reserved</param>
               </entry>
               <entry value="500" name="MAV_CMD_START_RX_PAIR">
                    <description>Starts receiver pairing</description>
                    <param index="1">0:Spektrum</param>
                    <param index="2">0:Spektrum DSM2, 1:Spektrum DSMX</param>
               </entry>
               <entry value="510" name="MAV_CMD_GET_MESSAGE_INTERVAL">
                    <description>Request the interval between messages for a particular MAVLink message ID</description>
                    <param index="1">The MAVLink message ID</param>
               </entry>
               <entry value="511" name="MAV_CMD_SET_MESSAGE_INTERVAL">
                    <description>Request the interval between messages for a particular MAVLink message ID. This interface replaces REQUEST_DATA_STREAM</description>
                    <param index="1">The MAVLink message ID</param>
                    <param index="2">The interval between two messages, in microseconds. Set to -1 to disable and 0 to request default rate.</param>
               </entry>
               <entry value="520" name="MAV_CMD_REQUEST_AUTOPILOT_CAPABILITIES">
                 <description>Request autopilot capabilities</description>
                 <param index="1">1: Request autopilot version</param>
                 <param index="2">Reserved (all remaining params)</param>
               </entry>
              <entry value="2000" name="MAV_CMD_IMAGE_START_CAPTURE">
                  <description>Start image capture sequence</description>
                  <param index="1">Duration between two consecutive pictures (in seconds)</param>
                  <param index="2">Number of images to capture total - 0 for unlimited capture</param>
                  <param index="3">Resolution in megapixels (0.3 for 640x480, 1.3 for 1280x720, etc)</param>
              </entry>

              <entry value="2001" name="MAV_CMD_IMAGE_STOP_CAPTURE">
                  <description>Stop image capture sequence</description>
                  <param index="1">Reserved</param>
                  <param index="2">Reserved</param>
              </entry>
              
              <entry name="MAV_CMD_DO_TRIGGER_CONTROL" value="2003">
                   <description>Enable or disable on-board camera triggering system.</description>
                   <param index="1">Trigger enable/disable (0 for disable, 1 for start)</param>
                   <param index="2">Shutter integration time (in ms)</param>
                   <param index="3">Reserved</param>
              </entry>

              <entry value="2500" name="MAV_CMD_VIDEO_START_CAPTURE">
                  <description>Starts video capture</description>
                  <param index="1">Camera ID (0 for all cameras), 1 for first, 2 for second, etc.</param>
                  <param index="2">Frames per second</param>
                  <param index="3">Resolution in megapixels (0.3 for 640x480, 1.3 for 1280x720, etc)</param>
              </entry>

              <entry value="2501" name="MAV_CMD_VIDEO_STOP_CAPTURE">
                  <description>Stop the current video capture</description>
                  <param index="1">Reserved</param>
                  <param index="2">Reserved</param>
              </entry>

              <entry value="2800" name="MAV_CMD_PANORAMA_CREATE">
                  <description>Create a panorama at the current position</description>
                  <param index="1">Viewing angle horizontal of the panorama (in degrees, +- 0.5 the total angle)</param>
                  <param index="2">Viewing angle vertical of panorama (in degrees)</param>
                  <param index="3">Speed of the horizontal rotation (in degrees per second)</param>
                  <param index="4">Speed of the vertical rotation (in degrees per second)</param>
              </entry>

              <entry value="3000" name="MAV_CMD_DO_VTOL_TRANSITION">
                  <description>Request VTOL transition</description>
                  <param index="1">The target VTOL state, as defined by ENUM MAV_VTOL_STATE. Only MAV_VTOL_STATE_MC and MAV_VTOL_STATE_FW can be used.</param>
              </entry>

              <!-- VALUES FROM 0-40000 are reserved for the common message set. Values from 40000 to UINT16_MAX are available for dialects -->

              <!-- BEGIN of payload range (30000 to 30999) -->
              <entry value="30001" name="MAV_CMD_PAYLOAD_PREPARE_DEPLOY">
                  <description>Deploy payload on a Lat / Lon / Alt position. This includes the navigation to reach the required release position and velocity.</description>
                  <param index="1">Operation mode. 0: prepare single payload deploy (overwriting previous requests), but do not execute it. 1: execute payload deploy immediately (rejecting further deploy commands during execution, but allowing abort). 2: add payload deploy to existing deployment list.</param>
                  <param index="2">Desired approach vector in degrees compass heading (0..360). A negative value indicates the system can define the approach vector at will.</param>
                  <param index="3">Desired ground speed at release time. This can be overriden by the airframe in case it needs to meet minimum airspeed. A negative value indicates the system can define the ground speed at will.</param>
                  <param index="4">Minimum altitude clearance to the release position in meters. A negative value indicates the system can define the clearance at will.</param>
                  <param index="5">Latitude unscaled for MISSION_ITEM or in 1e7 degrees for MISSION_ITEM_INT</param>
                  <param index="6">Longitude unscaled for MISSION_ITEM or in 1e7 degrees for MISSION_ITEM_INT</param>
                  <param index="7">Altitude, in meters AMSL</param>
              </entry>
              <entry value="30002" name="MAV_CMD_PAYLOAD_CONTROL_DEPLOY">
                  <description>Control the payload deployment.</description>
                  <param index="1">Operation mode. 0: Abort deployment, continue normal mission. 1: switch to payload deploment mode. 100: delete first payload deployment request. 101: delete all payload deployment requests.</param>
                  <param index="2">Reserved</param>
                  <param index="3">Reserved</param>
                  <param index="4">Reserved</param>
                  <param index="5">Reserved</param>
                  <param index="6">Reserved</param>
                  <param index="7">Reserved</param>
              </entry>
              <!-- END of payload range (30000 to 30999) -->
          </enum>
          <enum name="MAV_DATA_STREAM">
               <description>THIS INTERFACE IS DEPRECATED AS OF JULY 2015. Please use MESSAGE_INTERVAL instead. A data stream is not a fixed set of messages, but rather a
     recommendation to the autopilot software. Individual autopilots may or may not obey
     the recommended messages.</description>
               <entry value="0" name="MAV_DATA_STREAM_ALL">
                    <description>Enable all data streams</description>
               </entry>
               <entry value="1" name="MAV_DATA_STREAM_RAW_SENSORS">
                    <description>Enable IMU_RAW, GPS_RAW, GPS_STATUS packets.</description>
               </entry>
               <entry value="2" name="MAV_DATA_STREAM_EXTENDED_STATUS">
                    <description>Enable GPS_STATUS, CONTROL_STATUS, AUX_STATUS</description>
               </entry>
               <entry value="3" name="MAV_DATA_STREAM_RC_CHANNELS">
                    <description>Enable RC_CHANNELS_SCALED, RC_CHANNELS_RAW, SERVO_OUTPUT_RAW</description>
               </entry>
               <entry value="4" name="MAV_DATA_STREAM_RAW_CONTROLLER">
                    <description>Enable ATTITUDE_CONTROLLER_OUTPUT, POSITION_CONTROLLER_OUTPUT, NAV_CONTROLLER_OUTPUT.</description>
               </entry>
               <entry value="6" name="MAV_DATA_STREAM_POSITION">
                    <description>Enable LOCAL_POSITION, GLOBAL_POSITION/GLOBAL_POSITION_INT messages.</description>
               </entry>
               <entry value="10" name="MAV_DATA_STREAM_EXTRA1">
                    <description>Dependent on the autopilot</description>
               </entry>
               <entry value="11" name="MAV_DATA_STREAM_EXTRA2">
                    <description>Dependent on the autopilot</description>
               </entry>
               <entry value="12" name="MAV_DATA_STREAM_EXTRA3">
                    <description>Dependent on the autopilot</description>
               </entry>
          </enum>
          <enum name="MAV_ROI">
               <description> The ROI (region of interest) for the vehicle. This can be
                be used by the vehicle for camera/vehicle attitude alignment (see
                MAV_CMD_NAV_ROI).</description>
               <entry value="0" name="MAV_ROI_NONE">
                    <description>No region of interest.</description>
               </entry>
               <entry value="1" name="MAV_ROI_WPNEXT">
                    <description>Point toward next MISSION.</description>
               </entry>
               <entry value="2" name="MAV_ROI_WPINDEX">
                    <description>Point toward given MISSION.</description>
               </entry>
               <entry value="3" name="MAV_ROI_LOCATION">
                    <description>Point toward fixed location.</description>
               </entry>
               <entry value="4" name="MAV_ROI_TARGET">
                    <description>Point toward of given id.</description>
               </entry>
          </enum>
          <enum name="MAV_CMD_ACK">
               <description>ACK / NACK / ERROR values as a result of MAV_CMDs and for mission item transmission.</description>
               <entry name="MAV_CMD_ACK_OK">
                    <description>Command / mission item is ok.</description>
               </entry>
               <entry name="MAV_CMD_ACK_ERR_FAIL">
                    <description>Generic error message if none of the other reasons fails or if no detailed error reporting is implemented.</description>
               </entry>
               <entry name="MAV_CMD_ACK_ERR_ACCESS_DENIED">
                    <description>The system is refusing to accept this command from this source / communication partner.</description>
               </entry>
               <entry name="MAV_CMD_ACK_ERR_NOT_SUPPORTED">
                    <description>Command or mission item is not supported, other commands would be accepted.</description>
               </entry>
               <entry name="MAV_CMD_ACK_ERR_COORDINATE_FRAME_NOT_SUPPORTED">
                    <description>The coordinate frame of this command / mission item is not supported.</description>
               </entry>
               <entry name="MAV_CMD_ACK_ERR_COORDINATES_OUT_OF_RANGE">
                    <description>The coordinate frame of this command is ok, but he coordinate values exceed the safety limits of this system. This is a generic error, please use the more specific error messages below if possible.</description>
               </entry>
               <entry name="MAV_CMD_ACK_ERR_X_LAT_OUT_OF_RANGE">
                    <description>The X or latitude value is out of range.</description>
               </entry>
               <entry name="MAV_CMD_ACK_ERR_Y_LON_OUT_OF_RANGE">
                    <description>The Y or longitude value is out of range.</description>
               </entry>
               <entry name="MAV_CMD_ACK_ERR_Z_ALT_OUT_OF_RANGE">
                    <description>The Z or altitude value is out of range.</description>
               </entry>
          </enum>
          <enum name="MAV_PARAM_TYPE">
               <description>Specifies the datatype of a MAVLink parameter.</description>
               <entry value="1" name="MAV_PARAM_TYPE_UINT8">
                    <description>8-bit unsigned integer</description>
               </entry>
               <entry value="2" name="MAV_PARAM_TYPE_INT8">
                    <description>8-bit signed integer</description>
               </entry>
               <entry value="3" name="MAV_PARAM_TYPE_UINT16">
                    <description>16-bit unsigned integer</description>
               </entry>
               <entry value="4" name="MAV_PARAM_TYPE_INT16">
                    <description>16-bit signed integer</description>
               </entry>
               <entry value="5" name="MAV_PARAM_TYPE_UINT32">
                    <description>32-bit unsigned integer</description>
               </entry>
               <entry value="6" name="MAV_PARAM_TYPE_INT32">
                    <description>32-bit signed integer</description>
               </entry>
               <entry value="7" name="MAV_PARAM_TYPE_UINT64">
                    <description>64-bit unsigned integer</description>
               </entry>
               <entry value="8" name="MAV_PARAM_TYPE_INT64">
                    <description>64-bit signed integer</description>
               </entry>
               <entry value="9" name="MAV_PARAM_TYPE_REAL32">
                    <description>32-bit floating-point</description>
               </entry>
               <entry value="10" name="MAV_PARAM_TYPE_REAL64">
                    <description>64-bit floating-point</description>
               </entry>
          </enum>
          <enum name="MAV_RESULT">
               <description>result from a mavlink command</description>
               <entry value="0" name="MAV_RESULT_ACCEPTED">
                    <description>Command ACCEPTED and EXECUTED</description>
               </entry>
               <entry value="1" name="MAV_RESULT_TEMPORARILY_REJECTED">
                    <description>Command TEMPORARY REJECTED/DENIED</description>
               </entry>
               <entry value="2" name="MAV_RESULT_DENIED">
                    <description>Command PERMANENTLY DENIED</description>
               </entry>
               <entry value="3" name="MAV_RESULT_UNSUPPORTED">
                    <description>Command UNKNOWN/UNSUPPORTED</description>
               </entry>
               <entry value="4" name="MAV_RESULT_FAILED">
                    <description>Command executed, but failed</description>
               </entry>
          </enum>
          <enum name="MAV_MISSION_RESULT">
               <description>result in a mavlink mission ack</description>
               <entry value="0" name="MAV_MISSION_ACCEPTED">
                    <description>mission accepted OK</description>
               </entry>
               <entry value="1" name="MAV_MISSION_ERROR">
                    <description>generic error / not accepting mission commands at all right now</description>
               </entry>
               <entry value="2" name="MAV_MISSION_UNSUPPORTED_FRAME">
                    <description>coordinate frame is not supported</description>
               </entry>
               <entry value="3" name="MAV_MISSION_UNSUPPORTED">
                    <description>command is not supported</description>
               </entry>
               <entry value="4" name="MAV_MISSION_NO_SPACE">
                    <description>mission item exceeds storage space</description>
               </entry>
               <entry value="5" name="MAV_MISSION_INVALID">
                    <description>one of the parameters has an invalid value</description>
               </entry>
               <entry value="6" name="MAV_MISSION_INVALID_PARAM1">
                    <description>param1 has an invalid value</description>
               </entry>
               <entry value="7" name="MAV_MISSION_INVALID_PARAM2">
                    <description>param2 has an invalid value</description>
               </entry>
               <entry value="8" name="MAV_MISSION_INVALID_PARAM3">
                    <description>param3 has an invalid value</description>
               </entry>
               <entry value="9" name="MAV_MISSION_INVALID_PARAM4">
                    <description>param4 has an invalid value</description>
               </entry>
               <entry value="10" name="MAV_MISSION_INVALID_PARAM5_X">
                    <description>x/param5 has an invalid value</description>
               </entry>
               <entry value="11" name="MAV_MISSION_INVALID_PARAM6_Y">
                    <description>y/param6 has an invalid value</description>
               </entry>
               <entry value="12" name="MAV_MISSION_INVALID_PARAM7">
                    <description>param7 has an invalid value</description>
               </entry>
               <entry value="13" name="MAV_MISSION_INVALID_SEQUENCE">
                    <description>received waypoint out of sequence</description>
               </entry>
               <entry value="14" name="MAV_MISSION_DENIED">
                    <description>not accepting any mission commands from this communication partner</description>
               </entry>
          </enum>
          <enum name="MAV_SEVERITY">
               <description>Indicates the severity level, generally used for status messages to indicate their relative urgency. Based on RFC-5424 using expanded definitions at: http://www.kiwisyslog.com/kb/info:-syslog-message-levels/.</description>
               <entry value="0" name="MAV_SEVERITY_EMERGENCY">
                  <description>System is unusable. This is a "panic" condition.</description>
               </entry>
               <entry value="1" name="MAV_SEVERITY_ALERT">
                  <description>Action should be taken immediately. Indicates error in non-critical systems.</description>
               </entry>
               <entry value="2" name="MAV_SEVERITY_CRITICAL">
                  <description>Action must be taken immediately. Indicates failure in a primary system.</description>
               </entry>
               <entry value="3" name="MAV_SEVERITY_ERROR">
                  <description>Indicates an error in secondary/redundant systems.</description>
               </entry>
               <entry value="4" name="MAV_SEVERITY_WARNING">
                  <description>Indicates about a possible future error if this is not resolved within a given timeframe. Example would be a low battery warning.</description>
               </entry>
               <entry value="5" name="MAV_SEVERITY_NOTICE">
                  <description>An unusual event has occured, though not an error condition. This should be investigated for the root cause.</description>
               </entry>
               <entry value="6" name="MAV_SEVERITY_INFO">
                  <description>Normal operational messages. Useful for logging. No action is required for these messages.</description>
               </entry>
               <entry value="7" name="MAV_SEVERITY_DEBUG">
                  <description>Useful non-operational messages that can assist in debugging. These should not occur during normal operation.</description>
               </entry>
          </enum>
          <enum name="MAV_POWER_STATUS">
               <description>Power supply status flags (bitmask)</description>
               <entry value="1" name="MAV_POWER_STATUS_BRICK_VALID">
                    <description>main brick power supply valid</description>
               </entry>
               <entry value="2" name="MAV_POWER_STATUS_SERVO_VALID">
                    <description>main servo power supply valid for FMU</description>
               </entry>
               <entry value="4" name="MAV_POWER_STATUS_USB_CONNECTED">
                    <description>USB power is connected</description>
               </entry>
               <entry value="8" name="MAV_POWER_STATUS_PERIPH_OVERCURRENT">
                    <description>peripheral supply is in over-current state</description>
               </entry>
               <entry value="16" name="MAV_POWER_STATUS_PERIPH_HIPOWER_OVERCURRENT">
                    <description>hi-power peripheral supply is in over-current state</description>
               </entry>
               <entry value="32" name="MAV_POWER_STATUS_CHANGED">
                    <description>Power status has changed since boot</description>
               </entry>
          </enum>
          <enum name="SERIAL_CONTROL_DEV">
               <description>SERIAL_CONTROL device types</description>
               <entry value="0" name="SERIAL_CONTROL_DEV_TELEM1">
                    <description>First telemetry port</description>
               </entry>
               <entry value="1" name="SERIAL_CONTROL_DEV_TELEM2">
                    <description>Second telemetry port</description>
               </entry>
               <entry value="2" name="SERIAL_CONTROL_DEV_GPS1">
                    <description>First GPS port</description>
               </entry>
               <entry value="3" name="SERIAL_CONTROL_DEV_GPS2">
                    <description>Second GPS port</description>
               </entry>
               <entry value="10" name="SERIAL_CONTROL_DEV_SHELL">
                    <description>system shell</description>
               </entry>
          </enum>
          <enum name="SERIAL_CONTROL_FLAG">
               <description>SERIAL_CONTROL flags (bitmask)</description>
               <entry value="1" name="SERIAL_CONTROL_FLAG_REPLY">
                    <description>Set if this is a reply</description>
               </entry>
               <entry value="2" name="SERIAL_CONTROL_FLAG_RESPOND">
                    <description>Set if the sender wants the receiver to send a response as another SERIAL_CONTROL message</description>
               </entry>
               <entry value="4" name="SERIAL_CONTROL_FLAG_EXCLUSIVE">
                    <description>Set if access to the serial port should be removed from whatever driver is currently using it, giving exclusive access to the SERIAL_CONTROL protocol. The port can be handed back by sending a request without this flag set</description>
               </entry>
               <entry value="8" name="SERIAL_CONTROL_FLAG_BLOCKING">
                    <description>Block on writes to the serial port</description>
               </entry>
               <entry value="16" name="SERIAL_CONTROL_FLAG_MULTI">
                    <description>Send multiple replies until port is drained</description>
               </entry>
          </enum>
          <enum name="MAV_DISTANCE_SENSOR">
              <description>Enumeration of distance sensor types</description>
              <entry value="0" name="MAV_DISTANCE_SENSOR_LASER">
                  <description>Laser rangefinder, e.g. LightWare SF02/F or PulsedLight units</description>
              </entry>
              <entry value="1" name="MAV_DISTANCE_SENSOR_ULTRASOUND">
                  <description>Ultrasound rangefinder, e.g. MaxBotix units</description>
              </entry>
              <entry value="2" name="MAV_DISTANCE_SENSOR_INFRARED">
                  <description>Infrared rangefinder, e.g. Sharp units</description>
              </entry>
          </enum>
          <enum name="MAV_SENSOR_ORIENTATION">
              <description>Enumeration of sensor orientation, according to its rotations</description>
              <entry value="0" name="MAV_SENSOR_ROTATION_NONE">
                  <description>Roll: 0, Pitch: 0, Yaw: 0</description>
              </entry>
              <entry value="1" name="MAV_SENSOR_ROTATION_YAW_45">
                  <description>Roll: 0, Pitch: 0, Yaw: 45</description>
              </entry>
              <entry value="2" name="MAV_SENSOR_ROTATION_YAW_90">
                  <description>Roll: 0, Pitch: 0, Yaw: 90</description>
              </entry>
              <entry value="3" name="MAV_SENSOR_ROTATION_YAW_135">
                  <description>Roll: 0, Pitch: 0, Yaw: 135</description>
              </entry>
              <entry value="4" name="MAV_SENSOR_ROTATION_YAW_180">
                  <description>Roll: 0, Pitch: 0, Yaw: 180</description>
              </entry>
              <entry value="5" name="MAV_SENSOR_ROTATION_YAW_225">
                  <description>Roll: 0, Pitch: 0, Yaw: 225</description>
              </entry>
              <entry value="6" name="MAV_SENSOR_ROTATION_YAW_270">
                  <description>Roll: 0, Pitch: 0, Yaw: 270</description>
              </entry>
              <entry value="7" name="MAV_SENSOR_ROTATION_YAW_315">
                  <description>Roll: 0, Pitch: 0, Yaw: 315</description>
              </entry>
              <entry value="8" name="MAV_SENSOR_ROTATION_ROLL_180">
                  <description>Roll: 180, Pitch: 0, Yaw: 0</description>
              </entry>
              <entry value="9" name="MAV_SENSOR_ROTATION_ROLL_180_YAW_45">
                  <description>Roll: 180, Pitch: 0, Yaw: 45</description>
              </entry>
              <entry value="10" name="MAV_SENSOR_ROTATION_ROLL_180_YAW_90">
                  <description>Roll: 180, Pitch: 0, Yaw: 90</description>
              </entry>
              <entry value="11" name="MAV_SENSOR_ROTATION_ROLL_180_YAW_135">
                  <description>Roll: 180, Pitch: 0, Yaw: 135</description>
              </entry>
              <entry value="12" name="MAV_SENSOR_ROTATION_PITCH_180">
                  <description>Roll: 0, Pitch: 180, Yaw: 0</description>
              </entry>
              <entry value="13" name="MAV_SENSOR_ROTATION_ROLL_180_YAW_225">
                  <description>Roll: 180, Pitch: 0, Yaw: 225</description>
              </entry>
              <entry value="14" name="MAV_SENSOR_ROTATION_ROLL_180_YAW_270">
                  <description>Roll: 180, Pitch: 0, Yaw: 270</description>
              </entry>
              <entry value="15" name="MAV_SENSOR_ROTATION_ROLL_180_YAW_315">
                  <description>Roll: 180, Pitch: 0, Yaw: 315</description>
              </entry>
              <entry value="16" name="MAV_SENSOR_ROTATION_ROLL_90">
                  <description>Roll: 90, Pitch: 0, Yaw: 0</description>
              </entry>
              <entry value="17" name="MAV_SENSOR_ROTATION_ROLL_90_YAW_45">
                  <description>Roll: 90, Pitch: 0, Yaw: 45</description>
              </entry>
              <entry value="18" name="MAV_SENSOR_ROTATION_ROLL_90_YAW_90">
                  <description>Roll: 90, Pitch: 0, Yaw: 90</description>
              </entry>
              <entry value="19" name="MAV_SENSOR_ROTATION_ROLL_90_YAW_135">
                  <description>Roll: 90, Pitch: 0, Yaw: 135</description>
              </entry>
              <entry value="20" name="MAV_SENSOR_ROTATION_ROLL_270">
                  <description>Roll: 270, Pitch: 0, Yaw: 0</description>
              </entry>
              <entry value="21" name="MAV_SENSOR_ROTATION_ROLL_270_YAW_45">
                  <description>Roll: 270, Pitch: 0, Yaw: 45</description>
              </entry>
              <entry value="22" name="MAV_SENSOR_ROTATION_ROLL_270_YAW_90">
                  <description>Roll: 270, Pitch: 0, Yaw: 90</description>
              </entry>
              <entry value="23" name="MAV_SENSOR_ROTATION_ROLL_270_YAW_135">
                  <description>Roll: 270, Pitch: 0, Yaw: 135</description>
              </entry>
              <entry value="24" name="MAV_SENSOR_ROTATION_PITCH_90">
                  <description>Roll: 0, Pitch: 90, Yaw: 0</description>
              </entry>
              <entry value="25" name="MAV_SENSOR_ROTATION_PITCH_270">
                <description>Roll: 0, Pitch: 270, Yaw: 0</description>
              </entry>   
              <entry value="26" name="MAV_SENSOR_ROTATION_PITCH_180_YAW_90">
                <description>Roll: 0, Pitch: 180, Yaw: 90</description>
              </entry>  
              <entry value="27" name="MAV_SENSOR_ROTATION_PITCH_180_YAW_270">
                  <description>Roll: 0, Pitch: 180, Yaw: 270</description>
              </entry>
              <entry value="28" name="MAV_SENSOR_ROTATION_ROLL_90_PITCH_90">
                  <description>Roll: 90, Pitch: 90, Yaw: 0</description>
              </entry>
              <entry value="29" name="MAV_SENSOR_ROTATION_ROLL_180_PITCH_90">
                  <description>Roll: 180, Pitch: 90, Yaw: 0</description>
              </entry>
              <entry value="30" name="MAV_SENSOR_ROTATION_ROLL_270_PITCH_90">
                  <description>Roll: 270, Pitch: 90, Yaw: 0</description>
              </entry>
              <entry value="31" name="MAV_SENSOR_ROTATION_ROLL_90_PITCH_180">
                  <description>Roll: 90, Pitch: 180, Yaw: 0</description>
              </entry>
              <entry value="32" name="MAV_SENSOR_ROTATION_ROLL_270_PITCH_180">
                  <description>Roll: 270, Pitch: 180, Yaw: 0</description>
              </entry>
              <entry value="33" name="MAV_SENSOR_ROTATION_ROLL_90_PITCH_270">
                  <description>Roll: 90, Pitch: 270, Yaw: 0</description>
              </entry>
              <entry value="34" name="MAV_SENSOR_ROTATION_ROLL_180_PITCH_270">
                  <description>Roll: 180, Pitch: 270, Yaw: 0</description>
              </entry>
              <entry value="35" name="MAV_SENSOR_ROTATION_ROLL_270_PITCH_270">
                  <description>Roll: 270, Pitch: 270, Yaw: 0</description>
              </entry>
              <entry value="36" name="MAV_SENSOR_ROTATION_ROLL_90_PITCH_180_YAW_90">
                  <description>Roll: 90, Pitch: 180, Yaw: 90</description>
              </entry>
              <entry value="37" name="MAV_SENSOR_ROTATION_ROLL_90_YAW_270">
                  <description>Roll: 90, Pitch: 0, Yaw: 270</description>
              </entry>
              <entry value="38" name="MAV_SENSOR_ROTATION_ROLL_315_PITCH_315_YAW_315">
                  <description>Roll: 315, Pitch: 315, Yaw: 315</description>
              </entry>
          </enum>
          <enum name="MAV_PROTOCOL_CAPABILITY">
              <description>Bitmask of (optional) autopilot capabilities (64 bit). If a bit is set, the autopilot supports this capability.</description>
              <entry value="1" name="MAV_PROTOCOL_CAPABILITY_MISSION_FLOAT">
                  <description>Autopilot supports MISSION float message type.</description>
              </entry>
              <entry value="2" name="MAV_PROTOCOL_CAPABILITY_PARAM_FLOAT">
                  <description>Autopilot supports the new param float message type.</description>
              </entry>
              <entry value="4" name="MAV_PROTOCOL_CAPABILITY_MISSION_INT">
                  <description>Autopilot supports MISSION_INT scaled integer message type.</description>
              </entry>
              <entry value="8" name="MAV_PROTOCOL_CAPABILITY_COMMAND_INT">
                  <description>Autopilot supports COMMAND_INT scaled integer message type.</description>
              </entry>
              <entry value="16" name="MAV_PROTOCOL_CAPABILITY_PARAM_UNION">
                  <description>Autopilot supports the new param union message type.</description>
              </entry>
              <entry value="32" name="MAV_PROTOCOL_CAPABILITY_FTP">
                  <description>Autopilot supports the new param union message type.</description>
              </entry>
              <entry value="64" name="MAV_PROTOCOL_CAPABILITY_SET_ATTITUDE_TARGET">
                  <description>Autopilot supports commanding attitude offboard.</description>
              </entry>
              <entry value="128" name="MAV_PROTOCOL_CAPABILITY_SET_POSITION_TARGET_LOCAL_NED">
                  <description>Autopilot supports commanding position and velocity targets in local NED frame.</description>
              </entry>
              <entry value="256" name="MAV_PROTOCOL_CAPABILITY_SET_POSITION_TARGET_GLOBAL_INT">
                  <description>Autopilot supports commanding position and velocity targets in global scaled integers.</description>
              </entry>
              <entry value="512" name="MAV_PROTOCOL_CAPABILITY_TERRAIN">
                  <description>Autopilot supports terrain protocol / data handling.</description>
              </entry>
              <entry value="1024" name="MAV_PROTOCOL_CAPABILITY_SET_ACTUATOR_TARGET">
                  <description>Autopilot supports direct actuator control.</description>
              </entry>
              <entry value="2048" name="MAV_PROTOCOL_CAPABILITY_FLIGHT_TERMINATION">
                  <description>Autopilot supports the flight termination command.</description>
              </entry>
              <entry value="4096" name="MAV_PROTOCOL_CAPABILITY_COMPASS_CALIBRATION">
                  <description>Autopilot supports onboard compass calibration.</description>
              </entry>
          </enum>
          <enum name="MAV_ESTIMATOR_TYPE">
              <description>Enumeration of estimator types</description>
              <entry value="1" name="MAV_ESTIMATOR_TYPE_NAIVE">
                  <description>This is a naive estimator without any real covariance feedback.</description>
              </entry>
              <entry value="2" name="MAV_ESTIMATOR_TYPE_VISION">
                  <description>Computer vision based estimate. Might be up to scale.</description>
              </entry>
              <entry value="3" name="MAV_ESTIMATOR_TYPE_VIO">
                  <description>Visual-inertial estimate.</description>
              </entry>
              <entry value="4" name="MAV_ESTIMATOR_TYPE_GPS">
                  <description>Plain GPS estimate.</description>
              </entry>
              <entry value="5" name="MAV_ESTIMATOR_TYPE_GPS_INS">
                  <description>Estimator integrating GPS and inertial sensing.</description>
              </entry>
          </enum>
          <enum name="MAV_BATTERY_TYPE">
              <description>Enumeration of battery types</description>
              <entry value="0" name="MAV_BATTERY_TYPE_UNKNOWN">
                  <description>Not specified.</description>
              </entry>
              <entry value="1" name="MAV_BATTERY_TYPE_LIPO">
                  <description>Lithium polymere battery</description>
              </entry>
              <entry value="2" name="MAV_BATTERY_TYPE_LIFE">
                  <description>Lithium ferrite battery</description>
              </entry>
              <entry value="3" name="MAV_BATTERY_TYPE_LION">
                  <description>Lithium-ION battery</description>
              </entry>
              <entry value="4" name="MAV_BATTERY_TYPE_NIMH">
                  <description>Nickel metal hydride battery</description>
              </entry>
          </enum>
          <enum name="MAV_BATTERY_FUNCTION">
              <description>Enumeration of battery functions</description>
              <entry value="0" name="MAV_BATTERY_FUNCTION_UNKNOWN">
                  <description>Lithium polymere battery</description>
              </entry>
              <entry value="1" name="MAV_BATTERY_FUNCTION_ALL">
                  <description>Battery supports all flight systems</description>
              </entry>
              <entry value="2" name="MAV_BATTERY_FUNCTION_PROPULSION">
                  <description>Battery for the propulsion system</description>
              </entry>
              <entry value="3" name="MAV_BATTERY_FUNCTION_AVIONICS">
                  <description>Avionics battery</description>
              </entry>
              <entry value="4" name="MAV_BATTERY_TYPE_PAYLOAD">
                  <description>Payload battery</description>
              </entry>
          </enum>
          <enum name="MAV_VTOL_STATE">
              <description>Enumeration of VTOL states</description>
              <entry value="0" name="MAV_VTOL_STATE_UNDEFINED">
                  <description>MAV is not configured as VTOL</description>
              </entry>
              <entry value="1" name="MAV_VTOL_STATE_TRANSITION_TO_FW">
                  <description>VTOL is in transition from multicopter to fixed-wing</description>
              </entry>
              <entry value="2" name="MAV_VTOL_STATE_TRANSITION_TO_MC">
                  <description>VTOL is in transition from fixed-wing to multicopter</description>
              </entry>
              <entry value="3" name="MAV_VTOL_STATE_MC">
                  <description>VTOL is in multicopter state</description>
              </entry>
              <entry value="4" name="MAV_VTOL_STATE_FW">
                  <description>VTOL is in fixed-wing state</description>
              </entry>
          </enum>
          <enum name="MAV_LANDED_STATE">
              <description>Enumeration of landed detector states</description>
              <entry value="0" name="MAV_LANDED_STATE_UNDEFINED">
                  <description>MAV landed state is unknown</description>
              </entry>
              <entry value="1" name="MAV_LANDED_STATE_ON_GROUND">
                  <description>MAV is landed (on ground)</description>
              </entry>
              <entry value="2" name="MAV_LANDED_STATE_IN_AIR">
                  <description>MAV is in air</description>
              </entry>
          </enum>
          <enum name="ADSB_ALTITUDE_TYPE">
              <description>Enumeration of the ADSB altimeter types</description>
              <entry value="0" name="ADSB_ALTITUDE_TYPE_PRESSURE_QNH">
                  <description>Altitude reported from a Baro source using QNH reference</description>
              </entry>
              <entry value="1" name="ADSB_ALTITUDE_TYPE_GEOMETRIC">
                  <description>Altitude reported from a GNSS source</description>
              </entry>
          </enum>
          <enum name="ADSB_EMITTER_TYPE">
              <description>ADSB classification for the type of vehicle emitting the transponder signal</description>
              <entry value="0" name="ADSB_EMITTER_TYPE_NO_INFO"></entry>
              <entry value="1" name="ADSB_EMITTER_TYPE_LIGHT"></entry>
              <entry value="2" name="ADSB_EMITTER_TYPE_SMALL"></entry>
              <entry value="3" name="ADSB_EMITTER_TYPE_LARGE"></entry>
              <entry value="4" name="ADSB_EMITTER_TYPE_HIGH_VORTEX_LARGE"></entry>
              <entry value="5" name="ADSB_EMITTER_TYPE_HEAVY"></entry>
              <entry value="6" name="ADSB_EMITTER_TYPE_HIGHLY_MANUV"></entry>
              <entry value="7" name="ADSB_EMITTER_TYPE_ROTOCRAFT"></entry>
              <entry value="8" name="ADSB_EMITTER_TYPE_UNASSIGNED"></entry>
              <entry value="9" name="ADSB_EMITTER_TYPE_GLIDER"></entry>
              <entry value="10" name="ADSB_EMITTER_TYPE_LIGHTER_AIR"></entry>
              <entry value="11" name="ADSB_EMITTER_TYPE_PARACHUTE"></entry>
              <entry value="12" name="ADSB_EMITTER_TYPE_ULTRA_LIGHT"></entry>
              <entry value="13" name="ADSB_EMITTER_TYPE_UNASSIGNED2"></entry>
              <entry value="14" name="ADSB_EMITTER_TYPE_UAV"></entry>
              <entry value="15" name="ADSB_EMITTER_TYPE_SPACE"></entry>
              <entry value="16" name="ADSB_EMITTER_TYPE_UNASSGINED3"></entry>
              <entry value="17" name="ADSB_EMITTER_TYPE_EMERGENCY_SURFACE"></entry>
              <entry value="18" name="ADSB_EMITTER_TYPE_SERVICE_SURFACE"></entry>
              <entry value="19" name="ADSB_EMITTER_TYPE_POINT_OBSTACLE"></entry>
          </enum>
          <enum name="ADSB_FLAGS">
              <description>These flags indicate status such as data validity of each data source. Set = data valid</description>
              <entry value="1" name="ADSB_FLAGS_VALID_COORDS"></entry>
              <entry value="2" name="ADSB_FLAGS_VALID_ALTITUDE"></entry>
              <entry value="4" name="ADSB_FLAGS_VALID_HEADING"></entry>
              <entry value="8" name="ADSB_FLAGS_VALID_VELOCITY"></entry>
              <entry value="16" name="ADSB_FLAGS_VALID_CALLSIGN"></entry>
              <entry value="32" name="ADSB_FLAGS_SIMULATED"></entry>
          </enum>
     </enums>
     <messages>
          <message id="0" name="HEARTBEAT">
               <description>The heartbeat message shows that a system is present and responding. The type of the MAV and Autopilot hardware allow the receiving system to treat further messages from this system appropriate (e.g. by laying out the user interface based on the autopilot).</description>
               <field type="uint8_t" name="type">Type of the MAV (quadrotor, helicopter, etc., up to 15 types, defined in MAV_TYPE ENUM)</field>
               <field type="uint8_t" name="autopilot">Autopilot type / class. defined in MAV_AUTOPILOT ENUM</field>
               <field type="uint8_t" name="base_mode">System mode bitfield, see MAV_MODE_FLAG ENUM in mavlink/include/mavlink_types.h</field>
               <field type="uint32_t" name="custom_mode">A bitfield for use for autopilot-specific flags.</field>
               <field type="uint8_t" name="system_status">System status flag, see MAV_STATE ENUM</field>
               <field type="uint8_t_mavlink_version" name="mavlink_version">MAVLink version, not writable by user, gets added by protocol because of magic data type: uint8_t_mavlink_version</field>
          </message>
          <message id="1" name="SYS_STATUS">
               <description>The general system state. If the system is following the MAVLink standard, the system state is mainly defined by three orthogonal states/modes: The system mode, which is either LOCKED (motors shut down and locked), MANUAL (system under RC control), GUIDED (system with autonomous position control, position setpoint controlled manually) or AUTO (system guided by path/waypoint planner). The NAV_MODE defined the current flight state: LIFTOFF (often an open-loop maneuver), LANDING, WAYPOINTS or VECTOR. This represents the internal navigation state machine. The system status shows wether the system is currently active or not and if an emergency occured. During the CRITICAL and EMERGENCY states the MAV is still considered to be active, but should start emergency procedures autonomously. After a failure occured it should first move from active to critical to allow manual intervention and then move to emergency after a certain timeout.</description>
               <field type="uint32_t" name="onboard_control_sensors_present" print_format="0x%04x">Bitmask showing which onboard controllers and sensors are present. Value of 0: not present. Value of 1: present. Indices defined by ENUM MAV_SYS_STATUS_SENSOR</field>
               <field type="uint32_t" name="onboard_control_sensors_enabled" print_format="0x%04x">Bitmask showing which onboard controllers and sensors are enabled:  Value of 0: not enabled. Value of 1: enabled. Indices defined by ENUM MAV_SYS_STATUS_SENSOR</field>
               <field type="uint32_t" name="onboard_control_sensors_health" print_format="0x%04x">Bitmask showing which onboard controllers and sensors are operational or have an error:  Value of 0: not enabled. Value of 1: enabled. Indices defined by ENUM MAV_SYS_STATUS_SENSOR</field>
               <field type="uint16_t" name="load">Maximum usage in percent of the mainloop time, (0%: 0, 100%: 1000) should be always below 1000</field>
               <field type="uint16_t" name="voltage_battery">Battery voltage, in millivolts (1 = 1 millivolt)</field>
               <field type="int16_t" name="current_battery">Battery current, in 10*milliamperes (1 = 10 milliampere), -1: autopilot does not measure the current</field>
               <field type="int8_t" name="battery_remaining">Remaining battery energy: (0%: 0, 100%: 100), -1: autopilot estimate the remaining battery</field>
               <field type="uint16_t" name="drop_rate_comm">Communication drops in percent, (0%: 0, 100%: 10'000), (UART, I2C, SPI, CAN), dropped packets on all links (packets that were corrupted on reception on the MAV)</field>
               <field type="uint16_t" name="errors_comm">Communication errors (UART, I2C, SPI, CAN), dropped packets on all links (packets that were corrupted on reception on the MAV)</field>
               <field type="uint16_t" name="errors_count1">Autopilot-specific errors</field>
               <field type="uint16_t" name="errors_count2">Autopilot-specific errors</field>
               <field type="uint16_t" name="errors_count3">Autopilot-specific errors</field>
               <field type="uint16_t" name="errors_count4">Autopilot-specific errors</field>
          </message>
          <message id="2" name="SYSTEM_TIME">
               <description>The system time is the time of the master clock, typically the computer clock of the main onboard computer.</description>
               <field type="uint64_t" name="time_unix_usec">Timestamp of the master clock in microseconds since UNIX epoch.</field>
               <field type="uint32_t" name="time_boot_ms">Timestamp of the component clock since boot time in milliseconds.</field>
          </message>
          <!-- FIXME to be removed / merged with SYSTEM_TIME -->
          <message id="4" name="PING">
               <description>A ping message either requesting or responding to a ping. This allows to measure the system latencies, including serial port, radio modem and UDP connections.</description>
               <field type="uint64_t" name="time_usec">Unix timestamp in microseconds or since system boot if smaller than MAVLink epoch (1.1.2009)</field>
               <field type="uint32_t" name="seq">PING sequence</field>
               <field type="uint8_t" name="target_system">0: request ping from all receiving systems, if greater than 0: message is a ping response and number is the system id of the requesting system</field>
               <field type="uint8_t" name="target_component">0: request ping from all receiving components, if greater than 0: message is a ping response and number is the system id of the requesting system</field>
          </message>
          <message id="5" name="CHANGE_OPERATOR_CONTROL">
               <description>Request to control this MAV</description>
               <field type="uint8_t" name="target_system">System the GCS requests control for</field>
               <field type="uint8_t" name="control_request">0: request control of this MAV, 1: Release control of this MAV</field>
               <field type="uint8_t" name="version">0: key as plaintext, 1-255: future, different hashing/encryption variants. The GCS should in general use the safest mode possible initially and then gradually move down the encryption level if it gets a NACK message indicating an encryption mismatch.</field>
               <field type="char[25]" name="passkey">Password / Key, depending on version plaintext or encrypted. 25 or less characters, NULL terminated. The characters may involve A-Z, a-z, 0-9, and "!?,.-"</field>
          </message>
          <message id="6" name="CHANGE_OPERATOR_CONTROL_ACK">
               <description>Accept / deny control of this MAV</description>
               <field type="uint8_t" name="gcs_system_id">ID of the GCS this message </field>
               <field type="uint8_t" name="control_request">0: request control of this MAV, 1: Release control of this MAV</field>
               <field type="uint8_t" name="ack">0: ACK, 1: NACK: Wrong passkey, 2: NACK: Unsupported passkey encryption method, 3: NACK: Already under control</field>
          </message>
          <message id="7" name="AUTH_KEY">
               <description>Emit an encrypted signature / key identifying this system. PLEASE NOTE: This protocol has been kept simple, so transmitting the key requires an encrypted channel for true safety.</description>
               <field type="char[32]" name="key">key</field>
          </message>
          <message id="11" name="SET_MODE">
               <description>Set the system mode, as defined by enum MAV_MODE. There is no target component id as the mode is by definition for the overall aircraft, not only for one component.</description>
               <field type="uint8_t" name="target_system">The system setting the mode</field>
               <field type="uint8_t" name="base_mode" enum="MAV_MODE">The new base mode</field>
               <field type="uint32_t" name="custom_mode">The new autopilot-specific mode. This field can be ignored by an autopilot.</field>
          </message>
          <!-- reserved for PARAM_VALUE_UNION -->
          <message id="20" name="PARAM_REQUEST_READ">
               <description>Request to read the onboard parameter with the param_id string id. Onboard parameters are stored as key[const char*] -> value[float]. This allows to send a parameter to any other component (such as the GCS) without the need of previous knowledge of possible parameter names. Thus the same GCS can store different parameters for different autopilots. See also http://qgroundcontrol.org/parameter_interface for a full documentation of QGroundControl and IMU code.</description>
               <field type="uint8_t" name="target_system">System ID</field>
               <field type="uint8_t" name="target_component">Component ID</field>
               <field type="char[16]" name="param_id">Onboard parameter id, terminated by NULL if the length is less than 16 human-readable chars and WITHOUT null termination (NULL) byte if the length is exactly 16 chars - applications have to provide 16+1 bytes storage if the ID is stored as string</field>
               <field type="int16_t" name="param_index">Parameter index. Send -1 to use the param ID field as identifier (else the param id will be ignored)</field>
          </message>
          <message id="21" name="PARAM_REQUEST_LIST">
               <description>Request all parameters of this component. After his request, all parameters are emitted.</description>
               <field type="uint8_t" name="target_system">System ID</field>
               <field type="uint8_t" name="target_component">Component ID</field>
          </message>
          <message id="22" name="PARAM_VALUE">
               <description>Emit the value of a onboard parameter. The inclusion of param_count and param_index in the message allows the recipient to keep track of received parameters and allows him to re-request missing parameters after a loss or timeout.</description>
               <field type="char[16]" name="param_id">Onboard parameter id, terminated by NULL if the length is less than 16 human-readable chars and WITHOUT null termination (NULL) byte if the length is exactly 16 chars - applications have to provide 16+1 bytes storage if the ID is stored as string</field>
               <field type="float" name="param_value">Onboard parameter value</field>
               <field type="uint8_t" name="param_type" enum="MAV_PARAM_TYPE">Onboard parameter type: see the MAV_PARAM_TYPE enum for supported data types.</field>
               <field type="uint16_t" name="param_count">Total number of onboard parameters</field>
               <field type="uint16_t" name="param_index">Index of this onboard parameter</field>
          </message>
          <message id="23" name="PARAM_SET">
               <description>Set a parameter value TEMPORARILY to RAM. It will be reset to default on system reboot. Send the ACTION MAV_ACTION_STORAGE_WRITE to PERMANENTLY write the RAM contents to EEPROM. IMPORTANT: The receiving component should acknowledge the new parameter value by sending a param_value message to all communication partners. This will also ensure that multiple GCS all have an up-to-date list of all parameters. If the sending GCS did not receive a PARAM_VALUE message within its timeout time, it should re-send the PARAM_SET message.</description>
               <field type="uint8_t" name="target_system">System ID</field>
               <field type="uint8_t" name="target_component">Component ID</field>
               <field type="char[16]" name="param_id">Onboard parameter id, terminated by NULL if the length is less than 16 human-readable chars and WITHOUT null termination (NULL) byte if the length is exactly 16 chars - applications have to provide 16+1 bytes storage if the ID is stored as string</field>
               <field type="float" name="param_value">Onboard parameter value</field>
               <field type="uint8_t" name="param_type" enum="MAV_PARAM_TYPE">Onboard parameter type: see the MAV_PARAM_TYPE enum for supported data types.</field>
          </message>
          <message id="24" name="GPS_RAW_INT">
               <description>The global position, as returned by the Global Positioning System (GPS). This is
                NOT the global position estimate of the system, but rather a RAW sensor value. See message GLOBAL_POSITION for the global position estimate. Coordinate frame is right-handed, Z-axis up (GPS frame).</description>
               <field type="uint64_t" name="time_usec">Timestamp (microseconds since UNIX epoch or microseconds since system boot)</field>
               <field type="uint8_t" name="fix_type">0-1: no fix, 2: 2D fix, 3: 3D fix, 4: DGPS, 5: RTK. Some applications will not use the value of this field unless it is at least two, so always correctly fill in the fix.</field>
               <field type="int32_t" name="lat">Latitude (WGS84), in degrees * 1E7</field>
               <field type="int32_t" name="lon">Longitude (WGS84), in degrees * 1E7</field>
               <field type="int32_t" name="alt">Altitude (AMSL, NOT WGS84), in meters * 1000 (positive for up). Note that virtually all GPS modules provide the AMSL altitude in addition to the WGS84 altitude.</field>
               <field type="uint16_t" name="eph">GPS HDOP horizontal dilution of position in cm (m*100). If unknown, set to: UINT16_MAX</field>
               <field type="uint16_t" name="epv">GPS VDOP vertical dilution of position in cm (m*100). If unknown, set to: UINT16_MAX</field>
               <field type="uint16_t" name="vel">GPS ground speed (m/s * 100). If unknown, set to: UINT16_MAX</field>
               <field type="uint16_t" name="cog">Course over ground (NOT heading, but direction of movement) in degrees * 100, 0.0..359.99 degrees. If unknown, set to: UINT16_MAX</field>
               <field type="uint8_t" name="satellites_visible">Number of satellites visible. If unknown, set to 255</field>
          </message>
          <message id="25" name="GPS_STATUS">
               <description>The positioning status, as reported by GPS. This message is intended to display status information about each satellite visible to the receiver. See message GLOBAL_POSITION for the global position estimate. This message can contain information for up to 20 satellites.</description>
               <field type="uint8_t" name="satellites_visible">Number of satellites visible</field>
               <field type="uint8_t[20]" name="satellite_prn">Global satellite ID</field>
               <field type="uint8_t[20]" name="satellite_used">0: Satellite not used, 1: used for localization</field>
               <field type="uint8_t[20]" name="satellite_elevation">Elevation (0: right on top of receiver, 90: on the horizon) of satellite</field>
               <field type="uint8_t[20]" name="satellite_azimuth">Direction of satellite, 0: 0 deg, 255: 360 deg.</field>
               <field type="uint8_t[20]" name="satellite_snr">Signal to noise ratio of satellite</field>
          </message>
          <message id="26" name="SCALED_IMU">
               <description>The RAW IMU readings for the usual 9DOF sensor setup. This message should contain the scaled values to the described units</description>
               <field type="uint32_t" name="time_boot_ms">Timestamp (milliseconds since system boot)</field>
               <field type="int16_t" name="xacc">X acceleration (mg)</field>
               <field type="int16_t" name="yacc">Y acceleration (mg)</field>
               <field type="int16_t" name="zacc">Z acceleration (mg)</field>
               <field type="int16_t" name="xgyro">Angular speed around X axis (millirad /sec)</field>
               <field type="int16_t" name="ygyro">Angular speed around Y axis (millirad /sec)</field>
               <field type="int16_t" name="zgyro">Angular speed around Z axis (millirad /sec)</field>
               <field type="int16_t" name="xmag">X Magnetic field (milli tesla)</field>
               <field type="int16_t" name="ymag">Y Magnetic field (milli tesla)</field>
               <field type="int16_t" name="zmag">Z Magnetic field (milli tesla)</field>
          </message>
          <message id="27" name="RAW_IMU">
               <description>The RAW IMU readings for the usual 9DOF sensor setup. This message should always contain the true raw values without any scaling to allow data capture and system debugging.</description>
               <field type="uint64_t" name="time_usec">Timestamp (microseconds since UNIX epoch or microseconds since system boot)</field>
               <field type="int16_t" name="xacc">X acceleration (raw)</field>
               <field type="int16_t" name="yacc">Y acceleration (raw)</field>
               <field type="int16_t" name="zacc">Z acceleration (raw)</field>
               <field type="int16_t" name="xgyro">Angular speed around X axis (raw)</field>
               <field type="int16_t" name="ygyro">Angular speed around Y axis (raw)</field>
               <field type="int16_t" name="zgyro">Angular speed around Z axis (raw)</field>
               <field type="int16_t" name="xmag">X Magnetic field (raw)</field>
               <field type="int16_t" name="ymag">Y Magnetic field (raw)</field>
               <field type="int16_t" name="zmag">Z Magnetic field (raw)</field>
          </message>
          <message id="28" name="RAW_PRESSURE">
               <description>The RAW pressure readings for the typical setup of one absolute pressure and one differential pressure sensor. The sensor values should be the raw, UNSCALED ADC values.</description>
               <field type="uint64_t" name="time_usec">Timestamp (microseconds since UNIX epoch or microseconds since system boot)</field>
               <field type="int16_t" name="press_abs">Absolute pressure (raw)</field>
               <field type="int16_t" name="press_diff1">Differential pressure 1 (raw)</field>
               <field type="int16_t" name="press_diff2">Differential pressure 2 (raw)</field>
               <field type="int16_t" name="temperature">Raw Temperature measurement (raw)</field>
          </message>
          <message id="29" name="SCALED_PRESSURE">
               <description>The pressure readings for the typical setup of one absolute and differential pressure sensor. The units are as specified in each field.</description>
               <field type="uint32_t" name="time_boot_ms">Timestamp (milliseconds since system boot)</field>
               <field type="float" name="press_abs">Absolute pressure (hectopascal)</field>
               <field type="float" name="press_diff">Differential pressure 1 (hectopascal)</field>
               <field type="int16_t" name="temperature">Temperature measurement (0.01 degrees celsius)</field>
          </message>
          <message id="30" name="ATTITUDE">
               <description>The attitude in the aeronautical frame (right-handed, Z-down, X-front, Y-right).</description>
               <field type="uint32_t" name="time_boot_ms">Timestamp (milliseconds since system boot)</field>
               <field type="float" name="roll">Roll angle (rad, -pi..+pi)</field>
               <field type="float" name="pitch">Pitch angle (rad, -pi..+pi)</field>
               <field type="float" name="yaw">Yaw angle (rad, -pi..+pi)</field>
               <field type="float" name="rollspeed">Roll angular speed (rad/s)</field>
               <field type="float" name="pitchspeed">Pitch angular speed (rad/s)</field>
               <field type="float" name="yawspeed">Yaw angular speed (rad/s)</field>
          </message>
          <message id="31" name="ATTITUDE_QUATERNION">
               <description>The attitude in the aeronautical frame (right-handed, Z-down, X-front, Y-right), expressed as quaternion. Quaternion order is w, x, y, z and a zero rotation would be expressed as (1 0 0 0).</description>
               <field type="uint32_t" name="time_boot_ms">Timestamp (milliseconds since system boot)</field>
               <field type="float" name="q1">Quaternion component 1, w (1 in null-rotation)</field>
               <field type="float" name="q2">Quaternion component 2, x (0 in null-rotation)</field>
               <field type="float" name="q3">Quaternion component 3, y (0 in null-rotation)</field>
               <field type="float" name="q4">Quaternion component 4, z (0 in null-rotation)</field>
               <field type="float" name="rollspeed">Roll angular speed (rad/s)</field>
               <field type="float" name="pitchspeed">Pitch angular speed (rad/s)</field>
               <field type="float" name="yawspeed">Yaw angular speed (rad/s)</field>
          </message>
          <message id="32" name="LOCAL_POSITION_NED">
               <description>The filtered local position (e.g. fused computer vision and accelerometers). Coordinate frame is right-handed, Z-axis down (aeronautical frame, NED / north-east-down convention)</description>
               <field type="uint32_t" name="time_boot_ms">Timestamp (milliseconds since system boot)</field>
               <field type="float" name="x">X Position</field>
               <field type="float" name="y">Y Position</field>
               <field type="float" name="z">Z Position</field>
               <field type="float" name="vx">X Speed</field>
               <field type="float" name="vy">Y Speed</field>
               <field type="float" name="vz">Z Speed</field>
          </message>
          <message id="33" name="GLOBAL_POSITION_INT">
               <description>The filtered global position (e.g. fused GPS and accelerometers). The position is in GPS-frame (right-handed, Z-up). It
               is designed as scaled integer message since the resolution of float is not sufficient.</description>
               <field type="uint32_t" name="time_boot_ms">Timestamp (milliseconds since system boot)</field>
               <field type="int32_t" name="lat">Latitude, expressed as * 1E7</field>
               <field type="int32_t" name="lon">Longitude, expressed as * 1E7</field>
               <field type="int32_t" name="alt">Altitude in meters, expressed as * 1000 (millimeters), AMSL (not WGS84 - note that virtually all GPS modules provide the AMSL as well)</field>
               <field type="int32_t" name="relative_alt">Altitude above ground in meters, expressed as * 1000 (millimeters)</field>
               <field type="int16_t" name="vx">Ground X Speed (Latitude), expressed as m/s * 100</field>
               <field type="int16_t" name="vy">Ground Y Speed (Longitude), expressed as m/s * 100</field>
               <field type="int16_t" name="vz">Ground Z Speed (Altitude), expressed as m/s * 100</field>
               <field type="uint16_t" name="hdg">Compass heading in degrees * 100, 0.0..359.99 degrees. If unknown, set to: UINT16_MAX</field>
          </message>
          <message id="34" name="RC_CHANNELS_SCALED">
               <description>The scaled values of the RC channels received. (-100%) -10000, (0%) 0, (100%) 10000. Channels that are inactive should be set to UINT16_MAX.</description>
               <field type="uint32_t" name="time_boot_ms">Timestamp (milliseconds since system boot)</field>
               <field type="uint8_t" name="port">Servo output port (set of 8 outputs = 1 port). Most MAVs will just use one, but this allows for more than 8 servos.</field>
               <field type="int16_t" name="chan1_scaled">RC channel 1 value scaled, (-100%) -10000, (0%) 0, (100%) 10000, (invalid) INT16_MAX.</field>
               <field type="int16_t" name="chan2_scaled">RC channel 2 value scaled, (-100%) -10000, (0%) 0, (100%) 10000, (invalid) INT16_MAX.</field>
               <field type="int16_t" name="chan3_scaled">RC channel 3 value scaled, (-100%) -10000, (0%) 0, (100%) 10000, (invalid) INT16_MAX.</field>
               <field type="int16_t" name="chan4_scaled">RC channel 4 value scaled, (-100%) -10000, (0%) 0, (100%) 10000, (invalid) INT16_MAX.</field>
               <field type="int16_t" name="chan5_scaled">RC channel 5 value scaled, (-100%) -10000, (0%) 0, (100%) 10000, (invalid) INT16_MAX.</field>
               <field type="int16_t" name="chan6_scaled">RC channel 6 value scaled, (-100%) -10000, (0%) 0, (100%) 10000, (invalid) INT16_MAX.</field>
               <field type="int16_t" name="chan7_scaled">RC channel 7 value scaled, (-100%) -10000, (0%) 0, (100%) 10000, (invalid) INT16_MAX.</field>
               <field type="int16_t" name="chan8_scaled">RC channel 8 value scaled, (-100%) -10000, (0%) 0, (100%) 10000, (invalid) INT16_MAX.</field>
               <field type="uint8_t" name="rssi">Receive signal strength indicator, 0: 0%, 100: 100%, 255: invalid/unknown.</field>
          </message>
          <message id="35" name="RC_CHANNELS_RAW">
               <description>The RAW values of the RC channels received. The standard PPM modulation is as follows: 1000 microseconds: 0%, 2000 microseconds: 100%. Individual receivers/transmitters might violate this specification.</description>
               <field type="uint32_t" name="time_boot_ms">Timestamp (milliseconds since system boot)</field>
               <field type="uint8_t" name="port">Servo output port (set of 8 outputs = 1 port). Most MAVs will just use one, but this allows for more than 8 servos.</field>
               <field type="uint16_t" name="chan1_raw">RC channel 1 value, in microseconds. A value of UINT16_MAX implies the channel is unused.</field>
               <field type="uint16_t" name="chan2_raw">RC channel 2 value, in microseconds. A value of UINT16_MAX implies the channel is unused.</field>
               <field type="uint16_t" name="chan3_raw">RC channel 3 value, in microseconds. A value of UINT16_MAX implies the channel is unused.</field>
               <field type="uint16_t" name="chan4_raw">RC channel 4 value, in microseconds. A value of UINT16_MAX implies the channel is unused.</field>
               <field type="uint16_t" name="chan5_raw">RC channel 5 value, in microseconds. A value of UINT16_MAX implies the channel is unused.</field>
               <field type="uint16_t" name="chan6_raw">RC channel 6 value, in microseconds. A value of UINT16_MAX implies the channel is unused.</field>
               <field type="uint16_t" name="chan7_raw">RC channel 7 value, in microseconds. A value of UINT16_MAX implies the channel is unused.</field>
               <field type="uint16_t" name="chan8_raw">RC channel 8 value, in microseconds. A value of UINT16_MAX implies the channel is unused.</field>
               <field type="uint8_t" name="rssi">Receive signal strength indicator, 0: 0%, 100: 100%, 255: invalid/unknown.</field>
          </message>
          <message id="36" name="SERVO_OUTPUT_RAW">
               <description>The RAW values of the servo outputs (for RC input from the remote, use the RC_CHANNELS messages). The standard PPM modulation is as follows: 1000 microseconds: 0%, 2000 microseconds: 100%.</description>
               <field type="uint32_t" name="time_usec">Timestamp (microseconds since system boot)</field>
               <field type="uint8_t" name="port">Servo output port (set of 8 outputs = 1 port). Most MAVs will just use one, but this allows to encode more than 8 servos.</field>
               <field type="uint16_t" name="servo1_raw">Servo output 1 value, in microseconds</field>
               <field type="uint16_t" name="servo2_raw">Servo output 2 value, in microseconds</field>
               <field type="uint16_t" name="servo3_raw">Servo output 3 value, in microseconds</field>
               <field type="uint16_t" name="servo4_raw">Servo output 4 value, in microseconds</field>
               <field type="uint16_t" name="servo5_raw">Servo output 5 value, in microseconds</field>
               <field type="uint16_t" name="servo6_raw">Servo output 6 value, in microseconds</field>
               <field type="uint16_t" name="servo7_raw">Servo output 7 value, in microseconds</field>
               <field type="uint16_t" name="servo8_raw">Servo output 8 value, in microseconds</field>
          </message>
          <message id="37" name="MISSION_REQUEST_PARTIAL_LIST">
               <description>Request a partial list of mission items from the system/component. http://qgroundcontrol.org/mavlink/waypoint_protocol. If start and end index are the same, just send one waypoint.</description>
               <field type="uint8_t" name="target_system">System ID</field>
               <field type="uint8_t" name="target_component">Component ID</field>
               <field type="int16_t" name="start_index">Start index, 0 by default</field>
               <field type="int16_t" name="end_index">End index, -1 by default (-1: send list to end). Else a valid index of the list</field>
          </message>
          <message id="38" name="MISSION_WRITE_PARTIAL_LIST">
               <description>This message is sent to the MAV to write a partial list. If start index == end index, only one item will be transmitted / updated. If the start index is NOT 0 and above the current list size, this request should be REJECTED!</description>
               <field type="uint8_t" name="target_system">System ID</field>
               <field type="uint8_t" name="target_component">Component ID</field>
               <field type="int16_t" name="start_index">Start index, 0 by default and smaller / equal to the largest index of the current onboard list.</field>
               <field type="int16_t" name="end_index">End index, equal or greater than start index.</field>
          </message>
          <message id="39" name="MISSION_ITEM">
               <description>Message encoding a mission item. This message is emitted to announce
                the presence of a mission item and to set a mission item on the system. The mission item can be either in x, y, z meters (type: LOCAL) or x:lat, y:lon, z:altitude. Local frame is Z-down, right handed (NED), global frame is Z-up, right handed (ENU). See also http://qgroundcontrol.org/mavlink/waypoint_protocol.</description>
               <field type="uint8_t" name="target_system">System ID</field>
               <field type="uint8_t" name="target_component">Component ID</field>
               <field type="uint16_t" name="seq">Sequence</field>
               <field type="uint8_t" name="frame">The coordinate system of the MISSION. see MAV_FRAME in mavlink_types.h</field>
               <field type="uint16_t" name="command">The scheduled action for the MISSION. see MAV_CMD in common.xml MAVLink specs</field>
               <field type="uint8_t" name="current">false:0, true:1</field>
               <field type="uint8_t" name="autocontinue">autocontinue to next wp</field>
               <field type="float" name="param1">PARAM1, see MAV_CMD enum</field>
               <field type="float" name="param2">PARAM2, see MAV_CMD enum</field>
               <field type="float" name="param3">PARAM3, see MAV_CMD enum</field>
               <field type="float" name="param4">PARAM4, see MAV_CMD enum</field>
               <field type="float" name="x">PARAM5 / local: x position, global: latitude</field>
               <field type="float" name="y">PARAM6 / y position: global: longitude</field>
               <field type="float" name="z">PARAM7 / z position: global: altitude (relative or absolute, depending on frame.</field>
          </message>
          <message id="40" name="MISSION_REQUEST">
               <description>Request the information of the mission item with the sequence number seq. The response of the system to this message should be a MISSION_ITEM message. http://qgroundcontrol.org/mavlink/waypoint_protocol</description>
               <field type="uint8_t" name="target_system">System ID</field>
               <field type="uint8_t" name="target_component">Component ID</field>
               <field type="uint16_t" name="seq">Sequence</field>
          </message>
          <message id="41" name="MISSION_SET_CURRENT">
               <description>Set the mission item with sequence number seq as current item. This means that the MAV will continue to this mission item on the shortest path (not following the mission items in-between).</description>
               <field type="uint8_t" name="target_system">System ID</field>
               <field type="uint8_t" name="target_component">Component ID</field>
               <field type="uint16_t" name="seq">Sequence</field>
          </message>
          <message id="42" name="MISSION_CURRENT">
               <description>Message that announces the sequence number of the current active mission item. The MAV will fly towards this mission item.</description>
               <field type="uint16_t" name="seq">Sequence</field>
          </message>
          <message id="43" name="MISSION_REQUEST_LIST">
               <description>Request the overall list of mission items from the system/component.</description>
               <field type="uint8_t" name="target_system">System ID</field>
               <field type="uint8_t" name="target_component">Component ID</field>
          </message>
          <message id="44" name="MISSION_COUNT">
               <description>This message is emitted as response to MISSION_REQUEST_LIST by the MAV and to initiate a write transaction. The GCS can then request the individual mission item based on the knowledge of the total number of MISSIONs.</description>
               <field type="uint8_t" name="target_system">System ID</field>
               <field type="uint8_t" name="target_component">Component ID</field>
               <field type="uint16_t" name="count">Number of mission items in the sequence</field>
          </message>
          <message id="45" name="MISSION_CLEAR_ALL">
               <description>Delete all mission items at once.</description>
               <field type="uint8_t" name="target_system">System ID</field>
               <field type="uint8_t" name="target_component">Component ID</field>
          </message>
          <message id="46" name="MISSION_ITEM_REACHED">
               <description>A certain mission item has been reached. The system will either hold this position (or circle on the orbit) or (if the autocontinue on the WP was set) continue to the next MISSION.</description>
               <field type="uint16_t" name="seq">Sequence</field>
          </message>
          <message id="47" name="MISSION_ACK">
               <description>Ack message during MISSION handling. The type field states if this message is a positive ack (type=0) or if an error happened (type=non-zero).</description>
               <field type="uint8_t" name="target_system">System ID</field>
               <field type="uint8_t" name="target_component">Component ID</field>
               <field type="uint8_t" name="type" enum="MAV_MISSION_RESULT">See MAV_MISSION_RESULT enum</field>
          </message>
          <message id="48" name="SET_GPS_GLOBAL_ORIGIN">
               <description>As local waypoints exist, the global MISSION reference allows to transform between the local coordinate frame and the global (GPS) coordinate frame. This can be necessary when e.g. in- and outdoor settings are connected and the MAV should move from in- to outdoor.</description>
               <field type="uint8_t" name="target_system">System ID</field>
               <field type="int32_t" name="latitude">Latitude (WGS84), in degrees * 1E7</field>
               <field type="int32_t" name="longitude">Longitude (WGS84, in degrees * 1E7</field>
               <field type="int32_t" name="altitude">Altitude (AMSL), in meters * 1000 (positive for up)</field>
          </message>
          <message id="49" name="GPS_GLOBAL_ORIGIN">
               <description>Once the MAV sets a new GPS-Local correspondence, this message announces the origin (0,0,0) position</description>
               <field type="int32_t" name="latitude">Latitude (WGS84), in degrees * 1E7</field>
               <field type="int32_t" name="longitude">Longitude (WGS84), in degrees * 1E7</field>
               <field type="int32_t" name="altitude">Altitude (AMSL), in meters * 1000 (positive for up)</field>
          </message>
          <message id="50" name="PARAM_MAP_RC">
               <description>Bind a RC channel to a parameter. The parameter should change accoding to the RC channel value.</description>
               <field type="uint8_t" name="target_system">System ID</field>
               <field type="uint8_t" name="target_component">Component ID</field>
               <field type="char[16]" name="param_id">Onboard parameter id, terminated by NULL if the length is less than 16 human-readable chars and WITHOUT null termination (NULL) byte if the length is exactly 16 chars - applications have to provide 16+1 bytes storage if the ID is stored as string</field>
               <field type="int16_t" name="param_index">Parameter index. Send -1 to use the param ID field as identifier (else the param id will be ignored), send -2 to disable any existing map for this rc_channel_index.</field>
               <field type="uint8_t" name="parameter_rc_channel_index">Index of parameter RC channel. Not equal to the RC channel id. Typically correpsonds to a potentiometer-knob on the RC.</field>
               <field type="float" name="param_value0">Initial parameter value</field>
               <field type="float" name="scale">Scale, maps the RC range [-1, 1] to a parameter value</field>
               <field type="float" name="param_value_min">Minimum param value. The protocol does not define if this overwrites an onboard minimum value. (Depends on implementation)</field>
               <field type="float" name="param_value_max">Maximum param value. The protocol does not define if this overwrites an onboard maximum value. (Depends on implementation)</field>
          </message>
          <message id="54" name="SAFETY_SET_ALLOWED_AREA">
               <description>Set a safety zone (volume), which is defined by two corners of a cube. This message can be used to tell the MAV which setpoints/MISSIONs to accept and which to reject. Safety areas are often enforced by national or competition regulations.</description>
               <field type="uint8_t" name="target_system">System ID</field>
               <field type="uint8_t" name="target_component">Component ID</field>
               <field type="uint8_t" name="frame" enum="MAV_FRAME">Coordinate frame, as defined by MAV_FRAME enum in mavlink_types.h. Can be either global, GPS, right-handed with Z axis up or local, right handed, Z axis down.</field>
               <field type="float" name="p1x">x position 1 / Latitude 1</field>
               <field type="float" name="p1y">y position 1 / Longitude 1</field>
               <field type="float" name="p1z">z position 1 / Altitude 1</field>
               <field type="float" name="p2x">x position 2 / Latitude 2</field>
               <field type="float" name="p2y">y position 2 / Longitude 2</field>
               <field type="float" name="p2z">z position 2 / Altitude 2</field>
          </message>
          <message id="55" name="SAFETY_ALLOWED_AREA">
               <description>Read out the safety zone the MAV currently assumes.</description>
               <field type="uint8_t" name="frame" enum="MAV_FRAME">Coordinate frame, as defined by MAV_FRAME enum in mavlink_types.h. Can be either global, GPS, right-handed with Z axis up or local, right handed, Z axis down.</field>
               <field type="float" name="p1x">x position 1 / Latitude 1</field>
               <field type="float" name="p1y">y position 1 / Longitude 1</field>
               <field type="float" name="p1z">z position 1 / Altitude 1</field>
               <field type="float" name="p2x">x position 2 / Latitude 2</field>
               <field type="float" name="p2y">y position 2 / Longitude 2</field>
               <field type="float" name="p2z">z position 2 / Altitude 2</field>
          </message>
          <message id="61" name="ATTITUDE_QUATERNION_COV">
               <description>The attitude in the aeronautical frame (right-handed, Z-down, X-front, Y-right), expressed as quaternion. Quaternion order is w, x, y, z and a zero rotation would be expressed as (1 0 0 0).</description>
               <field type="uint32_t" name="time_boot_ms">Timestamp (milliseconds since system boot)</field>
               <field type="float[4]" name="q">Quaternion components, w, x, y, z (1 0 0 0 is the null-rotation)</field>
               <field type="float" name="rollspeed">Roll angular speed (rad/s)</field>
               <field type="float" name="pitchspeed">Pitch angular speed (rad/s)</field>
               <field type="float" name="yawspeed">Yaw angular speed (rad/s)</field>
               <field type="float[9]" name="covariance">Attitude covariance</field>
          </message>
          <message id="62" name="NAV_CONTROLLER_OUTPUT">
               <description>Outputs of the APM navigation controller. The primary use of this message is to check the response and signs of the controller before actual flight and to assist with tuning controller parameters.</description>
               <field type="float" name="nav_roll">Current desired roll in degrees</field>
               <field type="float" name="nav_pitch">Current desired pitch in degrees</field>
               <field type="int16_t" name="nav_bearing">Current desired heading in degrees</field>
               <field type="int16_t" name="target_bearing">Bearing to current MISSION/target in degrees</field>
               <field type="uint16_t" name="wp_dist">Distance to active MISSION in meters</field>
               <field type="float" name="alt_error">Current altitude error in meters</field>
               <field type="float" name="aspd_error">Current airspeed error in meters/second</field>
               <field type="float" name="xtrack_error">Current crosstrack error on x-y plane in meters</field>
          </message>
          <message id="63" name="GLOBAL_POSITION_INT_COV">
              <description>The filtered global position (e.g. fused GPS and accelerometers). The position is in GPS-frame (right-handed, Z-up). It  is designed as scaled integer message since the resolution of float is not sufficient. NOTE: This message is intended for onboard networks / companion computers and higher-bandwidth links and optimized for accuracy and completeness. Please use the GLOBAL_POSITION_INT message for a minimal subset.</description>
              <field type="uint32_t" name="time_boot_ms">Timestamp (milliseconds since system boot)</field>
              <field type="uint64_t" name="time_utc">Timestamp (microseconds since UNIX epoch) in UTC. 0 for unknown. Commonly filled by the precision time source of a GPS receiver.</field>
              <field type="uint8_t" name="estimator_type" enum="MAV_ESTIMATOR_TYPE">Class id of the estimator this estimate originated from.</field>
              <field type="int32_t" name="lat">Latitude, expressed as degrees * 1E7</field>
              <field type="int32_t" name="lon">Longitude, expressed as degrees * 1E7</field>
              <field type="int32_t" name="alt">Altitude in meters, expressed as * 1000 (millimeters), above MSL</field>
              <field type="int32_t" name="relative_alt">Altitude above ground in meters, expressed as * 1000 (millimeters)</field>
              <field type="float" name="vx">Ground X Speed (Latitude), expressed as m/s</field>
              <field type="float" name="vy">Ground Y Speed (Longitude), expressed as m/s</field>
              <field type="float" name="vz">Ground Z Speed (Altitude), expressed as m/s</field>
              <field type="float[36]" name="covariance">Covariance matrix (first six entries are the first ROW, next six entries are the second row, etc.)</field>
          </message>
          <message id="64" name="LOCAL_POSITION_NED_COV">
              <description>The filtered local position (e.g. fused computer vision and accelerometers). Coordinate frame is right-handed, Z-axis down (aeronautical frame, NED / north-east-down convention)</description>
              <field type="uint32_t" name="time_boot_ms">Timestamp (milliseconds since system boot). 0 for system without monotonic timestamp</field>
              <field type="uint64_t" name="time_utc">Timestamp (microseconds since UNIX epoch) in UTC. 0 for unknown. Commonly filled by the precision time source of a GPS receiver.</field>
              <field type="uint8_t" name="estimator_type" enum="MAV_ESTIMATOR_TYPE">Class id of the estimator this estimate originated from.</field>
              <field type="float" name="x">X Position</field>
              <field type="float" name="y">Y Position</field>
              <field type="float" name="z">Z Position</field>
              <field type="float" name="vx">X Speed (m/s)</field>
              <field type="float" name="vy">Y Speed (m/s)</field>
              <field type="float" name="vz">Z Speed (m/s)</field>
              <field type="float" name="ax">X Acceleration (m/s^2)</field>
              <field type="float" name="ay">Y Acceleration (m/s^2)</field>
              <field type="float" name="az">Z Acceleration (m/s^2)</field>
              <field type="float[45]" name="covariance">Covariance matrix upper right triangular (first nine entries are the first ROW, next eight entries are the second row, etc.)</field>
          </message>
          <message id="65" name="RC_CHANNELS">
               <description>The PPM values of the RC channels received. The standard PPM modulation is as follows: 1000 microseconds: 0%, 2000 microseconds: 100%. Individual receivers/transmitters might violate this specification.</description>
               <field type="uint32_t" name="time_boot_ms">Timestamp (milliseconds since system boot)</field>
               <field type="uint8_t" name="chancount">Total number of RC channels being received. This can be larger than 18, indicating that more channels are available but not given in this message. This value should be 0 when no RC channels are available.</field>
               <field type="uint16_t" name="chan1_raw">RC channel 1 value, in microseconds. A value of UINT16_MAX implies the channel is unused.</field>
               <field type="uint16_t" name="chan2_raw">RC channel 2 value, in microseconds. A value of UINT16_MAX implies the channel is unused.</field>
               <field type="uint16_t" name="chan3_raw">RC channel 3 value, in microseconds. A value of UINT16_MAX implies the channel is unused.</field>
               <field type="uint16_t" name="chan4_raw">RC channel 4 value, in microseconds. A value of UINT16_MAX implies the channel is unused.</field>
               <field type="uint16_t" name="chan5_raw">RC channel 5 value, in microseconds. A value of UINT16_MAX implies the channel is unused.</field>
               <field type="uint16_t" name="chan6_raw">RC channel 6 value, in microseconds. A value of UINT16_MAX implies the channel is unused.</field>
               <field type="uint16_t" name="chan7_raw">RC channel 7 value, in microseconds. A value of UINT16_MAX implies the channel is unused.</field>
               <field type="uint16_t" name="chan8_raw">RC channel 8 value, in microseconds. A value of UINT16_MAX implies the channel is unused.</field>
               <field type="uint16_t" name="chan9_raw">RC channel 9 value, in microseconds. A value of UINT16_MAX implies the channel is unused.</field>
               <field type="uint16_t" name="chan10_raw">RC channel 10 value, in microseconds. A value of UINT16_MAX implies the channel is unused.</field>
               <field type="uint16_t" name="chan11_raw">RC channel 11 value, in microseconds. A value of UINT16_MAX implies the channel is unused.</field>
               <field type="uint16_t" name="chan12_raw">RC channel 12 value, in microseconds. A value of UINT16_MAX implies the channel is unused.</field>
               <field type="uint16_t" name="chan13_raw">RC channel 13 value, in microseconds. A value of UINT16_MAX implies the channel is unused.</field>
               <field type="uint16_t" name="chan14_raw">RC channel 14 value, in microseconds. A value of UINT16_MAX implies the channel is unused.</field>
               <field type="uint16_t" name="chan15_raw">RC channel 15 value, in microseconds. A value of UINT16_MAX implies the channel is unused.</field>
               <field type="uint16_t" name="chan16_raw">RC channel 16 value, in microseconds. A value of UINT16_MAX implies the channel is unused.</field>
               <field type="uint16_t" name="chan17_raw">RC channel 17 value, in microseconds. A value of UINT16_MAX implies the channel is unused.</field>
               <field type="uint16_t" name="chan18_raw">RC channel 18 value, in microseconds. A value of UINT16_MAX implies the channel is unused.</field>
               <field type="uint8_t" name="rssi">Receive signal strength indicator, 0: 0%, 100: 100%, 255: invalid/unknown.</field>
          </message>
          <message id="66" name="REQUEST_DATA_STREAM">
               <description>THIS INTERFACE IS DEPRECATED. USE SET_MESSAGE_INTERVAL INSTEAD.</description>
               <field type="uint8_t" name="target_system">The target requested to send the message stream.</field>
               <field type="uint8_t" name="target_component">The target requested to send the message stream.</field>
               <field type="uint8_t" name="req_stream_id">The ID of the requested data stream</field>
               <field type="uint16_t" name="req_message_rate">The requested message rate</field>
               <field type="uint8_t" name="start_stop">1 to start sending, 0 to stop sending.</field>
          </message>
          <message id="67" name="DATA_STREAM">
               <description>THIS INTERFACE IS DEPRECATED. USE MESSAGE_INTERVAL INSTEAD.</description>
               <field type="uint8_t" name="stream_id">The ID of the requested data stream</field>
               <field type="uint16_t" name="message_rate">The message rate</field>
               <field type="uint8_t" name="on_off">1 stream is enabled, 0 stream is stopped.</field>
          </message>
          <message id="69" name="MANUAL_CONTROL">
               <description>This message provides an API for manually controlling the vehicle using standard joystick axes nomenclature, along with a joystick-like input device. Unused axes can be disabled an buttons are also transmit as boolean values of their </description>
               <field type="uint8_t" name="target">The system to be controlled.</field>
               <field type="int16_t" name="x">X-axis, normalized to the range [-1000,1000]. A value of INT16_MAX indicates that this axis is invalid. Generally corresponds to forward(1000)-backward(-1000) movement on a joystick and the pitch of a vehicle.</field>
               <field type="int16_t" name="y">Y-axis, normalized to the range [-1000,1000]. A value of INT16_MAX indicates that this axis is invalid. Generally corresponds to left(-1000)-right(1000) movement on a joystick and the roll of a vehicle.</field>
               <field type="int16_t" name="z">Z-axis, normalized to the range [-1000,1000]. A value of INT16_MAX indicates that this axis is invalid. Generally corresponds to a separate slider movement with maximum being 1000 and minimum being -1000 on a joystick and the thrust of a vehicle. Positive values are forward thrust, negative values are reverse thrust.</field>
               <field type="int16_t" name="r">R-axis, normalized to the range [-1000,1000]. A value of INT16_MAX indicates that this axis is invalid. Generally corresponds to a twisting of the joystick, with counter-clockwise being 1000 and clockwise being -1000, and the yaw of a vehicle.</field>
               <field type="uint16_t" name="buttons">A bitfield corresponding to the joystick buttons' current state, 1 for pressed, 0 for released. The lowest bit corresponds to Button 1.</field>
          </message>
          <message id="70" name="RC_CHANNELS_OVERRIDE">
               <description>The RAW values of the RC channels sent to the MAV to override info received from the RC radio. A value of UINT16_MAX means no change to that channel. A value of 0 means control of that channel should be released back to the RC radio. The standard PPM modulation is as follows: 1000 microseconds: 0%, 2000 microseconds: 100%. Individual receivers/transmitters might violate this specification.</description>
               <field type="uint8_t" name="target_system">System ID</field>
               <field type="uint8_t" name="target_component">Component ID</field>
               <field type="uint16_t" name="chan1_raw">RC channel 1 value, in microseconds. A value of UINT16_MAX means to ignore this field.</field>
               <field type="uint16_t" name="chan2_raw">RC channel 2 value, in microseconds. A value of UINT16_MAX means to ignore this field.</field>
               <field type="uint16_t" name="chan3_raw">RC channel 3 value, in microseconds. A value of UINT16_MAX means to ignore this field.</field>
               <field type="uint16_t" name="chan4_raw">RC channel 4 value, in microseconds. A value of UINT16_MAX means to ignore this field.</field>
               <field type="uint16_t" name="chan5_raw">RC channel 5 value, in microseconds. A value of UINT16_MAX means to ignore this field.</field>
               <field type="uint16_t" name="chan6_raw">RC channel 6 value, in microseconds. A value of UINT16_MAX means to ignore this field.</field>
               <field type="uint16_t" name="chan7_raw">RC channel 7 value, in microseconds. A value of UINT16_MAX means to ignore this field.</field>
               <field type="uint16_t" name="chan8_raw">RC channel 8 value, in microseconds. A value of UINT16_MAX means to ignore this field.</field>
          </message>
          <message id="73" name="MISSION_ITEM_INT">
              <description>Message encoding a mission item. This message is emitted to announce
                the presence of a mission item and to set a mission item on the system. The mission item can be either in x, y, z meters (type: LOCAL) or x:lat, y:lon, z:altitude. Local frame is Z-down, right handed (NED), global frame is Z-up, right handed (ENU). See alsohttp://qgroundcontrol.org/mavlink/waypoint_protocol.</description>
              <field type="uint8_t" name="target_system">System ID</field>
              <field type="uint8_t" name="target_component">Component ID</field>
              <field type="uint16_t" name="seq">Waypoint ID (sequence number). Starts at zero. Increases monotonically for each waypoint, no gaps in the sequence (0,1,2,3,4).</field>
              <field type="uint8_t" name="frame">The coordinate system of the MISSION. see MAV_FRAME in mavlink_types.h</field>
              <field type="uint16_t" name="command">The scheduled action for the MISSION. see MAV_CMD in common.xml MAVLink specs</field>
              <field type="uint8_t" name="current">false:0, true:1</field>
              <field type="uint8_t" name="autocontinue">autocontinue to next wp</field>
              <field type="float" name="param1">PARAM1, see MAV_CMD enum</field>
              <field type="float" name="param2">PARAM2, see MAV_CMD enum</field>
              <field type="float" name="param3">PARAM3, see MAV_CMD enum</field>
              <field type="float" name="param4">PARAM4, see MAV_CMD enum</field>
              <field type="int32_t" name="x">PARAM5 / local: x position in meters * 1e4, global: latitude in degrees * 10^7</field>
              <field type="int32_t" name="y">PARAM6 / y position: local: x position in meters * 1e4, global: longitude in degrees *10^7</field>
              <field type="float" name="z">PARAM7 / z position: global: altitude in meters (relative or absolute, depending on frame.</field>
          </message>
          <message id="74" name="VFR_HUD">
               <description>Metrics typically displayed on a HUD for fixed wing aircraft</description>
               <field type="float" name="airspeed">Current airspeed in m/s</field>
               <field type="float" name="groundspeed">Current ground speed in m/s</field>
               <field type="int16_t" name="heading">Current heading in degrees, in compass units (0..360, 0=north)</field>
               <field type="uint16_t" name="throttle">Current throttle setting in integer percent, 0 to 100</field>
               <field type="float" name="alt">Current altitude (MSL), in meters</field>
               <field type="float" name="climb">Current climb rate in meters/second</field>
          </message>
          <message id="75" name="COMMAND_INT">
              <description>Message encoding a command with parameters as scaled integers. Scaling depends on the actual command value.</description>
              <field type="uint8_t" name="target_system">System ID</field>
              <field type="uint8_t" name="target_component">Component ID</field>
              <field type="uint8_t" name="frame">The coordinate system of the COMMAND. see MAV_FRAME in mavlink_types.h</field>
              <field type="uint16_t" name="command">The scheduled action for the mission item. see MAV_CMD in common.xml MAVLink specs</field>
              <field type="uint8_t" name="current">false:0, true:1</field>
              <field type="uint8_t" name="autocontinue">autocontinue to next wp</field>
              <field type="float" name="param1">PARAM1, see MAV_CMD enum</field>
              <field type="float" name="param2">PARAM2, see MAV_CMD enum</field>
              <field type="float" name="param3">PARAM3, see MAV_CMD enum</field>
              <field type="float" name="param4">PARAM4, see MAV_CMD enum</field>
              <field type="int32_t" name="x">PARAM5 / local: x position in meters * 1e4, global: latitude in degrees * 10^7</field>
              <field type="int32_t" name="y">PARAM6 / local: y position in meters * 1e4, global: longitude in degrees * 10^7</field>
              <field type="float" name="z">PARAM7 / z position: global: altitude in meters (relative or absolute, depending on frame.</field>
          </message>
          <message id="76" name="COMMAND_LONG">
               <description>Send a command with up to seven parameters to the MAV</description>
               <field type="uint8_t" name="target_system">System which should execute the command</field>
               <field type="uint8_t" name="target_component">Component which should execute the command, 0 for all components</field>
               <field type="uint16_t" name="command" enum="MAV_CMD">Command ID, as defined by MAV_CMD enum.</field>
               <field type="uint8_t" name="confirmation">0: First transmission of this command. 1-255: Confirmation transmissions (e.g. for kill command)</field>
               <field type="float" name="param1">Parameter 1, as defined by MAV_CMD enum.</field>
               <field type="float" name="param2">Parameter 2, as defined by MAV_CMD enum.</field>
               <field type="float" name="param3">Parameter 3, as defined by MAV_CMD enum.</field>
               <field type="float" name="param4">Parameter 4, as defined by MAV_CMD enum.</field>
               <field type="float" name="param5">Parameter 5, as defined by MAV_CMD enum.</field>
               <field type="float" name="param6">Parameter 6, as defined by MAV_CMD enum.</field>
               <field type="float" name="param7">Parameter 7, as defined by MAV_CMD enum.</field>
          </message>
          <message id="77" name="COMMAND_ACK">
               <description>Report status of a command. Includes feedback wether the command was executed.</description>
               <field type="uint16_t" name="command" enum="MAV_CMD">Command ID, as defined by MAV_CMD enum.</field>
               <field type="uint8_t" name="result">See MAV_RESULT enum</field>
          </message>
         <message id="81" name="MANUAL_SETPOINT">
             <description>Setpoint in roll, pitch, yaw and thrust from the operator</description>
             <field type="uint32_t" name="time_boot_ms">Timestamp in milliseconds since system boot</field>
             <field type="float" name="roll">Desired roll rate in radians per second</field>
             <field type="float" name="pitch">Desired pitch rate in radians per second</field>
             <field type="float" name="yaw">Desired yaw rate in radians per second</field>
             <field type="float" name="thrust">Collective thrust, normalized to 0 .. 1</field>
             <field type="uint8_t" name="mode_switch">Flight mode switch position, 0.. 255</field>
             <field type="uint8_t" name="manual_override_switch">Override mode switch position, 0.. 255</field>
         </message>
          <message id="82" name="SET_ATTITUDE_TARGET">
               <description>Set the vehicle attitude and body angular rates.</description>
               <field type="uint32_t" name="time_boot_ms">Timestamp in milliseconds since system boot</field>
               <field type="uint8_t" name="target_system">System ID</field>
               <field type="uint8_t" name="target_component">Component ID</field>
               <field type="uint8_t" name="type_mask">Mappings: If any of these bits are set, the corresponding input should be ignored: bit 1: body roll rate, bit 2: body pitch rate, bit 3: body yaw rate. bit 4-bit 6: reserved, bit 7: throttle, bit 8: attitude</field>
               <field type="float[4]" name="q">Attitude quaternion (w, x, y, z order, zero-rotation is 1, 0, 0, 0)</field>
               <field type="float" name="body_roll_rate">Body roll rate in radians per second</field>
               <field type="float" name="body_pitch_rate">Body roll rate in radians per second</field>
               <field type="float" name="body_yaw_rate">Body roll rate in radians per second</field>
               <field type="float" name="thrust">Collective thrust, normalized to 0 .. 1 (-1 .. 1 for vehicles capable of reverse trust)</field>
          </message>
          <message id="83" name="ATTITUDE_TARGET">
               <description>Set the vehicle attitude and body angular rates.</description>
               <field type="uint32_t" name="time_boot_ms">Timestamp in milliseconds since system boot</field>
               <field type="uint8_t" name="type_mask">Mappings: If any of these bits are set, the corresponding input should be ignored: bit 1: body roll rate, bit 2: body pitch rate, bit 3: body yaw rate. bit 4-bit 7: reserved, bit 8: attitude</field>
               <field type="float[4]" name="q">Attitude quaternion (w, x, y, z order, zero-rotation is 1, 0, 0, 0)</field>
               <field type="float" name="body_roll_rate">Body roll rate in radians per second</field>
               <field type="float" name="body_pitch_rate">Body roll rate in radians per second</field>
               <field type="float" name="body_yaw_rate">Body roll rate in radians per second</field>
               <field type="float" name="thrust">Collective thrust, normalized to 0 .. 1 (-1 .. 1 for vehicles capable of reverse trust)</field>
          </message>
          <message id="84" name="SET_POSITION_TARGET_LOCAL_NED">
               <description>Set vehicle position, velocity and acceleration setpoint in local frame.</description>
               <field type="uint32_t" name="time_boot_ms">Timestamp in milliseconds since system boot</field>
               <field type="uint8_t" name="target_system">System ID</field>
               <field type="uint8_t" name="target_component">Component ID</field>
               <field type="uint8_t" name="coordinate_frame" enum="MAV_FRAME">Valid options are: MAV_FRAME_LOCAL_NED = 1, MAV_FRAME_LOCAL_OFFSET_NED = 7, MAV_FRAME_BODY_NED = 8, MAV_FRAME_BODY_OFFSET_NED = 9</field>
               <field type="uint16_t" name="type_mask">Bitmask to indicate which dimensions should be ignored by the vehicle: a value of 0b0000000000000000 or 0b0000001000000000 indicates that none of the setpoint dimensions should be ignored. If bit 10 is set the floats afx afy afz should be interpreted as force instead of acceleration. Mapping: bit 1: x, bit 2: y, bit 3: z, bit 4: vx, bit 5: vy, bit 6: vz, bit 7: ax, bit 8: ay, bit 9: az, bit 10: is force setpoint, bit 11: yaw, bit 12: yaw rate</field>
               <field type="float" name="x">X Position in NED frame in meters</field>
               <field type="float" name="y">Y Position in NED frame in meters</field>
               <field type="float" name="z">Z Position in NED frame in meters (note, altitude is negative in NED)</field>
               <field type="float" name="vx">X velocity in NED frame in meter / s</field>
               <field type="float" name="vy">Y velocity in NED frame in meter / s</field>
               <field type="float" name="vz">Z velocity in NED frame in meter / s</field>
               <field type="float" name="afx">X acceleration or force (if bit 10 of type_mask is set) in NED frame in meter / s^2 or N</field>
               <field type="float" name="afy">Y acceleration or force (if bit 10 of type_mask is set) in NED frame in meter / s^2 or N</field>
               <field type="float" name="afz">Z acceleration or force (if bit 10 of type_mask is set) in NED frame in meter / s^2 or N</field>
               <field type="float" name="yaw">yaw setpoint in rad</field>
               <field type="float" name="yaw_rate">yaw rate setpoint in rad/s</field>
          </message>
          <message id="85" name="POSITION_TARGET_LOCAL_NED">
               <description>Set vehicle position, velocity and acceleration setpoint in local frame.</description>
               <field type="uint32_t" name="time_boot_ms">Timestamp in milliseconds since system boot</field>
               <field type="uint8_t" name="coordinate_frame" enum="MAV_FRAME">Valid options are: MAV_FRAME_LOCAL_NED = 1, MAV_FRAME_LOCAL_OFFSET_NED = 7, MAV_FRAME_BODY_NED = 8, MAV_FRAME_BODY_OFFSET_NED = 9</field>
               <field type="uint16_t" name="type_mask">Bitmask to indicate which dimensions should be ignored by the vehicle: a value of 0b0000000000000000 or 0b0000001000000000 indicates that none of the setpoint dimensions should be ignored. If bit 10 is set the floats afx afy afz should be interpreted as force instead of acceleration. Mapping: bit 1: x, bit 2: y, bit 3: z, bit 4: vx, bit 5: vy, bit 6: vz, bit 7: ax, bit 8: ay, bit 9: az, bit 10: is force setpoint, bit 11: yaw, bit 12: yaw rate</field>
               <field type="float" name="x">X Position in NED frame in meters</field>
               <field type="float" name="y">Y Position in NED frame in meters</field>
               <field type="float" name="z">Z Position in NED frame in meters (note, altitude is negative in NED)</field>
               <field type="float" name="vx">X velocity in NED frame in meter / s</field>
               <field type="float" name="vy">Y velocity in NED frame in meter / s</field>
               <field type="float" name="vz">Z velocity in NED frame in meter / s</field>
               <field type="float" name="afx">X acceleration or force (if bit 10 of type_mask is set) in NED frame in meter / s^2 or N</field>
               <field type="float" name="afy">Y acceleration or force (if bit 10 of type_mask is set) in NED frame in meter / s^2 or N</field>
               <field type="float" name="afz">Z acceleration or force (if bit 10 of type_mask is set) in NED frame in meter / s^2 or N</field>
               <field type="float" name="yaw">yaw setpoint in rad</field>
               <field type="float" name="yaw_rate">yaw rate setpoint in rad/s</field>
          </message>
          <message id="86" name="SET_POSITION_TARGET_GLOBAL_INT">
               <description>Set vehicle position, velocity and acceleration setpoint in the WGS84 coordinate system.</description>
               <field type="uint32_t" name="time_boot_ms">Timestamp in milliseconds since system boot. The rationale for the timestamp in the setpoint is to allow the system to compensate for the transport delay of the setpoint. This allows the system to compensate processing latency.</field>
               <field type="uint8_t" name="target_system">System ID</field>
               <field type="uint8_t" name="target_component">Component ID</field>
               <field type="uint8_t" name="coordinate_frame" enum="MAV_FRAME">Valid options are: MAV_FRAME_GLOBAL_INT = 5, MAV_FRAME_GLOBAL_RELATIVE_ALT_INT = 6, MAV_FRAME_GLOBAL_TERRAIN_ALT_INT = 11</field>
               <field type="uint16_t" name="type_mask">Bitmask to indicate which dimensions should be ignored by the vehicle: a value of 0b0000000000000000 or 0b0000001000000000 indicates that none of the setpoint dimensions should be ignored. If bit 10 is set the floats afx afy afz should be interpreted as force instead of acceleration. Mapping: bit 1: x, bit 2: y, bit 3: z, bit 4: vx, bit 5: vy, bit 6: vz, bit 7: ax, bit 8: ay, bit 9: az, bit 10: is force setpoint, bit 11: yaw, bit 12: yaw rate</field>
               <field type="int32_t" name="lat_int">X Position in WGS84 frame in 1e7 * meters</field>
               <field type="int32_t" name="lon_int">Y Position in WGS84 frame in 1e7 * meters</field>
               <field type="float" name="alt">Altitude in meters in AMSL altitude, not WGS84 if absolute or relative, above terrain if GLOBAL_TERRAIN_ALT_INT</field>
               <field type="float" name="vx">X velocity in NED frame in meter / s</field>
               <field type="float" name="vy">Y velocity in NED frame in meter / s</field>
               <field type="float" name="vz">Z velocity in NED frame in meter / s</field>
               <field type="float" name="afx">X acceleration or force (if bit 10 of type_mask is set) in NED frame in meter / s^2 or N</field>
               <field type="float" name="afy">Y acceleration or force (if bit 10 of type_mask is set) in NED frame in meter / s^2 or N</field>
               <field type="float" name="afz">Z acceleration or force (if bit 10 of type_mask is set) in NED frame in meter / s^2 or N</field>
               <field type="float" name="yaw">yaw setpoint in rad</field>
               <field type="float" name="yaw_rate">yaw rate setpoint in rad/s</field>
          </message>
          <message id="87" name="POSITION_TARGET_GLOBAL_INT">
               <description>Set vehicle position, velocity and acceleration setpoint in the WGS84 coordinate system.</description>
               <field type="uint32_t" name="time_boot_ms">Timestamp in milliseconds since system boot. The rationale for the timestamp in the setpoint is to allow the system to compensate for the transport delay of the setpoint. This allows the system to compensate processing latency.</field>
               <field type="uint8_t" name="coordinate_frame" enum="MAV_FRAME">Valid options are: MAV_FRAME_GLOBAL_INT = 5, MAV_FRAME_GLOBAL_RELATIVE_ALT_INT = 6, MAV_FRAME_GLOBAL_TERRAIN_ALT_INT = 11</field>
               <field type="uint16_t" name="type_mask">Bitmask to indicate which dimensions should be ignored by the vehicle: a value of 0b0000000000000000 or 0b0000001000000000 indicates that none of the setpoint dimensions should be ignored. If bit 10 is set the floats afx afy afz should be interpreted as force instead of acceleration. Mapping: bit 1: x, bit 2: y, bit 3: z, bit 4: vx, bit 5: vy, bit 6: vz, bit 7: ax, bit 8: ay, bit 9: az, bit 10: is force setpoint, bit 11: yaw, bit 12: yaw rate</field>
               <field type="int32_t" name="lat_int">X Position in WGS84 frame in 1e7 * meters</field>
               <field type="int32_t" name="lon_int">Y Position in WGS84 frame in 1e7 * meters</field>
               <field type="float" name="alt">Altitude in meters in AMSL altitude, not WGS84 if absolute or relative, above terrain if GLOBAL_TERRAIN_ALT_INT</field>
               <field type="float" name="vx">X velocity in NED frame in meter / s</field>
               <field type="float" name="vy">Y velocity in NED frame in meter / s</field>
               <field type="float" name="vz">Z velocity in NED frame in meter / s</field>
               <field type="float" name="afx">X acceleration or force (if bit 10 of type_mask is set) in NED frame in meter / s^2 or N</field>
               <field type="float" name="afy">Y acceleration or force (if bit 10 of type_mask is set) in NED frame in meter / s^2 or N</field>
               <field type="float" name="afz">Z acceleration or force (if bit 10 of type_mask is set) in NED frame in meter / s^2 or N</field>
               <field type="float" name="yaw">yaw setpoint in rad</field>
               <field type="float" name="yaw_rate">yaw rate setpoint in rad/s</field>
          </message>
          <message id="89" name="LOCAL_POSITION_NED_SYSTEM_GLOBAL_OFFSET">
               <description>The offset in X, Y, Z and yaw between the LOCAL_POSITION_NED messages of MAV X and the global coordinate frame in NED coordinates. Coordinate frame is right-handed, Z-axis down (aeronautical frame, NED / north-east-down convention)</description>
               <field type="uint32_t" name="time_boot_ms">Timestamp (milliseconds since system boot)</field>
               <field type="float" name="x">X Position</field>
               <field type="float" name="y">Y Position</field>
               <field type="float" name="z">Z Position</field>
               <field type="float" name="roll">Roll</field>
               <field type="float" name="pitch">Pitch</field>
               <field type="float" name="yaw">Yaw</field>
          </message>
          <message id="90" name="HIL_STATE">
               <description>DEPRECATED PACKET! Suffers from missing airspeed fields and singularities due to Euler angles. Please use HIL_STATE_QUATERNION instead. Sent from simulation to autopilot. This packet is useful for high throughput applications such as hardware in the loop simulations.</description>
               <field type="uint64_t" name="time_usec">Timestamp (microseconds since UNIX epoch or microseconds since system boot)</field>
               <field type="float" name="roll">Roll angle (rad)</field>
               <field type="float" name="pitch">Pitch angle (rad)</field>
               <field type="float" name="yaw">Yaw angle (rad)</field>
               <field type="float" name="rollspeed">Body frame roll / phi angular speed (rad/s)</field>
               <field type="float" name="pitchspeed">Body frame pitch / theta angular speed (rad/s)</field>
               <field type="float" name="yawspeed">Body frame yaw / psi angular speed (rad/s)</field>
               <field type="int32_t" name="lat">Latitude, expressed as * 1E7</field>
               <field type="int32_t" name="lon">Longitude, expressed as * 1E7</field>
               <field type="int32_t" name="alt">Altitude in meters, expressed as * 1000 (millimeters)</field>
               <field type="int16_t" name="vx">Ground X Speed (Latitude), expressed as m/s * 100</field>
               <field type="int16_t" name="vy">Ground Y Speed (Longitude), expressed as m/s * 100</field>
               <field type="int16_t" name="vz">Ground Z Speed (Altitude), expressed as m/s * 100</field>
               <field type="int16_t" name="xacc">X acceleration (mg)</field>
               <field type="int16_t" name="yacc">Y acceleration (mg)</field>
               <field type="int16_t" name="zacc">Z acceleration (mg)</field>
          </message>
          <message id="91" name="HIL_CONTROLS">
               <description>Sent from autopilot to simulation. Hardware in the loop control outputs</description>
               <field name="time_usec" type="uint64_t">Timestamp (microseconds since UNIX epoch or microseconds since system boot)</field>
               <field name="roll_ailerons" type="float">Control output -1 .. 1</field>
               <field name="pitch_elevator" type="float">Control output -1 .. 1</field>
               <field name="yaw_rudder" type="float">Control output -1 .. 1</field>
               <field name="throttle" type="float">Throttle 0 .. 1</field>
               <field name="aux1" type="float">Aux 1, -1 .. 1</field>
               <field name="aux2" type="float">Aux 2, -1 .. 1</field>
               <field name="aux3" type="float">Aux 3, -1 .. 1</field>
               <field name="aux4" type="float">Aux 4, -1 .. 1</field>
               <field name="mode" type="uint8_t">System mode (MAV_MODE)</field>
               <field name="nav_mode" type="uint8_t">Navigation mode (MAV_NAV_MODE)</field>
          </message>
          <message id="92" name="HIL_RC_INPUTS_RAW">
               <description>Sent from simulation to autopilot. The RAW values of the RC channels received. The standard PPM modulation is as follows: 1000 microseconds: 0%, 2000 microseconds: 100%. Individual receivers/transmitters might violate this specification.</description>
               <field type="uint64_t" name="time_usec">Timestamp (microseconds since UNIX epoch or microseconds since system boot)</field>
               <field type="uint16_t" name="chan1_raw">RC channel 1 value, in microseconds</field>
               <field type="uint16_t" name="chan2_raw">RC channel 2 value, in microseconds</field>
               <field type="uint16_t" name="chan3_raw">RC channel 3 value, in microseconds</field>
               <field type="uint16_t" name="chan4_raw">RC channel 4 value, in microseconds</field>
               <field type="uint16_t" name="chan5_raw">RC channel 5 value, in microseconds</field>
               <field type="uint16_t" name="chan6_raw">RC channel 6 value, in microseconds</field>
               <field type="uint16_t" name="chan7_raw">RC channel 7 value, in microseconds</field>
               <field type="uint16_t" name="chan8_raw">RC channel 8 value, in microseconds</field>
               <field type="uint16_t" name="chan9_raw">RC channel 9 value, in microseconds</field>
               <field type="uint16_t" name="chan10_raw">RC channel 10 value, in microseconds</field>
               <field type="uint16_t" name="chan11_raw">RC channel 11 value, in microseconds</field>
               <field type="uint16_t" name="chan12_raw">RC channel 12 value, in microseconds</field>
               <field type="uint8_t" name="rssi">Receive signal strength indicator, 0: 0%, 255: 100%</field>
          </message>
          <message id="100" name="OPTICAL_FLOW">
               <description>Optical flow from a flow sensor (e.g. optical mouse sensor)</description>
               <field type="uint64_t" name="time_usec">Timestamp (UNIX)</field>
               <field type="uint8_t" name="sensor_id">Sensor ID</field>
              <field type="int16_t" name="flow_x">Flow in pixels * 10 in x-sensor direction (dezi-pixels)</field>
               <field type="int16_t" name="flow_y">Flow in pixels * 10 in y-sensor direction (dezi-pixels)</field>
               <field type="float" name="flow_comp_m_x">Flow in meters in x-sensor direction, angular-speed compensated</field>
               <field type="float" name="flow_comp_m_y">Flow in meters in y-sensor direction, angular-speed compensated</field>
               <field type="uint8_t" name="quality">Optical flow quality / confidence. 0: bad, 255: maximum quality</field>
               <field type="float" name="ground_distance">Ground distance in meters. Positive value: distance known. Negative value: Unknown distance</field>
          </message>
          <message id="101" name="GLOBAL_VISION_POSITION_ESTIMATE">
               <field type="uint64_t" name="usec">Timestamp (microseconds, synced to UNIX time or since system boot)</field>
               <field type="float" name="x">Global X position</field>
               <field type="float" name="y">Global Y position</field>
               <field type="float" name="z">Global Z position</field>
               <field type="float" name="roll">Roll angle in rad</field>
               <field type="float" name="pitch">Pitch angle in rad</field>
               <field type="float" name="yaw">Yaw angle in rad</field>
          </message>
          <message id="102" name="VISION_POSITION_ESTIMATE">
               <field type="uint64_t" name="usec">Timestamp (microseconds, synced to UNIX time or since system boot)</field>
               <field type="float" name="x">Global X position</field>
               <field type="float" name="y">Global Y position</field>
               <field type="float" name="z">Global Z position</field>
               <field type="float" name="roll">Roll angle in rad</field>
               <field type="float" name="pitch">Pitch angle in rad</field>
               <field type="float" name="yaw">Yaw angle in rad</field>
          </message>
          <message id="103" name="VISION_SPEED_ESTIMATE">
               <field type="uint64_t" name="usec">Timestamp (microseconds, synced to UNIX time or since system boot)</field>
               <field type="float" name="x">Global X speed</field>
               <field type="float" name="y">Global Y speed</field>
               <field type="float" name="z">Global Z speed</field>
          </message>
          <message id="104" name="VICON_POSITION_ESTIMATE">
               <field type="uint64_t" name="usec">Timestamp (microseconds, synced to UNIX time or since system boot)</field>
               <field type="float" name="x">Global X position</field>
               <field type="float" name="y">Global Y position</field>
               <field type="float" name="z">Global Z position</field>
               <field type="float" name="roll">Roll angle in rad</field>
               <field type="float" name="pitch">Pitch angle in rad</field>
               <field type="float" name="yaw">Yaw angle in rad</field>
          </message>
          <message id="105" name="HIGHRES_IMU">
             <description>The IMU readings in SI units in NED body frame</description>
             <field type="uint64_t" name="time_usec">Timestamp (microseconds, synced to UNIX time or since system boot)</field>
             <field type="float" name="xacc">X acceleration (m/s^2)</field>
             <field type="float" name="yacc">Y acceleration (m/s^2)</field>
             <field type="float" name="zacc">Z acceleration (m/s^2)</field>
             <field type="float" name="xgyro">Angular speed around X axis (rad / sec)</field>
             <field type="float" name="ygyro">Angular speed around Y axis (rad / sec)</field>
             <field type="float" name="zgyro">Angular speed around Z axis (rad / sec)</field>
             <field type="float" name="xmag">X Magnetic field (Gauss)</field>
             <field type="float" name="ymag">Y Magnetic field (Gauss)</field>
             <field type="float" name="zmag">Z Magnetic field (Gauss)</field>
             <field type="float" name="abs_pressure">Absolute pressure in millibar</field>
             <field type="float" name="diff_pressure">Differential pressure in millibar</field>
             <field type="float" name="pressure_alt">Altitude calculated from pressure</field>
             <field type="float" name="temperature">Temperature in degrees celsius</field>
             <field type="uint16_t" name="fields_updated">Bitmask for fields that have updated since last message, bit 0 = xacc, bit 12: temperature</field>
         </message>
         <message id="106" name="OPTICAL_FLOW_RAD">
             <description>Optical flow from an angular rate flow sensor (e.g. PX4FLOW or mouse sensor)</description>
             <field type="uint64_t" name="time_usec">Timestamp (microseconds, synced to UNIX time or since system boot)</field>
             <field type="uint8_t" name="sensor_id">Sensor ID</field>
             <field type="uint32_t" name="integration_time_us">Integration time in microseconds. Divide integrated_x and integrated_y by the integration time to obtain average flow. The integration time also indicates the.</field>
             <field type="float" name="integrated_x">Flow in radians around X axis (Sensor RH rotation about the X axis induces a positive flow. Sensor linear motion along the positive Y axis induces a negative flow.)</field>
             <field type="float" name="integrated_y">Flow in radians around Y axis (Sensor RH rotation about the Y axis induces a positive flow. Sensor linear motion along the positive X axis induces a positive flow.)</field>
             <field type="float" name="integrated_xgyro">RH rotation around X axis (rad)</field>
             <field type="float" name="integrated_ygyro">RH rotation around Y axis (rad)</field>
             <field type="float" name="integrated_zgyro">RH rotation around Z axis (rad)</field>
             <field type="int16_t" name="temperature">Temperature * 100 in centi-degrees Celsius</field>
             <field type="uint8_t" name="quality">Optical flow quality / confidence. 0: no valid flow, 255: maximum quality</field>
             <field type="uint32_t" name="time_delta_distance_us">Time in microseconds since the distance was sampled.</field>
             <field type="float" name="distance">Distance to the center of the flow field in meters. Positive value (including zero): distance known. Negative value: Unknown distance.</field>
         </message>

         <message id="107" name="HIL_SENSOR"> <description>The IMU readings in SI units in NED body frame</description>
           <field type="uint64_t" name="time_usec">Timestamp (microseconds, synced to UNIX time or since system boot)</field>
           <field type="float" name="xacc">X acceleration (m/s^2)</field>
           <field type="float" name="yacc">Y acceleration (m/s^2)</field>
           <field type="float" name="zacc">Z acceleration (m/s^2)</field>
           <field type="float" name="xgyro">Angular speed around X axis in body frame (rad / sec)</field>
           <field type="float" name="ygyro">Angular speed around Y axis in body frame (rad / sec)</field>
           <field type="float" name="zgyro">Angular speed around Z axis in body frame (rad / sec)</field>
           <field type="float" name="xmag">X Magnetic field (Gauss)</field>
           <field type="float" name="ymag">Y Magnetic field (Gauss)</field>
           <field type="float" name="zmag">Z Magnetic field (Gauss)</field>
           <field type="float" name="abs_pressure">Absolute pressure in millibar</field>
           <field type="float" name="diff_pressure">Differential pressure (airspeed) in millibar</field>
           <field type="float" name="pressure_alt">Altitude calculated from pressure</field>
           <field type="float" name="temperature">Temperature in degrees celsius</field>
           <field type="uint32_t" name="fields_updated">Bitmask for fields that have updated since last message, bit 0 = xacc, bit 12: temperature</field>
         </message>

	  <message name="SIM_STATE" id="108">
	    <description>Status of simulation environment, if used</description>
            <field type="float" name="q1">True attitude quaternion component 1, w (1 in null-rotation)</field>
            <field type="float" name="q2">True attitude quaternion component 2, x (0 in null-rotation)</field>
            <field type="float" name="q3">True attitude quaternion component 3, y (0 in null-rotation)</field>
            <field type="float" name="q4">True attitude quaternion component 4, z (0 in null-rotation)</field>
            <field type="float" name="roll">Attitude roll expressed as Euler angles, not recommended except for human-readable outputs</field>
            <field type="float" name="pitch">Attitude pitch expressed as Euler angles, not recommended except for human-readable outputs</field>
            <field type="float" name="yaw">Attitude yaw expressed as Euler angles, not recommended except for human-readable outputs</field>
            <field type="float" name="xacc">X acceleration m/s/s</field>
            <field type="float" name="yacc">Y acceleration m/s/s</field>
            <field type="float" name="zacc">Z acceleration m/s/s</field>
            <field type="float" name="xgyro">Angular speed around X axis rad/s</field>
            <field type="float" name="ygyro">Angular speed around Y axis rad/s</field>
            <field type="float" name="zgyro">Angular speed around Z axis rad/s</field>
            <field type="float" name="lat">Latitude in degrees</field>
            <field type="float" name="lon">Longitude in degrees</field>
            <field type="float" name="alt">Altitude in meters</field>
            <field type="float" name="std_dev_horz">Horizontal position standard deviation</field>
            <field type="float" name="std_dev_vert">Vertical position standard deviation</field>
            <field type="float" name="vn">True velocity in m/s in NORTH direction in earth-fixed NED frame</field>
            <field type="float" name="ve">True velocity in m/s in EAST direction in earth-fixed NED frame</field>
            <field type="float" name="vd">True velocity in m/s in DOWN direction in earth-fixed NED frame</field>
	  </message>

    	  <message name="RADIO_STATUS" id="109">
    	      <description>Status generated by radio and injected into MAVLink stream.</description>
            <field type="uint8_t" name="rssi">Local signal strength</field>
            <field type="uint8_t" name="remrssi">Remote signal strength</field>
            <field type="uint8_t" name="txbuf">Remaining free buffer space in percent.</field>
            <field type="uint8_t" name="noise">Background noise level</field>
            <field type="uint8_t" name="remnoise">Remote background noise level</field>
            <field type="uint16_t" name="rxerrors">Receive errors</field>
            <field type="uint16_t" name="fixed">Count of error corrected packets</field>
    	  </message>
        <message id="110" name="FILE_TRANSFER_PROTOCOL">
            <description>File transfer message</description>
            <field type="uint8_t" name="target_network">Network ID (0 for broadcast)</field>
            <field type="uint8_t" name="target_system">System ID (0 for broadcast)</field>
            <field type="uint8_t" name="target_component">Component ID (0 for broadcast)</field>
            <field type="uint8_t[251]" name="payload">Variable length payload. The length is defined by the remaining message length when subtracting the header and other fields.  The entire content of this block is opaque unless you understand any the encoding message_type.  The particular encoding used can be extension specific and might not always be documented as part of the mavlink specification.</field>
        </message>
        <message id="111" name="TIMESYNC">
            <description>Time synchronization message.</description>
            <field type="int64_t" name="tc1">Time sync timestamp 1</field>
            <field type="int64_t" name="ts1">Time sync timestamp 2</field>
        </message>
        <message id="112" name="CAMERA_TRIGGER">
            <description>Camera-IMU triggering and synchronisation message.</description>
            <field type="uint64_t" name="time_usec">Timestamp for the image frame in microseconds</field>
            <field type="uint32_t" name="seq">Image frame sequence</field>
        </message>
         <message id="113" name="HIL_GPS">
             <description>The global position, as returned by the Global Positioning System (GPS). This is
                 NOT the global position estimate of the sytem, but rather a RAW sensor value. See message GLOBAL_POSITION for the global position estimate. Coordinate frame is right-handed, Z-axis up (GPS frame).</description>
             <field type="uint64_t" name="time_usec">Timestamp (microseconds since UNIX epoch or microseconds since system boot)</field>
             <field type="uint8_t" name="fix_type">0-1: no fix, 2: 2D fix, 3: 3D fix. Some applications will not use the value of this field unless it is at least two, so always correctly fill in the fix.</field>
             <field type="int32_t" name="lat">Latitude (WGS84), in degrees * 1E7</field>
             <field type="int32_t" name="lon">Longitude (WGS84), in degrees * 1E7</field>
             <field type="int32_t" name="alt">Altitude (AMSL, not WGS84), in meters * 1000 (positive for up)</field>
             <field type="uint16_t" name="eph">GPS HDOP horizontal dilution of position in cm (m*100). If unknown, set to: 65535</field>
             <field type="uint16_t" name="epv">GPS VDOP vertical dilution of position in cm (m*100). If unknown, set to: 65535</field>
             <field type="uint16_t" name="vel">GPS ground speed (m/s * 100). If unknown, set to: 65535</field>
             <field type="int16_t" name="vn">GPS velocity in cm/s in NORTH direction in earth-fixed NED frame</field>
             <field type="int16_t" name="ve">GPS velocity in cm/s in EAST direction in earth-fixed NED frame</field>
             <field type="int16_t" name="vd">GPS velocity in cm/s in DOWN direction in earth-fixed NED frame</field>
             <field type="uint16_t" name="cog">Course over ground (NOT heading, but direction of movement) in degrees * 100, 0.0..359.99 degrees. If unknown, set to: 65535</field>
             <field type="uint8_t" name="satellites_visible">Number of satellites visible. If unknown, set to 255</field>
         </message>
         <message id="114" name="HIL_OPTICAL_FLOW">
             <description>Simulated optical flow from a flow sensor (e.g. PX4FLOW or optical mouse sensor)</description>
             <field type="uint64_t" name="time_usec">Timestamp (microseconds, synced to UNIX time or since system boot)</field>
             <field type="uint8_t" name="sensor_id">Sensor ID</field>
             <field type="uint32_t" name="integration_time_us">Integration time in microseconds. Divide integrated_x and integrated_y by the integration time to obtain average flow. The integration time also indicates the.</field>
             <field type="float" name="integrated_x">Flow in radians around X axis (Sensor RH rotation about the X axis induces a positive flow. Sensor linear motion along the positive Y axis induces a negative flow.)</field>
             <field type="float" name="integrated_y">Flow in radians around Y axis (Sensor RH rotation about the Y axis induces a positive flow. Sensor linear motion along the positive X axis induces a positive flow.)</field>
             <field type="float" name="integrated_xgyro">RH rotation around X axis (rad)</field>
             <field type="float" name="integrated_ygyro">RH rotation around Y axis (rad)</field>
             <field type="float" name="integrated_zgyro">RH rotation around Z axis (rad)</field>
             <field type="int16_t" name="temperature">Temperature * 100 in centi-degrees Celsius</field>
             <field type="uint8_t" name="quality">Optical flow quality / confidence. 0: no valid flow, 255: maximum quality</field>
             <field type="uint32_t" name="time_delta_distance_us">Time in microseconds since the distance was sampled.</field>
             <field type="float" name="distance">Distance to the center of the flow field in meters. Positive value (including zero): distance known. Negative value: Unknown distance.</field>
         </message>
         <message id="115" name="HIL_STATE_QUATERNION">
             <description>Sent from simulation to autopilot, avoids in contrast to HIL_STATE singularities. This packet is useful for high throughput applications such as hardware in the loop simulations.</description>
             <field type="uint64_t" name="time_usec">Timestamp (microseconds since UNIX epoch or microseconds since system boot)</field>
             <field type="float[4]" name="attitude_quaternion">Vehicle attitude expressed as normalized quaternion in w, x, y, z order (with 1 0 0 0 being the null-rotation)</field>
             <field type="float" name="rollspeed">Body frame roll / phi angular speed (rad/s)</field>
             <field type="float" name="pitchspeed">Body frame pitch / theta angular speed (rad/s)</field>
             <field type="float" name="yawspeed">Body frame yaw / psi angular speed (rad/s)</field>
             <field type="int32_t" name="lat">Latitude, expressed as * 1E7</field>
             <field type="int32_t" name="lon">Longitude, expressed as * 1E7</field>
             <field type="int32_t" name="alt">Altitude in meters, expressed as * 1000 (millimeters)</field>
             <field type="int16_t" name="vx">Ground X Speed (Latitude), expressed as m/s * 100</field>
             <field type="int16_t" name="vy">Ground Y Speed (Longitude), expressed as m/s * 100</field>
             <field type="int16_t" name="vz">Ground Z Speed (Altitude), expressed as m/s * 100</field>
             <field type="uint16_t" name="ind_airspeed">Indicated airspeed, expressed as m/s * 100</field>
             <field type="uint16_t" name="true_airspeed">True airspeed, expressed as m/s * 100</field>
             <field type="int16_t" name="xacc">X acceleration (mg)</field>
             <field type="int16_t" name="yacc">Y acceleration (mg)</field>
             <field type="int16_t" name="zacc">Z acceleration (mg)</field>
         </message>
         <message id="116" name="SCALED_IMU2">
           <description>The RAW IMU readings for secondary 9DOF sensor setup. This message should contain the scaled values to the described units</description>
           <field type="uint32_t" name="time_boot_ms">Timestamp (milliseconds since system boot)</field>
           <field type="int16_t" name="xacc">X acceleration (mg)</field>
           <field type="int16_t" name="yacc">Y acceleration (mg)</field>
           <field type="int16_t" name="zacc">Z acceleration (mg)</field>
           <field type="int16_t" name="xgyro">Angular speed around X axis (millirad /sec)</field>
           <field type="int16_t" name="ygyro">Angular speed around Y axis (millirad /sec)</field>
           <field type="int16_t" name="zgyro">Angular speed around Z axis (millirad /sec)</field>
           <field type="int16_t" name="xmag">X Magnetic field (milli tesla)</field>
           <field type="int16_t" name="ymag">Y Magnetic field (milli tesla)</field>
           <field type="int16_t" name="zmag">Z Magnetic field (milli tesla)</field>
         </message>
         <message id="117" name="LOG_REQUEST_LIST">
          <description>Request a list of available logs. On some systems calling this may stop on-board logging until LOG_REQUEST_END is called.</description>
          <field type="uint8_t" name="target_system">System ID</field>
          <field type="uint8_t" name="target_component">Component ID</field>
          <field type="uint16_t" name="start">First log id (0 for first available)</field>
          <field type="uint16_t" name="end">Last log id (0xffff for last available)</field>
         </message>
         <message id="118" name="LOG_ENTRY">
           <description>Reply to LOG_REQUEST_LIST</description>
           <field type="uint16_t" name="id">Log id</field>
           <field type="uint16_t" name="num_logs">Total number of logs</field>
           <field type="uint16_t" name="last_log_num">High log number</field>
           <field type="uint32_t" name="time_utc">UTC timestamp of log in seconds since 1970, or 0 if not available</field>
           <field type="uint32_t" name="size">Size of the log (may be approximate) in bytes</field>
         </message>
         <message id="119" name="LOG_REQUEST_DATA">
           <description>Request a chunk of a log</description>
           <field type="uint8_t" name="target_system">System ID</field>
           <field type="uint8_t" name="target_component">Component ID</field>
           <field type="uint16_t" name="id">Log id (from LOG_ENTRY reply)</field>
           <field type="uint32_t" name="ofs">Offset into the log</field>
           <field type="uint32_t" name="count">Number of bytes</field>
         </message>
         <message id="120" name="LOG_DATA">
           <description>Reply to LOG_REQUEST_DATA</description>
           <field type="uint16_t" name="id">Log id (from LOG_ENTRY reply)</field>
           <field type="uint32_t" name="ofs">Offset into the log</field>
           <field type="uint8_t" name="count">Number of bytes (zero for end of log)</field>
           <field type="uint8_t[90]" name="data">log data</field>
         </message>
         <message id="121" name="LOG_ERASE">
           <description>Erase all logs</description>
           <field type="uint8_t" name="target_system">System ID</field>
           <field type="uint8_t" name="target_component">Component ID</field>
         </message>
         <message id="122" name="LOG_REQUEST_END">
           <description>Stop log transfer and resume normal logging</description>
           <field type="uint8_t" name="target_system">System ID</field>
           <field type="uint8_t" name="target_component">Component ID</field>
         </message>
	       <message name="GPS_INJECT_DATA" id="123">
           <description>data for injecting into the onboard GPS (used for DGPS)</description>
           <field type="uint8_t" name="target_system">System ID</field>
           <field type="uint8_t" name="target_component">Component ID</field>
           <field type="uint8_t" name="len">data length</field>
           <field type="uint8_t[110]" name="data">raw data (110 is enough for 12 satellites of RTCMv2)</field>
         </message>
         <message id="124" name="GPS2_RAW">
           <description>Second GPS data. Coordinate frame is right-handed, Z-axis up (GPS frame).</description>
           <field type="uint64_t" name="time_usec">Timestamp (microseconds since UNIX epoch or microseconds since system boot)</field>
           <field type="uint8_t" name="fix_type">0-1: no fix, 2: 2D fix, 3: 3D fix, 4: DGPS fix, 5: RTK Fix. Some applications will not use the value of this field unless it is at least two, so always correctly fill in the fix.</field>
           <field type="int32_t" name="lat">Latitude (WGS84), in degrees * 1E7</field>
           <field type="int32_t" name="lon">Longitude (WGS84), in degrees * 1E7</field>
           <field type="int32_t" name="alt">Altitude (AMSL, not WGS84), in meters * 1000 (positive for up)</field>
           <field type="uint16_t" name="eph">GPS HDOP horizontal dilution of position in cm (m*100). If unknown, set to: UINT16_MAX</field>
           <field type="uint16_t" name="epv">GPS VDOP vertical dilution of position in cm (m*100). If unknown, set to: UINT16_MAX</field>
           <field type="uint16_t" name="vel">GPS ground speed (m/s * 100). If unknown, set to: UINT16_MAX</field>
           <field type="uint16_t" name="cog">Course over ground (NOT heading, but direction of movement) in degrees * 100, 0.0..359.99 degrees. If unknown, set to: UINT16_MAX</field>
           <field type="uint8_t" name="satellites_visible">Number of satellites visible. If unknown, set to 255</field>
           <field type="uint8_t" name="dgps_numch">Number of DGPS satellites</field>
           <field type="uint32_t" name="dgps_age">Age of DGPS info</field>
         </message>
         <message id="125" name="POWER_STATUS">
               <description>Power supply status</description>
               <field type="uint16_t" name="Vcc">5V rail voltage in millivolts</field>
               <field type="uint16_t" name="Vservo">servo rail voltage in millivolts</field>
               <field type="uint16_t" name="flags">power supply status flags (see MAV_POWER_STATUS enum)</field>
         </message>
         <message name="SERIAL_CONTROL" id="126">
           <description>Control a serial port. This can be used for raw access to an onboard serial peripheral such as a GPS or telemetry radio. It is designed to make it possible to update the devices firmware via MAVLink messages or change the devices settings. A message with zero bytes can be used to change just the baudrate.</description>
           <field type="uint8_t" name="device">See SERIAL_CONTROL_DEV enum</field>
           <field type="uint8_t" name="flags">See SERIAL_CONTROL_FLAG enum</field>
           <field type="uint16_t" name="timeout">Timeout for reply data in milliseconds</field>
           <field type="uint32_t" name="baudrate">Baudrate of transfer. Zero means no change.</field>
           <field type="uint8_t" name="count">how many bytes in this transfer</field>
           <field type="uint8_t[70]" name="data">serial data</field>
         </message>
         <message id="127" name="GPS_RTK">
            <description>RTK GPS data. Gives information on the relative baseline calculation the GPS is reporting</description>
            <field type="uint32_t" name="time_last_baseline_ms">Time since boot of last baseline message received in ms.</field>
            <field type="uint8_t" name="rtk_receiver_id">Identification of connected RTK receiver.</field>
            <field type="uint16_t" name="wn">GPS Week Number of last baseline</field>
            <field type="uint32_t" name="tow">GPS Time of Week of last baseline</field>
            <field type="uint8_t" name="rtk_health">GPS-specific health report for RTK data.</field>
            <field type="uint8_t" name="rtk_rate">Rate of baseline messages being received by GPS, in HZ</field>
            <field type="uint8_t" name="nsats">Current number of sats used for RTK calculation.</field>
            <field type="uint8_t" name="baseline_coords_type">Coordinate system of baseline. 0 == ECEF, 1 == NED</field>
            <field type="int32_t" name="baseline_a_mm">Current baseline in ECEF x or NED north component in mm.</field>
            <field type="int32_t" name="baseline_b_mm">Current baseline in ECEF y or NED east component in mm.</field>
            <field type="int32_t" name="baseline_c_mm">Current baseline in ECEF z or NED down component in mm.</field>
            <field type="uint32_t" name="accuracy">Current estimate of baseline accuracy.</field>
            <field type="int32_t" name="iar_num_hypotheses">Current number of integer ambiguity hypotheses.</field>
         </message>
         <message id="128" name="GPS2_RTK">
            <description>RTK GPS data. Gives information on the relative baseline calculation the GPS is reporting</description>
            <field type="uint32_t" name="time_last_baseline_ms">Time since boot of last baseline message received in ms.</field>
            <field type="uint8_t" name="rtk_receiver_id">Identification of connected RTK receiver.</field>
            <field type="uint16_t" name="wn">GPS Week Number of last baseline</field>
            <field type="uint32_t" name="tow">GPS Time of Week of last baseline</field>
            <field type="uint8_t" name="rtk_health">GPS-specific health report for RTK data.</field>
            <field type="uint8_t" name="rtk_rate">Rate of baseline messages being received by GPS, in HZ</field>
            <field type="uint8_t" name="nsats">Current number of sats used for RTK calculation.</field>
            <field type="uint8_t" name="baseline_coords_type">Coordinate system of baseline. 0 == ECEF, 1 == NED</field>
            <field type="int32_t" name="baseline_a_mm">Current baseline in ECEF x or NED north component in mm.</field>
            <field type="int32_t" name="baseline_b_mm">Current baseline in ECEF y or NED east component in mm.</field>
            <field type="int32_t" name="baseline_c_mm">Current baseline in ECEF z or NED down component in mm.</field>
            <field type="uint32_t" name="accuracy">Current estimate of baseline accuracy.</field>
            <field type="int32_t" name="iar_num_hypotheses">Current number of integer ambiguity hypotheses.</field>
        </message>
        <message id="129" name="SCALED_IMU3">
          <description>The RAW IMU readings for 3rd 9DOF sensor setup. This message should contain the scaled values to the described units</description>
          <field type="uint32_t" name="time_boot_ms">Timestamp (milliseconds since system boot)</field>
          <field type="int16_t" name="xacc">X acceleration (mg)</field>
          <field type="int16_t" name="yacc">Y acceleration (mg)</field>
          <field type="int16_t" name="zacc">Z acceleration (mg)</field>
          <field type="int16_t" name="xgyro">Angular speed around X axis (millirad /sec)</field>
          <field type="int16_t" name="ygyro">Angular speed around Y axis (millirad /sec)</field>
          <field type="int16_t" name="zgyro">Angular speed around Z axis (millirad /sec)</field>
          <field type="int16_t" name="xmag">X Magnetic field (milli tesla)</field>
          <field type="int16_t" name="ymag">Y Magnetic field (milli tesla)</field>
          <field type="int16_t" name="zmag">Z Magnetic field (milli tesla)</field>
        </message>
        <message id="130" name="DATA_TRANSMISSION_HANDSHAKE">
            <field type="uint8_t" name="type">type of requested/acknowledged data (as defined in ENUM DATA_TYPES in mavlink/include/mavlink_types.h)</field>
            <field type="uint32_t" name="size">total data size in bytes (set on ACK only)</field>
            <field type="uint16_t" name="width">Width of a matrix or image</field>
            <field type="uint16_t" name="height">Height of a matrix or image</field>
            <field type="uint16_t" name="packets">number of packets beeing sent (set on ACK only)</field>
            <field type="uint8_t" name="payload">payload size per packet (normally 253 byte, see DATA field size in message ENCAPSULATED_DATA) (set on ACK only)</field>
            <field type="uint8_t" name="jpg_quality">JPEG quality out of [1,100]</field>
        </message>
        <message id="131" name="ENCAPSULATED_DATA">
            <field type="uint16_t" name="seqnr">sequence number (starting with 0 on every transmission)</field>
            <field type="uint8_t[253]" name="data">image data bytes</field>
        </message>
        <message id="132" name="DISTANCE_SENSOR">
            <field type="uint32_t" name="time_boot_ms">Time since system boot</field>
            <field type="uint16_t" name="min_distance">Minimum distance the sensor can measure in centimeters</field>
            <field type="uint16_t" name="max_distance">Maximum distance the sensor can measure in centimeters</field>
            <field type="uint16_t" name="current_distance">Current distance reading</field>
            <field type="uint8_t" name="type">Type from MAV_DISTANCE_SENSOR enum.</field>
            <field type="uint8_t" name="id">Onboard ID of the sensor</field>
            <field type="uint8_t" name="orientation">Direction the sensor faces from MAV_SENSOR_ORIENTATION enum.</field>
            <field type="uint8_t" name="covariance">Measurement covariance in centimeters, 0 for unknown / invalid readings</field>
         </message>
         <message id="133" name="TERRAIN_REQUEST">
            <description>Request for terrain data and terrain status</description>
            <field type="int32_t" name="lat">Latitude of SW corner of first grid (degrees *10^7)</field>
            <field type="int32_t" name="lon">Longitude of SW corner of first grid (in degrees *10^7)</field>
            <field type="uint16_t" name="grid_spacing">Grid spacing in meters</field>
            <field type="uint64_t" name="mask" print_format="0x%07x">Bitmask of requested 4x4 grids (row major 8x7 array of grids, 56 bits)</field>
         </message>
         <message id="134" name="TERRAIN_DATA">
            <description>Terrain data sent from GCS. The lat/lon and grid_spacing must be the same as a lat/lon from a TERRAIN_REQUEST</description>
            <field type="int32_t" name="lat">Latitude of SW corner of first grid (degrees *10^7)</field>
            <field type="int32_t" name="lon">Longitude of SW corner of first grid (in degrees *10^7)</field>
            <field type="uint16_t" name="grid_spacing">Grid spacing in meters</field>
            <field type="uint8_t" name="gridbit">bit within the terrain request mask</field>
            <field type="int16_t[16]" name="data">Terrain data in meters AMSL</field>
         </message>
         <message id="135" name="TERRAIN_CHECK">
            <description>Request that the vehicle report terrain height at the given location. Used by GCS to check if vehicle has all terrain data needed for a mission.</description>
            <field type="int32_t" name="lat">Latitude (degrees *10^7)</field>
            <field type="int32_t" name="lon">Longitude (degrees *10^7)</field>
         </message>
         <message id="136" name="TERRAIN_REPORT">
            <description>Response from a TERRAIN_CHECK request</description>
            <field type="int32_t" name="lat">Latitude (degrees *10^7)</field>
            <field type="int32_t" name="lon">Longitude (degrees *10^7)</field>
            <field type="uint16_t" name="spacing">grid spacing (zero if terrain at this location unavailable)</field>
            <field type="float" name="terrain_height">Terrain height in meters AMSL</field>
            <field type="float" name="current_height">Current vehicle height above lat/lon terrain height (meters)</field>
            <field type="uint16_t" name="pending">Number of 4x4 terrain blocks waiting to be received or read from disk</field>
            <field type="uint16_t" name="loaded">Number of 4x4 terrain blocks in memory</field>
         </message>
         <message id="137" name="SCALED_PRESSURE2">
           <description>Barometer readings for 2nd barometer</description>
           <field type="uint32_t" name="time_boot_ms">Timestamp (milliseconds since system boot)</field>
           <field type="float" name="press_abs">Absolute pressure (hectopascal)</field>
           <field type="float" name="press_diff">Differential pressure 1 (hectopascal)</field>
           <field type="int16_t" name="temperature">Temperature measurement (0.01 degrees celsius)</field>
         </message>
        <message id="138" name="ATT_POS_MOCAP">
          <description>Motion capture attitude and position</description>
          <field type="uint64_t" name="time_usec">Timestamp (micros since boot or Unix epoch)</field>
          <field type="float[4]" name="q">Attitude quaternion (w, x, y, z order, zero-rotation is 1, 0, 0, 0)</field>
          <field type="float" name="x">X position in meters (NED)</field>
          <field type="float" name="y">Y position in meters (NED)</field>
          <field type="float" name="z">Z position in meters (NED)</field>
        </message>
        <message id="139" name="SET_ACTUATOR_CONTROL_TARGET">
            <description>Set the vehicle attitude and body angular rates.</description>
            <field type="uint64_t" name="time_usec">Timestamp (micros since boot or Unix epoch)</field>
            <field type="uint8_t" name="group_mlx">Actuator group. The "_mlx" indicates this is a multi-instance message and a MAVLink parser should use this field to difference between instances.</field>
            <field type="uint8_t" name="target_system">System ID</field>
            <field type="uint8_t" name="target_component">Component ID</field>
            <field type="float[8]" name="controls">Actuator controls. Normed to -1..+1 where 0 is neutral position. Throttle for single rotation direction motors is 0..1, negative range for reverse direction. Standard mapping for attitude controls (group 0): (index 0-7): roll, pitch, yaw, throttle, flaps, spoilers, airbrakes, landing gear. Load a pass-through mixer to repurpose them as generic outputs.</field>
        </message>
        <message id="140" name="ACTUATOR_CONTROL_TARGET">
            <description>Set the vehicle attitude and body angular rates.</description>
            <field type="uint64_t" name="time_usec">Timestamp (micros since boot or Unix epoch)</field>
            <field type="uint8_t" name="group_mlx">Actuator group. The "_mlx" indicates this is a multi-instance message and a MAVLink parser should use this field to difference between instances.</field>
            <field type="float[8]" name="controls">Actuator controls. Normed to -1..+1 where 0 is neutral position. Throttle for single rotation direction motors is 0..1, negative range for reverse direction. Standard mapping for attitude controls (group 0): (index 0-7): roll, pitch, yaw, throttle, flaps, spoilers, airbrakes, landing gear. Load a pass-through mixer to repurpose them as generic outputs.</field>
        </message>
        <message id="141" name="ALTITUDE">
            <description>The current system altitude.</description>
            <field type="uint64_t" name="time_usec">Timestamp (milliseconds since system boot)</field>
            <field type="float" name="altitude_monotonic">This altitude measure is initialized on system boot and monotonic (it is never reset, but represents the local altitude change). The only guarantee on this field is that it will never be reset and is consistent within a flight. The recommended value for this field is the uncorrected barometric altitude at boot time. This altitude will also drift and vary between flights.</field>
            <field type="float" name="altitude_amsl">This altitude measure is strictly above mean sea level and might be non-monotonic (it might reset on events like GPS lock or when a new QNH value is set). It should be the altitude to which global altitude waypoints are compared to. Note that it is *not* the GPS altitude, however, most GPS modules already output AMSL by default and not the WGS84 altitude.</field>
            <field type="float" name="altitude_local">This is the local altitude in the local coordinate frame. It is not the altitude above home, but in reference to the coordinate origin (0, 0, 0). It is up-positive.</field>
            <field type="float" name="altitude_relative">This is the altitude above the home position. It resets on each change of the current home position.</field>
            <field type="float" name="altitude_terrain">This is the altitude above terrain. It might be fed by a terrain database or an altimeter. Values smaller than -1000 should be interpreted as unknown.</field>
            <field type="float" name="bottom_clearance">This is not the altitude, but the clear space below the system according to the fused clearance estimate. It generally should max out at the maximum range of e.g. the laser altimeter. It is generally a moving target. A negative value indicates no measurement available.</field>
        </message>
        <message id="142" name="RESOURCE_REQUEST">
            <description>The autopilot is requesting a resource (file, binary, other type of data)</description>
            <field type="uint8_t" name="request_id">Request ID. This ID should be re-used when sending back URI contents</field>
            <field type="uint8_t" name="uri_type">The type of requested URI. 0 = a file via URL. 1 = a UAVCAN binary</field>
            <field type="uint8_t[120]" name="uri">The requested unique resource identifier (URI). It is not necessarily a straight domain name (depends on the URI type enum)</field>
            <field type="uint8_t" name="transfer_type">The way the autopilot wants to receive the URI. 0 = MAVLink FTP. 1 = binary stream.</field>
            <field type="uint8_t[120]" name="storage">The storage path the autopilot wants the URI to be stored in. Will only be valid if the transfer_type has a storage associated (e.g. MAVLink FTP).</field>
        </message>
        <message id="143" name="SCALED_PRESSURE3">
          <description>Barometer readings for 3rd barometer</description>
          <field type="uint32_t" name="time_boot_ms">Timestamp (milliseconds since system boot)</field>
          <field type="float" name="press_abs">Absolute pressure (hectopascal)</field>
          <field type="float" name="press_diff">Differential pressure 1 (hectopascal)</field>
           <field type="int16_t" name="temperature">Temperature measurement (0.01 degrees celsius)</field>
        </message>
        <message id="146" name="CONTROL_SYSTEM_STATE">
            <description>The smoothed, monotonic system state used to feed the control loops of the system.</description>
            <field type="uint64_t" name="time_usec">Timestamp (micros since boot or Unix epoch)</field>
            <field type="float" name="x_acc">X acceleration in body frame</field>
            <field type="float" name="y_acc">Y acceleration in body frame</field>
            <field type="float" name="z_acc">Z acceleration in body frame</field>
            <field type="float" name="x_vel">X velocity in body frame</field>
            <field type="float" name="y_vel">Y velocity in body frame</field>
            <field type="float" name="z_vel">Z velocity in body frame</field>
            <field type="float" name="x_pos">X position in local frame</field>
            <field type="float" name="y_pos">Y position in local frame</field>
            <field type="float" name="z_pos">Z position in local frame</field>
            <field type="float" name="airspeed">Airspeed, set to -1 if unknown</field>
            <field type="float[3]" name="vel_variance">Variance of body velocity estimate</field>
            <field type="float[3]" name="pos_variance">Variance in local position</field>
            <field type="float[4]" name="q">The attitude, represented as Quaternion</field>
            <field type="float" name="roll_rate">Angular rate in roll axis</field>
            <field type="float" name="pitch_rate">Angular rate in pitch axis</field>
            <field type="float" name="yaw_rate">Angular rate in yaw axis</field>
        </message>
        <message id="147" name="BATTERY_STATUS">
            <description>Battery information</description>
            <field type="uint8_t" name="id">Battery ID</field>
            <field type="uint8_t" name="battery_function" enum="MAV_BATTERY_FUNCTION">Function of the battery</field>
            <field type="uint8_t" name="type" enum="MAV_BATTERY_TYPE">Type (chemistry) of the battery</field>
            <field type="int16_t" name="temperature">Temperature of the battery in centi-degrees celsius. INT16_MAX for unknown temperature.</field>
            <field type="uint16_t[10]" name="voltages">Battery voltage of cells, in millivolts (1 = 1 millivolt)</field>
            <field type="int16_t" name="current_battery">Battery current, in 10*milliamperes (1 = 10 milliampere), -1: autopilot does not measure the current</field>
            <field type="int32_t" name="current_consumed">Consumed charge, in milliampere hours (1 = 1 mAh), -1: autopilot does not provide mAh consumption estimate</field>
            <field type="int32_t" name="energy_consumed">Consumed energy, in 100*Joules (intergrated U*I*dt)  (1 = 100 Joule), -1: autopilot does not provide energy consumption estimate</field>
            <field type="int8_t" name="battery_remaining">Remaining battery energy: (0%: 0, 100%: 100), -1: autopilot does not estimate the remaining battery</field>
        </message>
        <message id="148" name="AUTOPILOT_VERSION">
            <description>Version and capability of autopilot software</description>
            <field type="uint64_t" name="capabilities">bitmask of capabilities (see MAV_PROTOCOL_CAPABILITY enum)</field>
            <field type="uint32_t" name="flight_sw_version">Firmware version number</field>
            <field type="uint32_t" name="middleware_sw_version">Middleware version number</field>
            <field type="uint32_t" name="os_sw_version">Operating system version number</field>
            <field type="uint32_t" name="board_version">HW / board version (last 8 bytes should be silicon ID, if any)</field>
            <field type="uint8_t[8]" name="flight_custom_version">Custom version field, commonly the first 8 bytes of the git hash. This is not an unique identifier, but should allow to identify the commit using the main version number even for very large code bases.</field>
            <field type="uint8_t[8]" name="middleware_custom_version">Custom version field, commonly the first 8 bytes of the git hash. This is not an unique identifier, but should allow to identify the commit using the main version number even for very large code bases.</field>
            <field type="uint8_t[8]" name="os_custom_version">Custom version field, commonly the first 8 bytes of the git hash. This is not an unique identifier, but should allow to identify the commit using the main version number even for very large code bases.</field>
            <field type="uint16_t" name="vendor_id">ID of the board vendor</field>
            <field type="uint16_t" name="product_id">ID of the product</field>
            <field type="uint64_t" name="uid">UID if provided by hardware</field>
        </message>
        <message id="149" name="LANDING_TARGET">
            <description>The location of a landing area captured from a downward facing camera</description>
            <field type="uint64_t" name="time_usec">Timestamp (micros since boot or Unix epoch)</field>
            <field type="uint8_t" name="target_num">The ID of the target if multiple targets are present</field>
            <field type="uint8_t" name="frame">MAV_FRAME enum specifying the whether the following feilds are earth-frame, body-frame, etc.</field>
            <field type="float" name="angle_x">X-axis angular offset (in radians) of the target from the center of the image</field>
            <field type="float" name="angle_y">Y-axis angular offset (in radians) of the target from the center of the image</field>
            <field type="float" name="distance">Distance to the target from the vehicle in meters</field>
            <field type="float" name="size_x">Size in radians of target along x-axis</field>
            <field type="float" name="size_y">Size in radians of target along y-axis</field>
        </message>
        <!-- MESSAGE IDs 180 - 240: Space for custom messages in individual projectname_messages.xml files -->
        <message id="241" name="VIBRATION">
            <description>Vibration levels and accelerometer clipping</description>
            <field type="uint64_t" name="time_usec">Timestamp (micros since boot or Unix epoch)</field>
            <field type="float" name="vibration_x">Vibration levels on X-axis</field>
            <field type="float" name="vibration_y">Vibration levels on Y-axis</field>
            <field type="float" name="vibration_z">Vibration levels on Z-axis</field>
            <field type="uint32_t" name="clipping_0">first accelerometer clipping count</field>
            <field type="uint32_t" name="clipping_1">second accelerometer clipping count</field>
            <field type="uint32_t" name="clipping_2">third accelerometer clipping count</field>
        </message>
        <message id="242" name="HOME_POSITION">
               <description>This message can be requested by sending the MAV_CMD_GET_HOME_POSITION command. The position the system will return to and land on. The position is set automatically by the system during the takeoff in case it was not explicitely set by the operator before or after. The position the system will return to and land on. The global and local positions encode the position in the respective coordinate frames, while the q parameter encodes the orientation of the surface. Under normal conditions it describes the heading and terrain slope, which can be used by the aircraft to adjust the approach. The approach 3D vector describes the point to which the system should fly in normal flight mode and then perform a landing sequence along the vector.</description>
               <field type="int32_t" name="latitude">Latitude (WGS84), in degrees * 1E7</field>
               <field type="int32_t" name="longitude">Longitude (WGS84, in degrees * 1E7</field>
               <field type="int32_t" name="altitude">Altitude (AMSL), in meters * 1000 (positive for up)</field>
               <field type="float" name="x">Local X position of this position in the local coordinate frame</field>
               <field type="float" name="y">Local Y position of this position in the local coordinate frame</field>
               <field type="float" name="z">Local Z position of this position in the local coordinate frame</field>
               <field type="float[4]" name="q">World to surface normal and heading transformation of the takeoff position. Used to indicate the heading and slope of the ground</field>
               <field type="float" name="approach_x">Local X position of the end of the approach vector. Multicopters should set this position based on their takeoff path. Grass-landing fixed wing aircraft should set it the same way as multicopters. Runway-landing fixed wing aircraft should set it to the opposite direction of the takeoff, assuming the takeoff happened from the threshold / touchdown zone.</field>
               <field type="float" name="approach_y">Local Y position of the end of the approach vector. Multicopters should set this position based on their takeoff path. Grass-landing fixed wing aircraft should set it the same way as multicopters. Runway-landing fixed wing aircraft should set it to the opposite direction of the takeoff, assuming the takeoff happened from the threshold / touchdown zone.</field>
               <field type="float" name="approach_z">Local Z position of the end of the approach vector. Multicopters should set this position based on their takeoff path. Grass-landing fixed wing aircraft should set it the same way as multicopters. Runway-landing fixed wing aircraft should set it to the opposite direction of the takeoff, assuming the takeoff happened from the threshold / touchdown zone.</field>
        </message>
        <message id="243" name="SET_HOME_POSITION">
               <description>The position the system will return to and land on. The position is set automatically by the system during the takeoff in case it was not explicitely set by the operator before or after. The global and local positions encode the position in the respective coordinate frames, while the q parameter encodes the orientation of the surface. Under normal conditions it describes the heading and terrain slope, which can be used by the aircraft to adjust the approach. The approach 3D vector describes the point to which the system should fly in normal flight mode and then perform a landing sequence along the vector.</description>
               <field type="uint8_t" name="target_system">System ID.</field>
               <field type="int32_t" name="latitude">Latitude (WGS84), in degrees * 1E7</field>
               <field type="int32_t" name="longitude">Longitude (WGS84, in degrees * 1E7</field>
               <field type="int32_t" name="altitude">Altitude (AMSL), in meters * 1000 (positive for up)</field>
               <field type="float" name="x">Local X position of this position in the local coordinate frame</field>
               <field type="float" name="y">Local Y position of this position in the local coordinate frame</field>
               <field type="float" name="z">Local Z position of this position in the local coordinate frame</field>
               <field type="float[4]" name="q">World to surface normal and heading transformation of the takeoff position. Used to indicate the heading and slope of the ground</field>
               <field type="float" name="approach_x">Local X position of the end of the approach vector. Multicopters should set this position based on their takeoff path. Grass-landing fixed wing aircraft should set it the same way as multicopters. Runway-landing fixed wing aircraft should set it to the opposite direction of the takeoff, assuming the takeoff happened from the threshold / touchdown zone.</field>
               <field type="float" name="approach_y">Local Y position of the end of the approach vector. Multicopters should set this position based on their takeoff path. Grass-landing fixed wing aircraft should set it the same way as multicopters. Runway-landing fixed wing aircraft should set it to the opposite direction of the takeoff, assuming the takeoff happened from the threshold / touchdown zone.</field>
               <field type="float" name="approach_z">Local Z position of the end of the approach vector. Multicopters should set this position based on their takeoff path. Grass-landing fixed wing aircraft should set it the same way as multicopters. Runway-landing fixed wing aircraft should set it to the opposite direction of the takeoff, assuming the takeoff happened from the threshold / touchdown zone.</field>
        </message>
        <message id="244" name="MESSAGE_INTERVAL">
            <description>This interface replaces DATA_STREAM</description>
            <field type="uint16_t" name="message_id">The ID of the requested MAVLink message. v1.0 is limited to 254 messages.</field>
            <field type="int32_t" name="interval_us">The interval between two messages, in microseconds. A value of -1 indicates this stream is disabled, 0 indicates it is not available, > 0 indicates the interval at which it is sent.</field>
        </message>
        <message id="245" name="EXTENDED_SYS_STATE">
            <description>Provides state for additional features</description>
            <field type="uint8_t" name="vtol_state" enum="MAV_VTOL_STATE">The VTOL state if applicable. Is set to MAV_VTOL_STATE_UNDEFINED if UAV is not in VTOL configuration.</field>
            <field type="uint8_t" name="landed_state" enum="MAV_LANDED_STATE">The landed state. Is set to MAV_LANDED_STATE_UNDEFINED if landed state is unknown.</field>
        </message>
        <message id="246" name="ADSB_VEHICLE">
          <description>The location and information of an ADSB vehicle</description>
          <field type="uint32_t" name="ICAO_address">ICAO address</field>
          <field type="int32_t" name="lat">Latitude, expressed as degrees * 1E7</field>
          <field type="int32_t" name="lon">Longitude, expressed as degrees * 1E7</field>
          <field type="uint8_t" name="altitude_type" enum="ADSB_ALTITUDE_TYPE">Type from ADSB_ALTITUDE_TYPE enum</field>
          <field type="float" name="altitude">Altitude(ASL) in meters</field>
          <field type="uint16_t" name="heading">Course over ground in centidegrees</field>
          <field type="float" name="hor_velocity">The horizontal velocity in meters/second</field>
          <field type="float" name="ver_velocity">The vertical velocity in meters/second, positive is up</field>
          <field type="char[9]" name="callsign">The callsign, 8+null</field>
          <field type="uint8_t" name="emitter_type" enum="ADSB_EMITTER_TYPE">Type from ADSB_EMITTER_TYPE enum</field>
          <field type="uint8_t" name="tslc">Time since last communication in seconds</field>
          <field type="uint16_t" name="flags" enum="ADSB_FLAGS">Flags to indicate various statuses including valid data fields</field>
          <field type="uint16_t" name="squawk">Squawk code</field>
        </message>
        <message id="248" name="V2_EXTENSION">
            <description>Message implementing parts of the V2 payload specs in V1 frames for transitional support.</description>
            <field type="uint8_t" name="target_network">Network ID (0 for broadcast)</field>
            <field type="uint8_t" name="target_system">System ID (0 for broadcast)</field>
            <field type="uint8_t" name="target_component">Component ID (0 for broadcast)</field>
            <field type="uint16_t" name="message_type">A code that identifies the software component that understands this message (analogous to usb device classes or mime type strings).  If this code is less than 32768, it is considered a 'registered' protocol extension and the corresponding entry should be added to https://github.com/mavlink/mavlink/extension-message-ids.xml.  Software creators can register blocks of message IDs as needed (useful for GCS specific metadata, etc...). Message_types greater than 32767 are considered local experiments and should not be checked in to any widely distributed codebase.</field>
            <field type="uint8_t[249]" name="payload">Variable length payload. The length is defined by the remaining message length when subtracting the header and other fields.  The entire content of this block is opaque unless you understand any the encoding message_type.  The particular encoding used can be extension specific and might not always be documented as part of the mavlink specification.</field>
        </message>
          <message id="249" name="MEMORY_VECT">
               <description>Send raw controller memory. The use of this message is discouraged for normal packets, but a quite efficient way for testing new messages and getting experimental debug output.</description>
               <field type="uint16_t" name="address">Starting address of the debug variables</field>
               <field type="uint8_t" name="ver">Version code of the type variable. 0=unknown, type ignored and assumed int16_t. 1=as below</field>
               <field type="uint8_t" name="type">Type code of the memory variables. for ver = 1: 0=16 x int16_t, 1=16 x uint16_t, 2=16 x Q15, 3=16 x 1Q14</field>
               <field type="int8_t[32]" name="value">Memory contents at specified address</field>
          </message>
          <message id="250" name="DEBUG_VECT">
               <field type="char[10]" name="name">Name</field>
               <field type="uint64_t" name="time_usec">Timestamp</field>
               <field type="float" name="x">x</field>
               <field type="float" name="y">y</field>
               <field type="float" name="z">z</field>
          </message>
          <message id="251" name="NAMED_VALUE_FLOAT">
               <description>Send a key-value pair as float. The use of this message is discouraged for normal packets, but a quite efficient way for testing new messages and getting experimental debug output.</description>
               <field type="uint32_t" name="time_boot_ms">Timestamp (milliseconds since system boot)</field>
               <field type="char[10]" name="name">Name of the debug variable</field>
               <field type="float" name="value">Floating point value</field>
          </message>
          <message id="252" name="NAMED_VALUE_INT">
               <description>Send a key-value pair as integer. The use of this message is discouraged for normal packets, but a quite efficient way for testing new messages and getting experimental debug output.</description>
               <field type="uint32_t" name="time_boot_ms">Timestamp (milliseconds since system boot)</field>
               <field type="char[10]" name="name">Name of the debug variable</field>
               <field type="int32_t" name="value">Signed integer value</field>
          </message>
          <message id="253" name="STATUSTEXT">
               <description>Status text message. These messages are printed in yellow in the COMM console of QGroundControl. WARNING: They consume quite some bandwidth, so use only for important status and error messages. If implemented wisely, these messages are buffered on the MCU and sent only at a limited rate (e.g. 10 Hz).</description>
               <field type="uint8_t" name="severity" enum="MAV_SEVERITY">Severity of status. Relies on the definitions within RFC-5424. See enum MAV_SEVERITY.</field>
               <field type="char[50]" name="text">Status text message, without null termination character</field>
          </message>
          <message id="254" name="DEBUG">
               <description>Send a debug value. The index is used to discriminate between values. These values show up in the plot of QGroundControl as DEBUG N.</description>
               <field type="uint32_t" name="time_boot_ms">Timestamp (milliseconds since system boot)</field>
               <field type="uint8_t" name="ind">index of debug variable</field>
               <field type="float" name="value">DEBUG value</field>
          </message>
     </messages>
</mavlink>
